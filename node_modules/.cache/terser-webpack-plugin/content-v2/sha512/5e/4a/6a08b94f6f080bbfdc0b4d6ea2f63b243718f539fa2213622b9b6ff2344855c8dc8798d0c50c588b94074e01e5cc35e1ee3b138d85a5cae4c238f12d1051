{"map":"{\"version\":3,\"sources\":[\"/Users/szt/Desktop/iview-admin/node_modules/marked/lib/marked.js\",\"/Users/szt/Desktop/iview-admin/node_modules/codemirror/addon/edit/continuelist.js\",\"/Users/szt/Desktop/iview-admin/node_modules/codemirror/mode/gfm/gfm.js\",\"/Users/szt/Desktop/iview-admin/node_modules/typo-js/typo.js\",\"/Users/szt/Desktop/iview-admin/node_modules/codemirror/addon/display/fullscreen.js\",\"/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"5e31ecc5-vue-loader-template\\\"}!/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Desktop/iview-admin/src/view/components/markdown/markdown.vue?vue&type=template&id=157f5a35&\",\"/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"5e31ecc5-vue-loader-template\\\"}!/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Desktop/iview-admin/src/components/markdown/markdown.vue?vue&type=template&id=b709a36e&\",\"src/components/markdown/markdown.vue\",\"/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/loaders/pitcher.js??ref--4!/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--12-0!/Users/szt/Desktop/iview-admin/node_modules/thread-loader/dist/cjs.js!/Users/szt/Desktop/iview-admin/node_modules/babel-loader/lib/index.js!/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Desktop/iview-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/szt/Desktop/iview-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/szt/Desktop/iview-admin/src/components/markdown/markdown.vue?vue&type=script&lang=js&\",\"/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Desktop/iview-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/szt/Desktop/iview-admin/src/components/markdown/markdown.vue\",\"/Users/szt/Desktop/iview-admin/src/components/markdown/index.js\",\"src/view/components/markdown/markdown.vue\",\"/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/loaders/pitcher.js??ref--4!/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--12-0!/Users/szt/Desktop/iview-admin/node_modules/thread-loader/dist/cjs.js!/Users/szt/Desktop/iview-admin/node_modules/babel-loader/lib/index.js!/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Desktop/iview-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/szt/Desktop/iview-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/szt/Desktop/iview-admin/src/view/components/markdown/markdown.vue?vue&type=script&lang=js&\",\"/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Desktop/iview-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/szt/Desktop/iview-admin/src/view/components/markdown/markdown.vue\",\"/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/loaders/pitcher.js??ref--4!/Users/szt/Desktop/iview-admin/node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!/Users/szt/Desktop/iview-admin/node_modules/css-loader/index.js??ref--10-oneOf-1-1!/Users/szt/Desktop/iview-admin/node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!/Users/szt/Desktop/iview-admin/node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Desktop/iview-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/szt/Desktop/iview-admin/src/components/markdown/markdown.vue?vue&type=style&index=0&lang=less&\",\"/Users/szt/Desktop/iview-admin/node_modules/codemirror/mode/markdown/markdown.js\",\"/Users/szt/Desktop/iview-admin/node_modules/codemirror/addon/selection/mark-selection.js\",\"/Users/szt/Desktop/iview-admin/node_modules/codemirror/addon/mode/overlay.js\",\"/Users/szt/Desktop/iview-admin/node_modules/simplemde/src/js/codemirror/tablist.js\",\"/Users/szt/Desktop/iview-admin/node_modules/codemirror/mode/xml/xml.js\",\"/Users/szt/Desktop/iview-admin/node_modules/codemirror/addon/display/placeholder.js\",\"/Users/szt/Desktop/iview-admin/node_modules/codemirror-spell-checker/src/js/spell-checker.js\",\"/Users/szt/Desktop/iview-admin/node_modules/simplemde/src/js/simplemde.js\",\"/Users/szt/Desktop/iview-admin/node_modules/codemirror/mode/meta.js\"],\"names\":[\"global\",\"root\",\"block\",\"newline\",\"code\",\"fences\",\"noop\",\"hr\",\"heading\",\"nptable\",\"blockquote\",\"list\",\"html\",\"def\",\"table\",\"lheading\",\"paragraph\",\"text\",\"Lexer\",\"options\",\"this\",\"tokens\",\"links\",\"Object\",\"create\",\"marked\",\"defaults\",\"rules\",\"normal\",\"pedantic\",\"gfm\",\"tables\",\"_label\",\"_title\",\"edit\",\"replace\",\"getRegex\",\"bullet\",\"item\",\"source\",\"_tag\",\"_comment\",\"merge\",\"lex\",\"src\",\"lexer\",\"prototype\",\"token\",\"top\",\"next\",\"loose\",\"cap\",\"bull\",\"b\",\"listStart\",\"listItems\",\"t\",\"space\",\"i\",\"tag\",\"l\",\"isordered\",\"istask\",\"ischecked\",\"exec\",\"substring\",\"length\",\"push\",\"type\",\"rtrim\",\"lang\",\"trim\",\"depth\",\"header\",\"splitCells\",\"align\",\"split\",\"cells\",\"test\",\"ordered\",\"start\",\"match\",\"indexOf\",\"RegExp\",\"smartLists\",\"slice\",\"join\",\"charAt\",\"undefined\",\"task\",\"checked\",\"sanitize\",\"pre\",\"sanitizer\",\"toLowerCase\",\"href\",\"title\",\"Error\",\"charCodeAt\",\"inline\",\"escape\",\"autolink\",\"url\",\"link\",\"reflink\",\"nolink\",\"strong\",\"em\",\"br\",\"del\",\"InlineLexer\",\"renderer\",\"Renderer\",\"breaks\",\"TextRenderer\",\"Parser\",\"slugger\",\"Slugger\",\"seen\",\"encode\",\"escapeTest\",\"escapeReplace\",\"ch\",\"replacements\",\"escapeTestNoEncode\",\"escapeReplaceNoEncode\",\"unescape\",\"_\",\"n\",\"String\",\"fromCharCode\",\"parseInt\",\"regex\",\"opt\",\"name\",\"val\",\"cleanUrl\",\"base\",\"prot\",\"decodeURIComponent\",\"e\",\"originIndependentUrl\",\"resolveUrl\",\"encodeURI\",\"baseUrls\",\"_punctuation\",\"_escapes\",\"_scheme\",\"_email\",\"_attribute\",\"_href\",\"_extended_email\",\"_backpedal\",\"output\",\"prevCapZero\",\"out\",\"inLink\",\"inRawBlock\",\"lastParenIndex\",\"findClosingBracket\",\"linkLen\",\"outputLink\",\"escapes\",\"codespan\",\"mangle\",\"smartypants\",\"image\",\"Math\",\"random\",\"toString\",\"infostring\",\"escaped\",\"highlight\",\"langPrefix\",\"quote\",\"level\",\"raw\",\"headerIds\",\"headerPrefix\",\"slug\",\"xhtml\",\"body\",\"startatt\",\"listitem\",\"checkbox\",\"tablerow\",\"content\",\"tablecell\",\"flags\",\"baseUrl\",\"parse\",\"parser\",\"inlineText\",\"reverse\",\"tok\",\"pop\",\"peek\",\"parseText\",\"row\",\"cell\",\"j\",\"errMsg\",\"silent\",\"console\",\"log\",\"value\",\"hasOwnProperty\",\"originalSlug\",\"&\",\"<\",\">\",\"\\\"\",\"'\",\"obj\",\"target\",\"key\",\"arguments\",\"call\",\"tableRow\",\"count\",\"offset\",\"str\",\"curr\",\"splice\",\"c\",\"invert\",\"suffLen\",\"currChar\",\"substr\",\"callback\",\"pending\",\"done\",\"err\",\"message\",\"setOptions\",\"getDefaults\",\"inlineLexer\",\"module\",\"exports\",\"window\",\"mod\",\"__webpack_require__\",\"CodeMirror\",\"listRE\",\"emptyListRE\",\"unorderedListRE\",\"incrementRemainingMarkdownListNumbers\",\"cm\",\"pos\",\"startLine\",\"line\",\"lookAhead\",\"skipCount\",\"startItem\",\"getLine\",\"startIndent\",\"nextLineNumber\",\"nextLine\",\"nextItem\",\"nextIndent\",\"newNumber\",\"nextNumber\",\"itemNumber\",\"isNaN\",\"replaceRange\",\"commands\",\"newlineAndIndentContinueMarkdownList\",\"getOption\",\"Pass\",\"ranges\",\"listSelections\",\"head\",\"eolState\",\"getStateAfter\",\"inList\",\"inQuote\",\"cursorBeforeBullet\",\"empty\",\"execCommand\",\"indent\",\"after\",\"numbered\",\"replaceSelections\",\"urlRE\",\"defineMode\",\"config\",\"modeConfig\",\"codeDepth\",\"blankLine\",\"state\",\"gfmOverlay\",\"startState\",\"codeBlock\",\"ateSpace\",\"copyState\",\"s\",\"stream\",\"combineTokens\",\"skipToEnd\",\"sol\",\"before\",\"eatWhile\",\"difference\",\"eatSpace\",\"gitHubSpice\",\"string\",\"markdownConfig\",\"taskLists\",\"strikethrough\",\"emoji\",\"attr\",\"overlayMode\",\"getMode\",\"defineMIME\",\"__dirname\",\"Buffer\",\"Typo\",\"dictionary\",\"affData\",\"wordsData\",\"settings\",\"dictionaryTable\",\"compoundRules\",\"compoundRuleCodes\",\"replacementTable\",\"memoized\",\"loaded\",\"path\",\"_len\",\"_jlen\",\"self\",\"readDataFile\",\"setFunc\",\"response\",\"_readFile\",\"asyncLoad\",\"then\",\"data\",\"setAffData\",\"setup\",\"setWordsData\",\"_parseAFF\",\"rule\",\"ONLYINCOMPOUND\",\"_parseDIC\",\"ruleText\",\"expressionText\",\"character\",\"loadedCallback\",\"chrome\",\"extension\",\"dictionaryPath\",\"getURL\",\"load\",\"charset\",\"async\",\"XMLHttpRequest\",\"promise\",\"req\",\"open\",\"Promise\",\"resolve\",\"reject\",\"onload\",\"status\",\"responseText\",\"statusText\",\"onerror\",\"overrideMimeType\",\"send\",\"fs\",\"existsSync\",\"stats\",\"statSync\",\"fileDescriptor\",\"openSync\",\"buffer\",\"size\",\"readSync\",\"subline\",\"numEntries\",\"lineParts\",\"_removeAffixComments\",\"lines\",\"definitionParts\",\"ruleType\",\"ruleCode\",\"combineable\",\"entries\",\"charactersToRemove\",\"additionParts\",\"charactersToAdd\",\"continuationClasses\",\"parseRuleCodes\",\"regexToMatch\",\"entry\",\"add\",\"remove\",\"_removeDicComments\",\"addWord\",\"word\",\"parts\",\"ruleCodesArray\",\"NEEDAFFIX\",\"newWords\",\"_applyRule\",\"ii\",\"_iilen\",\"newWord\",\"k\",\"combineCode\",\"combineRule\",\"otherNewWords\",\"iii\",\"_iiilen\",\"otherNewWord\",\"textCodes\",\"FLAG\",\"continuationRule\",\"concat\",\"check\",\"aWord\",\"trimmedWord\",\"checkExact\",\"toUpperCase\",\"capitalizedWord\",\"hasFlag\",\"lowercaseWord\",\"ruleCodes\",\"COMPOUNDMIN\",\"flag\",\"wordFlags\",\"Array\",\"apply\",\"alphabet\",\"suggest\",\"limit\",\"memoizedLimit\",\"replacementEntry\",\"correctedWord\",\"edits1\",\"words\",\"rv\",\"known\",\"correct\",\"ed1\",\"ed2\",\"corrections\",\"weighted_corrections\",\"sorted_corrections\",\"sorter\",\"a\",\"sort\",\"capitalization_scheme\",\"min\",\"suggestions\",\"setFullscreen\",\"wrap\",\"getWrapperElement\",\"fullScreenRestore\",\"scrollTop\",\"pageYOffset\",\"scrollLeft\",\"pageXOffset\",\"width\",\"style\",\"height\",\"className\",\"document\",\"documentElement\",\"overflow\",\"refresh\",\"setNormal\",\"info\",\"scrollTo\",\"defineOption\",\"old\",\"Init\",\"render\",\"_vm\",\"_h\",\"$createElement\",\"_c\",\"_self\",\"model\",\"$$v\",\"expression\",\"staticRenderFns\",\"markdownvue_type_template_id_b709a36e_render\",\"staticClass\",\"ref\",\"markdownvue_type_template_id_b709a36e_staticRenderFns\",\"markdownvue_type_script_lang_js_\",\"naem\",\"props\",\"default\",\"localCache\",\"Boolean\",\"editor\",\"methods\",\"addEvents\",\"_this\",\"codemirror\",\"on\",\"localStorage\",\"markdownContent\",\"$emit\",\"mounted\",\"simplemde_default\",\"assign\",\"element\",\"$refs\",\"markdown_markdownvue_type_script_lang_js_\",\"component\",\"componentNormalizer\",\"markdown\",\"MarkdownEditor\",\"components_markdown_markdownvue_type_script_lang_js_\",\"components\",\"components_markdown\",\"view_components_markdown_markdownvue_type_script_lang_js_\",\"markdown_component\",\"__webpack_exports__\",\"_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_markdown_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__\",\"_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_markdown_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default\",\"cmCfg\",\"modeCfg\",\"htmlMode\",\"htmlModeMissing\",\"findModeByName\",\"found\",\"mime\",\"mimes\",\"mode\",\"highlightFormatting\",\"maxBlockquoteDepth\",\"fencedCodeBlockHighlighting\",\"xml\",\"tokenTypeOverrides\",\"tokenTypes\",\"list1\",\"list2\",\"list3\",\"imageAltText\",\"imageMarker\",\"formatting\",\"linkInline\",\"linkEmail\",\"linkText\",\"linkHref\",\"tokenType\",\"hrRE\",\"taskListRE\",\"atxHeaderRE\",\"allowAtxHeaderWithoutSpace\",\"setextHeaderRE\",\"textRE\",\"fencedCodeRE\",\"linkDefRE\",\"punctuation\",\"expandedTab\",\"switchInline\",\"f\",\"switchBlock\",\"lineIsEmpty\",\"linkTitle\",\"indentedCode\",\"htmlBlock\",\"inlineNormal\",\"blockNormal\",\"trailingSpace\",\"trailingSpaceNewLine\",\"prevLine\",\"thisLine\",\"firstTokenOnLine\",\"column\",\"indentation\",\"prevLineLineIsEmpty\",\"prevLineIsIndentedCode\",\"prevLineIsHr\",\"prevLineIsList\",\"maxNonCodeIndentation\",\"listStack\",\"lineIndentation\",\"indentationDiff\",\"allowsInlineContinuation\",\"fencedCodeEnd\",\"isHr\",\"getType\",\"eat\",\"setext\",\"listType\",\"current\",\"taskList\",\"fencedEndRE\",\"localMode\",\"localState\",\"local\",\"footnoteLink\",\"htmlState\",\"inner\",\"innerMode\",\"tagStart\",\"context\",\"tokenize\",\"isInText\",\"md_inside\",\"returnType\",\"currListInd\",\"hasExitedList\",\"maxFencedEndInd\",\"styles\",\"taskOpen\",\"taskClosed\",\"listMod\",\"handleText\",\"matchCh\",\"previousFormatting\",\"formattingEscape\",\"end\",\"atts\",\"backUp\",\"len\",\"leftFlanking\",\"rightFlanking\",\"setEm\",\"setStrong\",\"retType\",\"getLinkHrefInside\",\"linkRE\",\")\",\"]\",\"endChar\",\"returnState\",\"footnoteLinkInside\",\"footnoteUrl\",\"textAfter\",\"closeBrackets\",\"fold\",\"onCursorActivity\",\"markedSelection\",\"operation\",\"update\",\"onChange\",\"clear\",\"prev\",\"markedSelectionStyle\",\"reset\",\"off\",\"CHUNK_SIZE\",\"Pos\",\"cmp\",\"cmpPos\",\"coverRange\",\"from\",\"to\",\"addAt\",\"array\",\"cls\",\"endLine\",\"atEnd\",\"mark\",\"markText\",\"somethingSelected\",\"getCursor\",\"coverStart\",\"find\",\"coverEnd\",\"shift\",\"overlay\",\"combine\",\"basePos\",\"baseCur\",\"overlayPos\",\"overlayCur\",\"streamSeen\",\"electricChars\",\"baseToken\",\"overlayToken\",\"tabAndIndentMarkdownList\",\"indentWithTabs\",\"spaces\",\"tabSize\",\"replaceSelection\",\"shiftTabAndUnindentMarkdownList\",\"htmlConfig\",\"autoSelfClosers\",\"area\",\"col\",\"command\",\"embed\",\"frame\",\"img\",\"input\",\"keygen\",\"meta\",\"param\",\"track\",\"wbr\",\"menuitem\",\"implicitlyClosed\",\"dd\",\"li\",\"optgroup\",\"option\",\"p\",\"rp\",\"rt\",\"tbody\",\"td\",\"tfoot\",\"th\",\"tr\",\"contextGrabbers\",\"dt\",\"address\",\"article\",\"aside\",\"dir\",\"div\",\"dl\",\"fieldset\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"hgroup\",\"menu\",\"nav\",\"ol\",\"section\",\"ul\",\"thead\",\"doNotIndent\",\"allowUnquoted\",\"allowMissing\",\"caseFold\",\"xmlConfig\",\"allowMissingTagName\",\"editorConf\",\"config_\",\"setStyle\",\"indentUnit\",\"prop\",\"inText\",\"chain\",\"ok\",\"inBlock\",\"doctype\",\"inTag\",\"baseState\",\"tagName\",\"inAttribute\",\"stringStartCol\",\"closure\",\"eol\",\"isInAttribute\",\"terminator\",\"Context\",\"startOfLine\",\"indented\",\"noIndent\",\"popContext\",\"maybePopContext\",\"nextTagName\",\"parentTagName\",\"tagNameState\",\"closeTagNameState\",\"attrState\",\"matchClosing\",\"closeState\",\"closeStateErr\",\"_stream\",\"attrEqState\",\"attrValueState\",\"attrContinuedState\",\"baseIndent\",\"fullLine\",\"multilineTagIndentPastTag\",\"multilineTagIndentFactor\",\"alignCDATA\",\"tagAfter\",\"grabbers\",\"electricInput\",\"blockCommentStart\",\"blockCommentEnd\",\"configuration\",\"helperType\",\"skipAttribute\",\"mimeModes\",\"clearPlaceholder\",\"placeholder\",\"parentNode\",\"removeChild\",\"setPlaceholder\",\"elt\",\"createElement\",\"cssText\",\"direction\",\"placeHolder\",\"createTextNode\",\"appendChild\",\"display\",\"lineSpace\",\"insertBefore\",\"firstChild\",\"onBlur\",\"isEmpty\",\"wrapper\",\"lineCount\",\"hasFocus\",\"CodeMirrorSpellChecker\",\"codeMirrorInstance\",\"includes\",\"aff_loading\",\"xhr_aff\",\"readyState\",\"aff_data\",\"num_loaded\",\"typo\",\"dic_data\",\"platform\",\"dic_loading\",\"xhr_dic\",\"rx_word\",\"backdrop\",\"isMac\",\"navigator\",\"bindings\",\"toggleBold\",\"toggleItalic\",\"drawLink\",\"toggleHeadingSmaller\",\"toggleHeadingBigger\",\"drawImage\",\"toggleBlockquote\",\"toggleOrderedList\",\"toggleUnorderedList\",\"toggleCodeBlock\",\"togglePreview\",\"toggleStrikethrough\",\"toggleHeading1\",\"toggleHeading2\",\"toggleHeading3\",\"cleanBlock\",\"drawTable\",\"drawHorizontalRule\",\"undo\",\"redo\",\"toggleSideBySide\",\"toggleFullScreen\",\"shortcuts\",\"getBindingName\",\"isMobile\",\"userAgent\",\"vendor\",\"opera\",\"fixShortcut\",\"createIcon\",\"enableTooltips\",\"el\",\"createTootlip\",\"action\",\"tabIndex\",\"createSep\",\"innerHTML\",\"actionName\",\"tooltip\",\"getState\",\"stat\",\"getTokenAt\",\"types\",\"ret\",\"bold\",\"italic\",\"saved_overflow\",\"setOption\",\"previousSibling\",\"toolbarButton\",\"toolbarElements\",\"fullscreen\",\"sidebyside\",\"nextSibling\",\"_toggleBlock\",\"blockStyles\",\"fenceCharsToInsert\",\"fencing_line\",\"token_state\",\"code_type\",\"line_num\",\"firstTok\",\"lastTok\",\"getLineHandle\",\"fencedChars\",\"insertFencingAtSelection\",\"cur_start\",\"cur_end\",\"start_line_sel\",\"end_line_sel\",\"sel_multi\",\"repl_start\",\"repl_end\",\"_replaceSelection\",\"setSelection\",\"block_start\",\"block_end\",\"is_code\",\"focus\",\"start_text\",\"start_line\",\"end_text\",\"end_line\",\"fencedTok\",\"fence_chars\",\"search_from\",\"next_line\",\"next_line_last_tok\",\"next_line_indented\",\"indentLine\",\"no_sel_and_starting_of_line\",\"_toggleLine\",\"_toggleHeading\",\"_cleanBlock\",\"promptURLs\",\"prompt\",\"promptTexts\",\"insertTexts\",\"horizontalRule\",\"preview\",\"useSideBySideListener\",\"setTimeout\",\"previewNormal\",\"lastChild\",\"toolbar\",\"toolbar_div\",\"sideBySideRenderingFunction\",\"previewRender\",\"active\",\"startEnd\",\"startPoint\",\"endPoint\",\"getSelection\",\"currHeadingLevel\",\"search\",\"repl\",\"unordered-list\",\"ordered-list\",\"map\",\"start_chars\",\"end_chars\",\"_mergeProperties\",\"property\",\"constructor\",\"extend\",\"wordCount\",\"pattern\",\"m\",\"toolbarBuiltInButtons\",\"heading-smaller\",\"heading-bigger\",\"heading-1\",\"heading-2\",\"heading-3\",\"separator-1\",\"clean-block\",\"separator-2\",\"horizontal-rule\",\"separator-3\",\"side-by-side\",\"separator-4\",\"guide\",\"separator-5\",\"SimpleMDE\",\"parent\",\"autoDownloadFA\",\"autoDownloadFontAwesome\",\"styleSheets\",\"rel\",\"getElementsByTagName\",\"showIcons\",\"plainText\",\"parsingConfig\",\"autosave\",\"unique_id\",\"uniqueId\",\"initialValue\",\"foundSavedValue\",\"isLocalStorageAvailable\",\"setItem\",\"removeItem\",\"markedOptions\",\"renderingConfig\",\"singleLineBreaks\",\"codeSyntaxHighlighting\",\"hljs\",\"highlightAuto\",\"_rendered\",\"keyMaps\",\"addEventListener\",\"event\",\"keyCode\",\"spellChecker\",\"fromTextArea\",\"theme\",\"lineNumbers\",\"autofocus\",\"extraKeys\",\"lineWrapping\",\"allowDropFileTypes\",\"getAttribute\",\"styleSelectedText\",\"forceSync\",\"save\",\"gui\",\"createToolbar\",\"statusbar\",\"createStatusbar\",\"enabled\",\"sideBySide\",\"createSideBySide\",\"temp_cm\",\"bind\",\"simplemde\",\"getItem\",\"setValue\",\"getElementById\",\"d\",\"Date\",\"hh\",\"getHours\",\"getMinutes\",\"h\",\"autosaveTimeoutId\",\"delay\",\"clearAutosavedValue\",\"cScroll\",\"pScroll\",\"v\",\"getScrollInfo\",\"clientHeight\",\"ratio\",\"parseFloat\",\"move\",\"scrollHeight\",\"onscroll\",\"items\",\"bar\",\"toolbarData\",\"toolbarGuideIcon\",\"hideIcons\",\"nonSeparatorIconsFollow\",\"x\",\"toolbarTips\",\"onclick\",\"preventDefault\",\"cmWrapper\",\"onUpdate\",\"defaultValue\",\"getValue\",\"setAttribute\",\"getDoc\",\"isPreviewActive\",\"isSideBySideActive\",\"isFullscreenActive\",\"toTextArea\",\"clearTimeout\",\"modeInfo\",\"ext\",\"file\",\"alias\",\"findModeByMIME\",\"findModeByExtension\",\"findModeByFileName\",\"filename\",\"dot\",\"lastIndexOf\"],\"mappings\":\"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\",\"sourcesContent\":[\"/**\\n * marked - a markdown parser\\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\\n * https://github.com/markedjs/marked\\n */\\n\\n;(function(root) {\\n'use strict';\\n\\n/**\\n * Block-Level Grammar\\n */\\n\\nvar block = {\\n  newline: /^\\\\n+/,\\n  code: /^( {4}[^\\\\n]+\\\\n*)+/,\\n  fences: noop,\\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)/,\\n  heading: /^ *(#{1,6}) *([^\\\\n]+?) *(?:#+ *)?(?:\\\\n+|$)/,\\n  nptable: noop,\\n  blockquote: /^( {0,3}> ?(paragraph|[^\\\\n]*)(?:\\\\n|$))+/,\\n  list: /^( {0,3})(bull) [\\\\s\\\\S]+?(?:hr|def|\\\\n{2,}(?! )(?!\\\\1bull )\\\\n*|\\\\s*$)/,\\n  html: '^ {0,3}(?:' // optional indentation\\n    + '<(script|pre|style)[\\\\\\\\s>][\\\\\\\\s\\\\\\\\S]*?(?:</\\\\\\\\1>[^\\\\\\\\n]*\\\\\\\\n+|$)' // (1)\\n    + '|comment[^\\\\\\\\n]*(\\\\\\\\n+|$)' // (2)\\n    + '|<\\\\\\\\?[\\\\\\\\s\\\\\\\\S]*?\\\\\\\\?>\\\\\\\\n*' // (3)\\n    + '|<![A-Z][\\\\\\\\s\\\\\\\\S]*?>\\\\\\\\n*' // (4)\\n    + '|<!\\\\\\\\[CDATA\\\\\\\\[[\\\\\\\\s\\\\\\\\S]*?\\\\\\\\]\\\\\\\\]>\\\\\\\\n*' // (5)\\n    + '|</?(tag)(?: +|\\\\\\\\n|/?>)[\\\\\\\\s\\\\\\\\S]*?(?:\\\\\\\\n{2,}|$)' // (6)\\n    + '|<(?!script|pre|style)([a-z][\\\\\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\\\\\t]*(?:\\\\\\\\n|$))[\\\\\\\\s\\\\\\\\S]*?(?:\\\\\\\\n{2,}|$)' // (7) open tag\\n    + '|</(?!script|pre|style)[a-z][\\\\\\\\w-]*\\\\\\\\s*>(?=[ \\\\\\\\t]*(?:\\\\\\\\n|$))[\\\\\\\\s\\\\\\\\S]*?(?:\\\\\\\\n{2,}|$)' // (7) closing tag\\n    + ')',\\n  def: /^ {0,3}\\\\[(label)\\\\]: *\\\\n? *<?([^\\\\s>]+)>?(?:(?: +\\\\n? *| *\\\\n *)(title))? *(?:\\\\n+|$)/,\\n  table: noop,\\n  lheading: /^([^\\\\n]+)\\\\n *(=|-){2,} *(?:\\\\n+|$)/,\\n  paragraph: /^([^\\\\n]+(?:\\\\n(?!hr|heading|lheading| {0,3}>|<\\\\/?(?:tag)(?: +|\\\\n|\\\\/?>)|<(?:script|pre|style|!--))[^\\\\n]+)*)/,\\n  text: /^[^\\\\n]+/\\n};\\n\\nblock._label = /(?!\\\\s*\\\\])(?:\\\\\\\\[\\\\[\\\\]]|[^\\\\[\\\\]])+/;\\nblock._title = /(?:\\\"(?:\\\\\\\\\\\"?|[^\\\"\\\\\\\\])*\\\"|'[^'\\\\n]*(?:\\\\n[^'\\\\n]+)*\\\\n?'|\\\\([^()]*\\\\))/;\\nblock.def = edit(block.def)\\n  .replace('label', block._label)\\n  .replace('title', block._title)\\n  .getRegex();\\n\\nblock.bullet = /(?:[*+-]|\\\\d{1,9}\\\\.)/;\\nblock.item = /^( *)(bull) ?[^\\\\n]*(?:\\\\n(?!\\\\1bull ?)[^\\\\n]*)*/;\\nblock.item = edit(block.item, 'gm')\\n  .replace(/bull/g, block.bullet)\\n  .getRegex();\\n\\nblock.list = edit(block.list)\\n  .replace(/bull/g, block.bullet)\\n  .replace('hr', '\\\\\\\\n+(?=\\\\\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\\\\\* *){3,})(?:\\\\\\\\n+|$))')\\n  .replace('def', '\\\\\\\\n+(?=' + block.def.source + ')')\\n  .getRegex();\\n\\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\\n  + '|track|ul';\\nblock._comment = /<!--(?!-?>)[\\\\s\\\\S]*?-->/;\\nblock.html = edit(block.html, 'i')\\n  .replace('comment', block._comment)\\n  .replace('tag', block._tag)\\n  .replace('attribute', / +[a-zA-Z:_][\\\\w.:-]*(?: *= *\\\"[^\\\"\\\\n]*\\\"| *= *'[^'\\\\n]*'| *= *[^\\\\s\\\"'=<>`]+)?/)\\n  .getRegex();\\n\\nblock.paragraph = edit(block.paragraph)\\n  .replace('hr', block.hr)\\n  .replace('heading', block.heading)\\n  .replace('lheading', block.lheading)\\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\\n  .getRegex();\\n\\nblock.blockquote = edit(block.blockquote)\\n  .replace('paragraph', block.paragraph)\\n  .getRegex();\\n\\n/**\\n * Normal Block Grammar\\n */\\n\\nblock.normal = merge({}, block);\\n\\n/**\\n * GFM Block Grammar\\n */\\n\\nblock.gfm = merge({}, block.normal, {\\n  fences: /^ {0,3}(`{3,}|~{3,})([^`\\\\n]*)\\\\n(?:|([\\\\s\\\\S]*?)\\\\n)(?: {0,3}\\\\1[~`]* *(?:\\\\n+|$)|$)/,\\n  paragraph: /^/,\\n  heading: /^ *(#{1,6}) +([^\\\\n]+?) *#* *(?:\\\\n+|$)/\\n});\\n\\nblock.gfm.paragraph = edit(block.paragraph)\\n  .replace('(?!', '(?!'\\n    + block.gfm.fences.source.replace('\\\\\\\\1', '\\\\\\\\2') + '|'\\n    + block.list.source.replace('\\\\\\\\1', '\\\\\\\\3') + '|')\\n  .getRegex();\\n\\n/**\\n * GFM + Tables Block Grammar\\n */\\n\\nblock.tables = merge({}, block.gfm, {\\n  nptable: /^ *([^|\\\\n ].*\\\\|.*)\\\\n *([-:]+ *\\\\|[-| :]*)(?:\\\\n((?:.*[^>\\\\n ].*(?:\\\\n|$))*)\\\\n*|$)/,\\n  table: /^ *\\\\|(.+)\\\\n *\\\\|?( *[-:]+[-| :]*)(?:\\\\n((?: *[^>\\\\n ].*(?:\\\\n|$))*)\\\\n*|$)/\\n});\\n\\n/**\\n * Pedantic grammar\\n */\\n\\nblock.pedantic = merge({}, block.normal, {\\n  html: edit(\\n    '^ *(?:comment *(?:\\\\\\\\n|\\\\\\\\s*$)'\\n    + '|<(tag)[\\\\\\\\s\\\\\\\\S]+?</\\\\\\\\1> *(?:\\\\\\\\n{2,}|\\\\\\\\s*$)' // closed tag\\n    + '|<tag(?:\\\"[^\\\"]*\\\"|\\\\'[^\\\\']*\\\\'|\\\\\\\\s[^\\\\'\\\"/>\\\\\\\\s]*)*?/?> *(?:\\\\\\\\n{2,}|\\\\\\\\s*$))')\\n    .replace('comment', block._comment)\\n    .replace(/tag/g, '(?!(?:'\\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\\n      + '\\\\\\\\b)\\\\\\\\w+(?!:|[^\\\\\\\\w\\\\\\\\s@]*@)\\\\\\\\b')\\n    .getRegex(),\\n  def: /^ *\\\\[([^\\\\]]+)\\\\]: *<?([^\\\\s>]+)>?(?: +([\\\"(][^\\\\n]+[\\\")]))? *(?:\\\\n+|$)/\\n});\\n\\n/**\\n * Block Lexer\\n */\\n\\nfunction Lexer(options) {\\n  this.tokens = [];\\n  this.tokens.links = Object.create(null);\\n  this.options = options || marked.defaults;\\n  this.rules = block.normal;\\n\\n  if (this.options.pedantic) {\\n    this.rules = block.pedantic;\\n  } else if (this.options.gfm) {\\n    if (this.options.tables) {\\n      this.rules = block.tables;\\n    } else {\\n      this.rules = block.gfm;\\n    }\\n  }\\n}\\n\\n/**\\n * Expose Block Rules\\n */\\n\\nLexer.rules = block;\\n\\n/**\\n * Static Lex Method\\n */\\n\\nLexer.lex = function(src, options) {\\n  var lexer = new Lexer(options);\\n  return lexer.lex(src);\\n};\\n\\n/**\\n * Preprocessing\\n */\\n\\nLexer.prototype.lex = function(src) {\\n  src = src\\n    .replace(/\\\\r\\\\n|\\\\r/g, '\\\\n')\\n    .replace(/\\\\t/g, '    ')\\n    .replace(/\\\\u00a0/g, ' ')\\n    .replace(/\\\\u2424/g, '\\\\n');\\n\\n  return this.token(src, true);\\n};\\n\\n/**\\n * Lexing\\n */\\n\\nLexer.prototype.token = function(src, top) {\\n  src = src.replace(/^ +$/gm, '');\\n  var next,\\n      loose,\\n      cap,\\n      bull,\\n      b,\\n      item,\\n      listStart,\\n      listItems,\\n      t,\\n      space,\\n      i,\\n      tag,\\n      l,\\n      isordered,\\n      istask,\\n      ischecked;\\n\\n  while (src) {\\n    // newline\\n    if (cap = this.rules.newline.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      if (cap[0].length > 1) {\\n        this.tokens.push({\\n          type: 'space'\\n        });\\n      }\\n    }\\n\\n    // code\\n    if (cap = this.rules.code.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      cap = cap[0].replace(/^ {4}/gm, '');\\n      this.tokens.push({\\n        type: 'code',\\n        text: !this.options.pedantic\\n          ? rtrim(cap, '\\\\n')\\n          : cap\\n      });\\n      continue;\\n    }\\n\\n    // fences (gfm)\\n    if (cap = this.rules.fences.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'code',\\n        lang: cap[2] ? cap[2].trim() : cap[2],\\n        text: cap[3] || ''\\n      });\\n      continue;\\n    }\\n\\n    // heading\\n    if (cap = this.rules.heading.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'heading',\\n        depth: cap[1].length,\\n        text: cap[2]\\n      });\\n      continue;\\n    }\\n\\n    // table no leading pipe (gfm)\\n    if (cap = this.rules.nptable.exec(src)) {\\n      item = {\\n        type: 'table',\\n        header: splitCells(cap[1].replace(/^ *| *\\\\| *$/g, '')),\\n        align: cap[2].replace(/^ *|\\\\| *$/g, '').split(/ *\\\\| */),\\n        cells: cap[3] ? cap[3].replace(/\\\\n$/, '').split('\\\\n') : []\\n      };\\n\\n      if (item.header.length === item.align.length) {\\n        src = src.substring(cap[0].length);\\n\\n        for (i = 0; i < item.align.length; i++) {\\n          if (/^ *-+: *$/.test(item.align[i])) {\\n            item.align[i] = 'right';\\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\\n            item.align[i] = 'center';\\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\\n            item.align[i] = 'left';\\n          } else {\\n            item.align[i] = null;\\n          }\\n        }\\n\\n        for (i = 0; i < item.cells.length; i++) {\\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\\n        }\\n\\n        this.tokens.push(item);\\n\\n        continue;\\n      }\\n    }\\n\\n    // hr\\n    if (cap = this.rules.hr.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'hr'\\n      });\\n      continue;\\n    }\\n\\n    // blockquote\\n    if (cap = this.rules.blockquote.exec(src)) {\\n      src = src.substring(cap[0].length);\\n\\n      this.tokens.push({\\n        type: 'blockquote_start'\\n      });\\n\\n      cap = cap[0].replace(/^ *> ?/gm, '');\\n\\n      // Pass `top` to keep the current\\n      // \\\"toplevel\\\" state. This is exactly\\n      // how markdown.pl works.\\n      this.token(cap, top);\\n\\n      this.tokens.push({\\n        type: 'blockquote_end'\\n      });\\n\\n      continue;\\n    }\\n\\n    // list\\n    if (cap = this.rules.list.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      bull = cap[2];\\n      isordered = bull.length > 1;\\n\\n      listStart = {\\n        type: 'list_start',\\n        ordered: isordered,\\n        start: isordered ? +bull : '',\\n        loose: false\\n      };\\n\\n      this.tokens.push(listStart);\\n\\n      // Get each top-level item.\\n      cap = cap[0].match(this.rules.item);\\n\\n      listItems = [];\\n      next = false;\\n      l = cap.length;\\n      i = 0;\\n\\n      for (; i < l; i++) {\\n        item = cap[i];\\n\\n        // Remove the list item's bullet\\n        // so it is seen as the next token.\\n        space = item.length;\\n        item = item.replace(/^ *([*+-]|\\\\d+\\\\.) */, '');\\n\\n        // Outdent whatever the\\n        // list item contains. Hacky.\\n        if (~item.indexOf('\\\\n ')) {\\n          space -= item.length;\\n          item = !this.options.pedantic\\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\\n            : item.replace(/^ {1,4}/gm, '');\\n        }\\n\\n        // Determine whether the next list item belongs here.\\n        // Backpedal if it does not belong in this list.\\n        if (i !== l - 1) {\\n          b = block.bullet.exec(cap[i + 1])[0];\\n          if (bull.length > 1 ? b.length === 1\\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\\n            src = cap.slice(i + 1).join('\\\\n') + src;\\n            i = l - 1;\\n          }\\n        }\\n\\n        // Determine whether item is loose or not.\\n        // Use: /(^|\\\\n)(?! )[^\\\\n]+\\\\n\\\\n(?!\\\\s*$)/\\n        // for discount behavior.\\n        loose = next || /\\\\n\\\\n(?!\\\\s*$)/.test(item);\\n        if (i !== l - 1) {\\n          next = item.charAt(item.length - 1) === '\\\\n';\\n          if (!loose) loose = next;\\n        }\\n\\n        if (loose) {\\n          listStart.loose = true;\\n        }\\n\\n        // Check for task list items\\n        istask = /^\\\\[[ xX]\\\\] /.test(item);\\n        ischecked = undefined;\\n        if (istask) {\\n          ischecked = item[1] !== ' ';\\n          item = item.replace(/^\\\\[[ xX]\\\\] +/, '');\\n        }\\n\\n        t = {\\n          type: 'list_item_start',\\n          task: istask,\\n          checked: ischecked,\\n          loose: loose\\n        };\\n\\n        listItems.push(t);\\n        this.tokens.push(t);\\n\\n        // Recurse.\\n        this.token(item, false);\\n\\n        this.tokens.push({\\n          type: 'list_item_end'\\n        });\\n      }\\n\\n      if (listStart.loose) {\\n        l = listItems.length;\\n        i = 0;\\n        for (; i < l; i++) {\\n          listItems[i].loose = true;\\n        }\\n      }\\n\\n      this.tokens.push({\\n        type: 'list_end'\\n      });\\n\\n      continue;\\n    }\\n\\n    // html\\n    if (cap = this.rules.html.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: this.options.sanitize\\n          ? 'paragraph'\\n          : 'html',\\n        pre: !this.options.sanitizer\\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\\n        text: cap[0]\\n      });\\n      continue;\\n    }\\n\\n    // def\\n    if (top && (cap = this.rules.def.exec(src))) {\\n      src = src.substring(cap[0].length);\\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\\n      tag = cap[1].toLowerCase().replace(/\\\\s+/g, ' ');\\n      if (!this.tokens.links[tag]) {\\n        this.tokens.links[tag] = {\\n          href: cap[2],\\n          title: cap[3]\\n        };\\n      }\\n      continue;\\n    }\\n\\n    // table (gfm)\\n    if (cap = this.rules.table.exec(src)) {\\n      item = {\\n        type: 'table',\\n        header: splitCells(cap[1].replace(/^ *| *\\\\| *$/g, '')),\\n        align: cap[2].replace(/^ *|\\\\| *$/g, '').split(/ *\\\\| */),\\n        cells: cap[3] ? cap[3].replace(/\\\\n$/, '').split('\\\\n') : []\\n      };\\n\\n      if (item.header.length === item.align.length) {\\n        src = src.substring(cap[0].length);\\n\\n        for (i = 0; i < item.align.length; i++) {\\n          if (/^ *-+: *$/.test(item.align[i])) {\\n            item.align[i] = 'right';\\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\\n            item.align[i] = 'center';\\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\\n            item.align[i] = 'left';\\n          } else {\\n            item.align[i] = null;\\n          }\\n        }\\n\\n        for (i = 0; i < item.cells.length; i++) {\\n          item.cells[i] = splitCells(\\n            item.cells[i].replace(/^ *\\\\| *| *\\\\| *$/g, ''),\\n            item.header.length);\\n        }\\n\\n        this.tokens.push(item);\\n\\n        continue;\\n      }\\n    }\\n\\n    // lheading\\n    if (cap = this.rules.lheading.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'heading',\\n        depth: cap[2] === '=' ? 1 : 2,\\n        text: cap[1]\\n      });\\n      continue;\\n    }\\n\\n    // top-level paragraph\\n    if (top && (cap = this.rules.paragraph.exec(src))) {\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'paragraph',\\n        text: cap[1].charAt(cap[1].length - 1) === '\\\\n'\\n          ? cap[1].slice(0, -1)\\n          : cap[1]\\n      });\\n      continue;\\n    }\\n\\n    // text\\n    if (cap = this.rules.text.exec(src)) {\\n      // Top-level should never reach here.\\n      src = src.substring(cap[0].length);\\n      this.tokens.push({\\n        type: 'text',\\n        text: cap[0]\\n      });\\n      continue;\\n    }\\n\\n    if (src) {\\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\\n    }\\n  }\\n\\n  return this.tokens;\\n};\\n\\n/**\\n * Inline-Level Grammar\\n */\\n\\nvar inline = {\\n  escape: /^\\\\\\\\([!\\\"#$%&'()*+,\\\\-./:;<=>?@\\\\[\\\\]\\\\\\\\^_`{|}~])/,\\n  autolink: /^<(scheme:[^\\\\s\\\\x00-\\\\x1f<>]*|email)>/,\\n  url: noop,\\n  tag: '^comment'\\n    + '|^</[a-zA-Z][\\\\\\\\w:-]*\\\\\\\\s*>' // self-closing tag\\n    + '|^<[a-zA-Z][\\\\\\\\w-]*(?:attribute)*?\\\\\\\\s*/?>' // open tag\\n    + '|^<\\\\\\\\?[\\\\\\\\s\\\\\\\\S]*?\\\\\\\\?>' // processing instruction, e.g. <?php ?>\\n    + '|^<![a-zA-Z]+\\\\\\\\s[\\\\\\\\s\\\\\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\\n    + '|^<!\\\\\\\\[CDATA\\\\\\\\[[\\\\\\\\s\\\\\\\\S]*?\\\\\\\\]\\\\\\\\]>', // CDATA section\\n  link: /^!?\\\\[(label)\\\\]\\\\(href(?:\\\\s+(title))?\\\\s*\\\\)/,\\n  reflink: /^!?\\\\[(label)\\\\]\\\\[(?!\\\\s*\\\\])((?:\\\\\\\\[\\\\[\\\\]]?|[^\\\\[\\\\]\\\\\\\\])+)\\\\]/,\\n  nolink: /^!?\\\\[(?!\\\\s*\\\\])((?:\\\\[[^\\\\[\\\\]]*\\\\]|\\\\\\\\[\\\\[\\\\]]|[^\\\\[\\\\]])*)\\\\](?:\\\\[\\\\])?/,\\n  strong: /^__([^\\\\s_])__(?!_)|^\\\\*\\\\*([^\\\\s*])\\\\*\\\\*(?!\\\\*)|^__([^\\\\s][\\\\s\\\\S]*?[^\\\\s])__(?!_)|^\\\\*\\\\*([^\\\\s][\\\\s\\\\S]*?[^\\\\s])\\\\*\\\\*(?!\\\\*)/,\\n  em: /^_([^\\\\s_])_(?!_)|^\\\\*([^\\\\s*\\\"<\\\\[])\\\\*(?!\\\\*)|^_([^\\\\s][\\\\s\\\\S]*?[^\\\\s_])_(?!_|[^\\\\spunctuation])|^_([^\\\\s_][\\\\s\\\\S]*?[^\\\\s])_(?!_|[^\\\\spunctuation])|^\\\\*([^\\\\s\\\"<\\\\[][\\\\s\\\\S]*?[^\\\\s*])\\\\*(?!\\\\*)|^\\\\*([^\\\\s*\\\"<\\\\[][\\\\s\\\\S]*?[^\\\\s])\\\\*(?!\\\\*)/,\\n  code: /^(`+)([^`]|[^`][\\\\s\\\\S]*?[^`])\\\\1(?!`)/,\\n  br: /^( {2,}|\\\\\\\\)\\\\n(?!\\\\s*$)/,\\n  del: noop,\\n  text: /^(`+|[^`])(?:[\\\\s\\\\S]*?(?:(?=[\\\\\\\\<!\\\\[`*]|\\\\b_|$)|[^ ](?= {2,}\\\\n))|(?= {2,}\\\\n))/\\n};\\n\\n// list of punctuation marks from common mark spec\\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\\ninline._punctuation = '!\\\"#$%&\\\\'()*+,\\\\\\\\-./:;<=>?@\\\\\\\\[^_{|}~';\\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\\n\\ninline._escapes = /\\\\\\\\([!\\\"#$%&'()*+,\\\\-./:;<=>?@\\\\[\\\\]\\\\\\\\^_`{|}~])/g;\\n\\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\\ninline.autolink = edit(inline.autolink)\\n  .replace('scheme', inline._scheme)\\n  .replace('email', inline._email)\\n  .getRegex();\\n\\ninline._attribute = /\\\\s+[a-zA-Z:_][\\\\w.:-]*(?:\\\\s*=\\\\s*\\\"[^\\\"]*\\\"|\\\\s*=\\\\s*'[^']*'|\\\\s*=\\\\s*[^\\\\s\\\"'=<>`]+)?/;\\n\\ninline.tag = edit(inline.tag)\\n  .replace('comment', block._comment)\\n  .replace('attribute', inline._attribute)\\n  .getRegex();\\n\\ninline._label = /(?:\\\\[[^\\\\[\\\\]]*\\\\]|\\\\\\\\[\\\\[\\\\]]?|`[^`]*`|`(?!`)|[^\\\\[\\\\]\\\\\\\\`])*?/;\\ninline._href = /\\\\s*(<(?:\\\\\\\\[<>]?|[^\\\\s<>\\\\\\\\])*>|[^\\\\s\\\\x00-\\\\x1f]*)/;\\ninline._title = /\\\"(?:\\\\\\\\\\\"?|[^\\\"\\\\\\\\])*\\\"|'(?:\\\\\\\\'?|[^'\\\\\\\\])*'|\\\\((?:\\\\\\\\\\\\)?|[^)\\\\\\\\])*\\\\)/;\\n\\ninline.link = edit(inline.link)\\n  .replace('label', inline._label)\\n  .replace('href', inline._href)\\n  .replace('title', inline._title)\\n  .getRegex();\\n\\ninline.reflink = edit(inline.reflink)\\n  .replace('label', inline._label)\\n  .getRegex();\\n\\n/**\\n * Normal Inline Grammar\\n */\\n\\ninline.normal = merge({}, inline);\\n\\n/**\\n * Pedantic Inline Grammar\\n */\\n\\ninline.pedantic = merge({}, inline.normal, {\\n  strong: /^__(?=\\\\S)([\\\\s\\\\S]*?\\\\S)__(?!_)|^\\\\*\\\\*(?=\\\\S)([\\\\s\\\\S]*?\\\\S)\\\\*\\\\*(?!\\\\*)/,\\n  em: /^_(?=\\\\S)([\\\\s\\\\S]*?\\\\S)_(?!_)|^\\\\*(?=\\\\S)([\\\\s\\\\S]*?\\\\S)\\\\*(?!\\\\*)/,\\n  link: edit(/^!?\\\\[(label)\\\\]\\\\((.*?)\\\\)/)\\n    .replace('label', inline._label)\\n    .getRegex(),\\n  reflink: edit(/^!?\\\\[(label)\\\\]\\\\s*\\\\[([^\\\\]]*)\\\\]/)\\n    .replace('label', inline._label)\\n    .getRegex()\\n});\\n\\n/**\\n * GFM Inline Grammar\\n */\\n\\ninline.gfm = merge({}, inline.normal, {\\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\\n  url: /^((?:ftp|https?):\\\\/\\\\/|www\\\\.)(?:[a-zA-Z0-9\\\\-]+\\\\.?)+[^\\\\s<]*|^email/,\\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\\\([^)]*\\\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\\n  del: /^~+(?=\\\\S)([\\\\s\\\\S]*?\\\\S)~+/,\\n  text: /^(`+|[^`])(?:[\\\\s\\\\S]*?(?:(?=[\\\\\\\\<!\\\\[`*~]|\\\\b_|https?:\\\\/\\\\/|ftp:\\\\/\\\\/|www\\\\.|$)|[^ ](?= {2,}\\\\n)|[^a-zA-Z0-9.!#$%&'*+\\\\/=?_`{\\\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\\\/=?_`{\\\\|}~-]+@))|(?= {2,}\\\\n|[a-zA-Z0-9.!#$%&'*+\\\\/=?_`{\\\\|}~-]+@))/\\n});\\n\\ninline.gfm.url = edit(inline.gfm.url, 'i')\\n  .replace('email', inline.gfm._extended_email)\\n  .getRegex();\\n/**\\n * GFM + Line Breaks Inline Grammar\\n */\\n\\ninline.breaks = merge({}, inline.gfm, {\\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\\n  text: edit(inline.gfm.text).replace(/\\\\{2,\\\\}/g, '*').getRegex()\\n});\\n\\n/**\\n * Inline Lexer & Compiler\\n */\\n\\nfunction InlineLexer(links, options) {\\n  this.options = options || marked.defaults;\\n  this.links = links;\\n  this.rules = inline.normal;\\n  this.renderer = this.options.renderer || new Renderer();\\n  this.renderer.options = this.options;\\n\\n  if (!this.links) {\\n    throw new Error('Tokens array requires a `links` property.');\\n  }\\n\\n  if (this.options.pedantic) {\\n    this.rules = inline.pedantic;\\n  } else if (this.options.gfm) {\\n    if (this.options.breaks) {\\n      this.rules = inline.breaks;\\n    } else {\\n      this.rules = inline.gfm;\\n    }\\n  }\\n}\\n\\n/**\\n * Expose Inline Rules\\n */\\n\\nInlineLexer.rules = inline;\\n\\n/**\\n * Static Lexing/Compiling Method\\n */\\n\\nInlineLexer.output = function(src, links, options) {\\n  var inline = new InlineLexer(links, options);\\n  return inline.output(src);\\n};\\n\\n/**\\n * Lexing/Compiling\\n */\\n\\nInlineLexer.prototype.output = function(src) {\\n  var out = '',\\n      link,\\n      text,\\n      href,\\n      title,\\n      cap,\\n      prevCapZero;\\n\\n  while (src) {\\n    // escape\\n    if (cap = this.rules.escape.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += escape(cap[1]);\\n      continue;\\n    }\\n\\n    // tag\\n    if (cap = this.rules.tag.exec(src)) {\\n      if (!this.inLink && /^<a /i.test(cap[0])) {\\n        this.inLink = true;\\n      } else if (this.inLink && /^<\\\\/a>/i.test(cap[0])) {\\n        this.inLink = false;\\n      }\\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\\\s|>)/i.test(cap[0])) {\\n        this.inRawBlock = true;\\n      } else if (this.inRawBlock && /^<\\\\/(pre|code|kbd|script)(\\\\s|>)/i.test(cap[0])) {\\n        this.inRawBlock = false;\\n      }\\n\\n      src = src.substring(cap[0].length);\\n      out += this.options.sanitize\\n        ? this.options.sanitizer\\n          ? this.options.sanitizer(cap[0])\\n          : escape(cap[0])\\n        : cap[0];\\n      continue;\\n    }\\n\\n    // link\\n    if (cap = this.rules.link.exec(src)) {\\n      var lastParenIndex = findClosingBracket(cap[2], '()');\\n      if (lastParenIndex > -1) {\\n        var linkLen = cap[0].length - (cap[2].length - lastParenIndex) - (cap[3] || '').length;\\n        cap[2] = cap[2].substring(0, lastParenIndex);\\n        cap[0] = cap[0].substring(0, linkLen).trim();\\n        cap[3] = '';\\n      }\\n      src = src.substring(cap[0].length);\\n      this.inLink = true;\\n      href = cap[2];\\n      if (this.options.pedantic) {\\n        link = /^([^'\\\"]*[^\\\\s])\\\\s+(['\\\"])(.*)\\\\2/.exec(href);\\n\\n        if (link) {\\n          href = link[1];\\n          title = link[3];\\n        } else {\\n          title = '';\\n        }\\n      } else {\\n        title = cap[3] ? cap[3].slice(1, -1) : '';\\n      }\\n      href = href.trim().replace(/^<([\\\\s\\\\S]*)>$/, '$1');\\n      out += this.outputLink(cap, {\\n        href: InlineLexer.escapes(href),\\n        title: InlineLexer.escapes(title)\\n      });\\n      this.inLink = false;\\n      continue;\\n    }\\n\\n    // reflink, nolink\\n    if ((cap = this.rules.reflink.exec(src))\\n        || (cap = this.rules.nolink.exec(src))) {\\n      src = src.substring(cap[0].length);\\n      link = (cap[2] || cap[1]).replace(/\\\\s+/g, ' ');\\n      link = this.links[link.toLowerCase()];\\n      if (!link || !link.href) {\\n        out += cap[0].charAt(0);\\n        src = cap[0].substring(1) + src;\\n        continue;\\n      }\\n      this.inLink = true;\\n      out += this.outputLink(cap, link);\\n      this.inLink = false;\\n      continue;\\n    }\\n\\n    // strong\\n    if (cap = this.rules.strong.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\\n      continue;\\n    }\\n\\n    // em\\n    if (cap = this.rules.em.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\\n      continue;\\n    }\\n\\n    // code\\n    if (cap = this.rules.code.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\\n      continue;\\n    }\\n\\n    // br\\n    if (cap = this.rules.br.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.br();\\n      continue;\\n    }\\n\\n    // del (gfm)\\n    if (cap = this.rules.del.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.del(this.output(cap[1]));\\n      continue;\\n    }\\n\\n    // autolink\\n    if (cap = this.rules.autolink.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      if (cap[2] === '@') {\\n        text = escape(this.mangle(cap[1]));\\n        href = 'mailto:' + text;\\n      } else {\\n        text = escape(cap[1]);\\n        href = text;\\n      }\\n      out += this.renderer.link(href, null, text);\\n      continue;\\n    }\\n\\n    // url (gfm)\\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\\n      if (cap[2] === '@') {\\n        text = escape(cap[0]);\\n        href = 'mailto:' + text;\\n      } else {\\n        // do extended autolink path validation\\n        do {\\n          prevCapZero = cap[0];\\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\\n        } while (prevCapZero !== cap[0]);\\n        text = escape(cap[0]);\\n        if (cap[1] === 'www.') {\\n          href = 'http://' + text;\\n        } else {\\n          href = text;\\n        }\\n      }\\n      src = src.substring(cap[0].length);\\n      out += this.renderer.link(href, null, text);\\n      continue;\\n    }\\n\\n    // text\\n    if (cap = this.rules.text.exec(src)) {\\n      src = src.substring(cap[0].length);\\n      if (this.inRawBlock) {\\n        out += this.renderer.text(cap[0]);\\n      } else {\\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\\n      }\\n      continue;\\n    }\\n\\n    if (src) {\\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\\n    }\\n  }\\n\\n  return out;\\n};\\n\\nInlineLexer.escapes = function(text) {\\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\\n};\\n\\n/**\\n * Compile Link\\n */\\n\\nInlineLexer.prototype.outputLink = function(cap, link) {\\n  var href = link.href,\\n      title = link.title ? escape(link.title) : null;\\n\\n  return cap[0].charAt(0) !== '!'\\n    ? this.renderer.link(href, title, this.output(cap[1]))\\n    : this.renderer.image(href, title, escape(cap[1]));\\n};\\n\\n/**\\n * Smartypants Transformations\\n */\\n\\nInlineLexer.prototype.smartypants = function(text) {\\n  if (!this.options.smartypants) return text;\\n  return text\\n    // em-dashes\\n    .replace(/---/g, '\\\\u2014')\\n    // en-dashes\\n    .replace(/--/g, '\\\\u2013')\\n    // opening singles\\n    .replace(/(^|[-\\\\u2014/(\\\\[{\\\"\\\\s])'/g, '$1\\\\u2018')\\n    // closing singles & apostrophes\\n    .replace(/'/g, '\\\\u2019')\\n    // opening doubles\\n    .replace(/(^|[-\\\\u2014/(\\\\[{\\\\u2018\\\\s])\\\"/g, '$1\\\\u201c')\\n    // closing doubles\\n    .replace(/\\\"/g, '\\\\u201d')\\n    // ellipses\\n    .replace(/\\\\.{3}/g, '\\\\u2026');\\n};\\n\\n/**\\n * Mangle Links\\n */\\n\\nInlineLexer.prototype.mangle = function(text) {\\n  if (!this.options.mangle) return text;\\n  var out = '',\\n      l = text.length,\\n      i = 0,\\n      ch;\\n\\n  for (; i < l; i++) {\\n    ch = text.charCodeAt(i);\\n    if (Math.random() > 0.5) {\\n      ch = 'x' + ch.toString(16);\\n    }\\n    out += '&#' + ch + ';';\\n  }\\n\\n  return out;\\n};\\n\\n/**\\n * Renderer\\n */\\n\\nfunction Renderer(options) {\\n  this.options = options || marked.defaults;\\n}\\n\\nRenderer.prototype.code = function(code, infostring, escaped) {\\n  var lang = (infostring || '').match(/\\\\S*/)[0];\\n  if (this.options.highlight) {\\n    var out = this.options.highlight(code, lang);\\n    if (out != null && out !== code) {\\n      escaped = true;\\n      code = out;\\n    }\\n  }\\n\\n  if (!lang) {\\n    return '<pre><code>'\\n      + (escaped ? code : escape(code, true))\\n      + '</code></pre>';\\n  }\\n\\n  return '<pre><code class=\\\"'\\n    + this.options.langPrefix\\n    + escape(lang, true)\\n    + '\\\">'\\n    + (escaped ? code : escape(code, true))\\n    + '</code></pre>\\\\n';\\n};\\n\\nRenderer.prototype.blockquote = function(quote) {\\n  return '<blockquote>\\\\n' + quote + '</blockquote>\\\\n';\\n};\\n\\nRenderer.prototype.html = function(html) {\\n  return html;\\n};\\n\\nRenderer.prototype.heading = function(text, level, raw, slugger) {\\n  if (this.options.headerIds) {\\n    return '<h'\\n      + level\\n      + ' id=\\\"'\\n      + this.options.headerPrefix\\n      + slugger.slug(raw)\\n      + '\\\">'\\n      + text\\n      + '</h'\\n      + level\\n      + '>\\\\n';\\n  }\\n  // ignore IDs\\n  return '<h' + level + '>' + text + '</h' + level + '>\\\\n';\\n};\\n\\nRenderer.prototype.hr = function() {\\n  return this.options.xhtml ? '<hr/>\\\\n' : '<hr>\\\\n';\\n};\\n\\nRenderer.prototype.list = function(body, ordered, start) {\\n  var type = ordered ? 'ol' : 'ul',\\n      startatt = (ordered && start !== 1) ? (' start=\\\"' + start + '\\\"') : '';\\n  return '<' + type + startatt + '>\\\\n' + body + '</' + type + '>\\\\n';\\n};\\n\\nRenderer.prototype.listitem = function(text) {\\n  return '<li>' + text + '</li>\\\\n';\\n};\\n\\nRenderer.prototype.checkbox = function(checked) {\\n  return '<input '\\n    + (checked ? 'checked=\\\"\\\" ' : '')\\n    + 'disabled=\\\"\\\" type=\\\"checkbox\\\"'\\n    + (this.options.xhtml ? ' /' : '')\\n    + '> ';\\n};\\n\\nRenderer.prototype.paragraph = function(text) {\\n  return '<p>' + text + '</p>\\\\n';\\n};\\n\\nRenderer.prototype.table = function(header, body) {\\n  if (body) body = '<tbody>' + body + '</tbody>';\\n\\n  return '<table>\\\\n'\\n    + '<thead>\\\\n'\\n    + header\\n    + '</thead>\\\\n'\\n    + body\\n    + '</table>\\\\n';\\n};\\n\\nRenderer.prototype.tablerow = function(content) {\\n  return '<tr>\\\\n' + content + '</tr>\\\\n';\\n};\\n\\nRenderer.prototype.tablecell = function(content, flags) {\\n  var type = flags.header ? 'th' : 'td';\\n  var tag = flags.align\\n    ? '<' + type + ' align=\\\"' + flags.align + '\\\">'\\n    : '<' + type + '>';\\n  return tag + content + '</' + type + '>\\\\n';\\n};\\n\\n// span level renderer\\nRenderer.prototype.strong = function(text) {\\n  return '<strong>' + text + '</strong>';\\n};\\n\\nRenderer.prototype.em = function(text) {\\n  return '<em>' + text + '</em>';\\n};\\n\\nRenderer.prototype.codespan = function(text) {\\n  return '<code>' + text + '</code>';\\n};\\n\\nRenderer.prototype.br = function() {\\n  return this.options.xhtml ? '<br/>' : '<br>';\\n};\\n\\nRenderer.prototype.del = function(text) {\\n  return '<del>' + text + '</del>';\\n};\\n\\nRenderer.prototype.link = function(href, title, text) {\\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\\n  if (href === null) {\\n    return text;\\n  }\\n  var out = '<a href=\\\"' + escape(href) + '\\\"';\\n  if (title) {\\n    out += ' title=\\\"' + title + '\\\"';\\n  }\\n  out += '>' + text + '</a>';\\n  return out;\\n};\\n\\nRenderer.prototype.image = function(href, title, text) {\\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\\n  if (href === null) {\\n    return text;\\n  }\\n\\n  var out = '<img src=\\\"' + href + '\\\" alt=\\\"' + text + '\\\"';\\n  if (title) {\\n    out += ' title=\\\"' + title + '\\\"';\\n  }\\n  out += this.options.xhtml ? '/>' : '>';\\n  return out;\\n};\\n\\nRenderer.prototype.text = function(text) {\\n  return text;\\n};\\n\\n/**\\n * TextRenderer\\n * returns only the textual part of the token\\n */\\n\\nfunction TextRenderer() {}\\n\\n// no need for block level renderers\\n\\nTextRenderer.prototype.strong =\\nTextRenderer.prototype.em =\\nTextRenderer.prototype.codespan =\\nTextRenderer.prototype.del =\\nTextRenderer.prototype.text = function (text) {\\n  return text;\\n};\\n\\nTextRenderer.prototype.link =\\nTextRenderer.prototype.image = function(href, title, text) {\\n  return '' + text;\\n};\\n\\nTextRenderer.prototype.br = function() {\\n  return '';\\n};\\n\\n/**\\n * Parsing & Compiling\\n */\\n\\nfunction Parser(options) {\\n  this.tokens = [];\\n  this.token = null;\\n  this.options = options || marked.defaults;\\n  this.options.renderer = this.options.renderer || new Renderer();\\n  this.renderer = this.options.renderer;\\n  this.renderer.options = this.options;\\n  this.slugger = new Slugger();\\n}\\n\\n/**\\n * Static Parse Method\\n */\\n\\nParser.parse = function(src, options) {\\n  var parser = new Parser(options);\\n  return parser.parse(src);\\n};\\n\\n/**\\n * Parse Loop\\n */\\n\\nParser.prototype.parse = function(src) {\\n  this.inline = new InlineLexer(src.links, this.options);\\n  // use an InlineLexer with a TextRenderer to extract pure text\\n  this.inlineText = new InlineLexer(\\n    src.links,\\n    merge({}, this.options, {renderer: new TextRenderer()})\\n  );\\n  this.tokens = src.reverse();\\n\\n  var out = '';\\n  while (this.next()) {\\n    out += this.tok();\\n  }\\n\\n  return out;\\n};\\n\\n/**\\n * Next Token\\n */\\n\\nParser.prototype.next = function() {\\n  return this.token = this.tokens.pop();\\n};\\n\\n/**\\n * Preview Next Token\\n */\\n\\nParser.prototype.peek = function() {\\n  return this.tokens[this.tokens.length - 1] || 0;\\n};\\n\\n/**\\n * Parse Text Tokens\\n */\\n\\nParser.prototype.parseText = function() {\\n  var body = this.token.text;\\n\\n  while (this.peek().type === 'text') {\\n    body += '\\\\n' + this.next().text;\\n  }\\n\\n  return this.inline.output(body);\\n};\\n\\n/**\\n * Parse Current Token\\n */\\n\\nParser.prototype.tok = function() {\\n  switch (this.token.type) {\\n    case 'space': {\\n      return '';\\n    }\\n    case 'hr': {\\n      return this.renderer.hr();\\n    }\\n    case 'heading': {\\n      return this.renderer.heading(\\n        this.inline.output(this.token.text),\\n        this.token.depth,\\n        unescape(this.inlineText.output(this.token.text)),\\n        this.slugger);\\n    }\\n    case 'code': {\\n      return this.renderer.code(this.token.text,\\n        this.token.lang,\\n        this.token.escaped);\\n    }\\n    case 'table': {\\n      var header = '',\\n          body = '',\\n          i,\\n          row,\\n          cell,\\n          j;\\n\\n      // header\\n      cell = '';\\n      for (i = 0; i < this.token.header.length; i++) {\\n        cell += this.renderer.tablecell(\\n          this.inline.output(this.token.header[i]),\\n          { header: true, align: this.token.align[i] }\\n        );\\n      }\\n      header += this.renderer.tablerow(cell);\\n\\n      for (i = 0; i < this.token.cells.length; i++) {\\n        row = this.token.cells[i];\\n\\n        cell = '';\\n        for (j = 0; j < row.length; j++) {\\n          cell += this.renderer.tablecell(\\n            this.inline.output(row[j]),\\n            { header: false, align: this.token.align[j] }\\n          );\\n        }\\n\\n        body += this.renderer.tablerow(cell);\\n      }\\n      return this.renderer.table(header, body);\\n    }\\n    case 'blockquote_start': {\\n      body = '';\\n\\n      while (this.next().type !== 'blockquote_end') {\\n        body += this.tok();\\n      }\\n\\n      return this.renderer.blockquote(body);\\n    }\\n    case 'list_start': {\\n      body = '';\\n      var ordered = this.token.ordered,\\n          start = this.token.start;\\n\\n      while (this.next().type !== 'list_end') {\\n        body += this.tok();\\n      }\\n\\n      return this.renderer.list(body, ordered, start);\\n    }\\n    case 'list_item_start': {\\n      body = '';\\n      var loose = this.token.loose;\\n      var checked = this.token.checked;\\n      var task = this.token.task;\\n\\n      if (this.token.task) {\\n        body += this.renderer.checkbox(checked);\\n      }\\n\\n      while (this.next().type !== 'list_item_end') {\\n        body += !loose && this.token.type === 'text'\\n          ? this.parseText()\\n          : this.tok();\\n      }\\n      return this.renderer.listitem(body, task, checked);\\n    }\\n    case 'html': {\\n      // TODO parse inline content if parameter markdown=1\\n      return this.renderer.html(this.token.text);\\n    }\\n    case 'paragraph': {\\n      return this.renderer.paragraph(this.inline.output(this.token.text));\\n    }\\n    case 'text': {\\n      return this.renderer.paragraph(this.parseText());\\n    }\\n    default: {\\n      var errMsg = 'Token with \\\"' + this.token.type + '\\\" type was not found.';\\n      if (this.options.silent) {\\n        console.log(errMsg);\\n      } else {\\n        throw new Error(errMsg);\\n      }\\n    }\\n  }\\n};\\n\\n/**\\n * Slugger generates header id\\n */\\n\\nfunction Slugger () {\\n  this.seen = {};\\n}\\n\\n/**\\n * Convert string to unique id\\n */\\n\\nSlugger.prototype.slug = function (value) {\\n  var slug = value\\n    .toLowerCase()\\n    .trim()\\n    .replace(/[\\\\u2000-\\\\u206F\\\\u2E00-\\\\u2E7F\\\\\\\\'!\\\"#$%&()*+,./:;<=>?@[\\\\]^`{|}~]/g, '')\\n    .replace(/\\\\s/g, '-');\\n\\n  if (this.seen.hasOwnProperty(slug)) {\\n    var originalSlug = slug;\\n    do {\\n      this.seen[originalSlug]++;\\n      slug = originalSlug + '-' + this.seen[originalSlug];\\n    } while (this.seen.hasOwnProperty(slug));\\n  }\\n  this.seen[slug] = 0;\\n\\n  return slug;\\n};\\n\\n/**\\n * Helpers\\n */\\n\\nfunction escape(html, encode) {\\n  if (encode) {\\n    if (escape.escapeTest.test(html)) {\\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });\\n    }\\n  } else {\\n    if (escape.escapeTestNoEncode.test(html)) {\\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });\\n    }\\n  }\\n\\n  return html;\\n}\\n\\nescape.escapeTest = /[&<>\\\"']/;\\nescape.escapeReplace = /[&<>\\\"']/g;\\nescape.replacements = {\\n  '&': '&amp;',\\n  '<': '&lt;',\\n  '>': '&gt;',\\n  '\\\"': '&quot;',\\n  \\\"'\\\": '&#39;'\\n};\\n\\nescape.escapeTestNoEncode = /[<>\\\"']|&(?!#?\\\\w+;)/;\\nescape.escapeReplaceNoEncode = /[<>\\\"']|&(?!#?\\\\w+;)/g;\\n\\nfunction unescape(html) {\\n  // explicitly match decimal, hex, and named HTML entities\\n  return html.replace(/&(#(?:\\\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\\\w+));?/ig, function(_, n) {\\n    n = n.toLowerCase();\\n    if (n === 'colon') return ':';\\n    if (n.charAt(0) === '#') {\\n      return n.charAt(1) === 'x'\\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\\n        : String.fromCharCode(+n.substring(1));\\n    }\\n    return '';\\n  });\\n}\\n\\nfunction edit(regex, opt) {\\n  regex = regex.source || regex;\\n  opt = opt || '';\\n  return {\\n    replace: function(name, val) {\\n      val = val.source || val;\\n      val = val.replace(/(^|[^\\\\[])\\\\^/g, '$1');\\n      regex = regex.replace(name, val);\\n      return this;\\n    },\\n    getRegex: function() {\\n      return new RegExp(regex, opt);\\n    }\\n  };\\n}\\n\\nfunction cleanUrl(sanitize, base, href) {\\n  if (sanitize) {\\n    try {\\n      var prot = decodeURIComponent(unescape(href))\\n        .replace(/[^\\\\w:]/g, '')\\n        .toLowerCase();\\n    } catch (e) {\\n      return null;\\n    }\\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\\n      return null;\\n    }\\n  }\\n  if (base && !originIndependentUrl.test(href)) {\\n    href = resolveUrl(base, href);\\n  }\\n  try {\\n    href = encodeURI(href).replace(/%25/g, '%');\\n  } catch (e) {\\n    return null;\\n  }\\n  return href;\\n}\\n\\nfunction resolveUrl(base, href) {\\n  if (!baseUrls[' ' + base]) {\\n    // we can ignore everything in base after the last slash of its path component,\\n    // but we might need to add _that_\\n    // https://tools.ietf.org/html/rfc3986#section-3\\n    if (/^[^:]+:\\\\/*[^/]*$/.test(base)) {\\n      baseUrls[' ' + base] = base + '/';\\n    } else {\\n      baseUrls[' ' + base] = rtrim(base, '/', true);\\n    }\\n  }\\n  base = baseUrls[' ' + base];\\n\\n  if (href.slice(0, 2) === '//') {\\n    return base.replace(/:[\\\\s\\\\S]*/, ':') + href;\\n  } else if (href.charAt(0) === '/') {\\n    return base.replace(/(:\\\\/*[^/]*)[\\\\s\\\\S]*/, '$1') + href;\\n  } else {\\n    return base + href;\\n  }\\n}\\nvar baseUrls = {};\\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\\n\\nfunction noop() {}\\nnoop.exec = noop;\\n\\nfunction merge(obj) {\\n  var i = 1,\\n      target,\\n      key;\\n\\n  for (; i < arguments.length; i++) {\\n    target = arguments[i];\\n    for (key in target) {\\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\\n        obj[key] = target[key];\\n      }\\n    }\\n  }\\n\\n  return obj;\\n}\\n\\nfunction splitCells(tableRow, count) {\\n  // ensure that every cell-delimiting pipe has a space\\n  // before it to distinguish it from an escaped pipe\\n  var row = tableRow.replace(/\\\\|/g, function (match, offset, str) {\\n        var escaped = false,\\n            curr = offset;\\n        while (--curr >= 0 && str[curr] === '\\\\\\\\') escaped = !escaped;\\n        if (escaped) {\\n          // odd number of slashes means | is escaped\\n          // so we leave it alone\\n          return '|';\\n        } else {\\n          // add space before unescaped |\\n          return ' |';\\n        }\\n      }),\\n      cells = row.split(/ \\\\|/),\\n      i = 0;\\n\\n  if (cells.length > count) {\\n    cells.splice(count);\\n  } else {\\n    while (cells.length < count) cells.push('');\\n  }\\n\\n  for (; i < cells.length; i++) {\\n    // leading or trailing whitespace is ignored per the gfm spec\\n    cells[i] = cells[i].trim().replace(/\\\\\\\\\\\\|/g, '|');\\n  }\\n  return cells;\\n}\\n\\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\\n// /c*$/ is vulnerable to REDOS.\\n// invert: Remove suffix of non-c chars instead. Default falsey.\\nfunction rtrim(str, c, invert) {\\n  if (str.length === 0) {\\n    return '';\\n  }\\n\\n  // Length of suffix matching the invert condition.\\n  var suffLen = 0;\\n\\n  // Step left until we fail to match the invert condition.\\n  while (suffLen < str.length) {\\n    var currChar = str.charAt(str.length - suffLen - 1);\\n    if (currChar === c && !invert) {\\n      suffLen++;\\n    } else if (currChar !== c && invert) {\\n      suffLen++;\\n    } else {\\n      break;\\n    }\\n  }\\n\\n  return str.substr(0, str.length - suffLen);\\n}\\n\\nfunction findClosingBracket(str, b) {\\n  if (str.indexOf(b[1]) === -1) {\\n    return -1;\\n  }\\n  var level = 0;\\n  for (var i = 0; i < str.length; i++) {\\n    if (str[i] === '\\\\\\\\') {\\n      i++;\\n    } else if (str[i] === b[0]) {\\n      level++;\\n    } else if (str[i] === b[1]) {\\n      level--;\\n      if (level < 0) {\\n        return i;\\n      }\\n    }\\n  }\\n  return -1;\\n}\\n\\n/**\\n * Marked\\n */\\n\\nfunction marked(src, opt, callback) {\\n  // throw error in case of non string input\\n  if (typeof src === 'undefined' || src === null) {\\n    throw new Error('marked(): input parameter is undefined or null');\\n  }\\n  if (typeof src !== 'string') {\\n    throw new Error('marked(): input parameter is of type '\\n      + Object.prototype.toString.call(src) + ', string expected');\\n  }\\n\\n  if (callback || typeof opt === 'function') {\\n    if (!callback) {\\n      callback = opt;\\n      opt = null;\\n    }\\n\\n    opt = merge({}, marked.defaults, opt || {});\\n\\n    var highlight = opt.highlight,\\n        tokens,\\n        pending,\\n        i = 0;\\n\\n    try {\\n      tokens = Lexer.lex(src, opt);\\n    } catch (e) {\\n      return callback(e);\\n    }\\n\\n    pending = tokens.length;\\n\\n    var done = function(err) {\\n      if (err) {\\n        opt.highlight = highlight;\\n        return callback(err);\\n      }\\n\\n      var out;\\n\\n      try {\\n        out = Parser.parse(tokens, opt);\\n      } catch (e) {\\n        err = e;\\n      }\\n\\n      opt.highlight = highlight;\\n\\n      return err\\n        ? callback(err)\\n        : callback(null, out);\\n    };\\n\\n    if (!highlight || highlight.length < 3) {\\n      return done();\\n    }\\n\\n    delete opt.highlight;\\n\\n    if (!pending) return done();\\n\\n    for (; i < tokens.length; i++) {\\n      (function(token) {\\n        if (token.type !== 'code') {\\n          return --pending || done();\\n        }\\n        return highlight(token.text, token.lang, function(err, code) {\\n          if (err) return done(err);\\n          if (code == null || code === token.text) {\\n            return --pending || done();\\n          }\\n          token.text = code;\\n          token.escaped = true;\\n          --pending || done();\\n        });\\n      })(tokens[i]);\\n    }\\n\\n    return;\\n  }\\n  try {\\n    if (opt) opt = merge({}, marked.defaults, opt);\\n    return Parser.parse(Lexer.lex(src, opt), opt);\\n  } catch (e) {\\n    e.message += '\\\\nPlease report this to https://github.com/markedjs/marked.';\\n    if ((opt || marked.defaults).silent) {\\n      return '<p>An error occurred:</p><pre>'\\n        + escape(e.message + '', true)\\n        + '</pre>';\\n    }\\n    throw e;\\n  }\\n}\\n\\n/**\\n * Options\\n */\\n\\nmarked.options =\\nmarked.setOptions = function(opt) {\\n  merge(marked.defaults, opt);\\n  return marked;\\n};\\n\\nmarked.getDefaults = function () {\\n  return {\\n    baseUrl: null,\\n    breaks: false,\\n    gfm: true,\\n    headerIds: true,\\n    headerPrefix: '',\\n    highlight: null,\\n    langPrefix: 'language-',\\n    mangle: true,\\n    pedantic: false,\\n    renderer: new Renderer(),\\n    sanitize: false,\\n    sanitizer: null,\\n    silent: false,\\n    smartLists: false,\\n    smartypants: false,\\n    tables: true,\\n    xhtml: false\\n  };\\n};\\n\\nmarked.defaults = marked.getDefaults();\\n\\n/**\\n * Expose\\n */\\n\\nmarked.Parser = Parser;\\nmarked.parser = Parser.parse;\\n\\nmarked.Renderer = Renderer;\\nmarked.TextRenderer = TextRenderer;\\n\\nmarked.Lexer = Lexer;\\nmarked.lexer = Lexer.lex;\\n\\nmarked.InlineLexer = InlineLexer;\\nmarked.inlineLexer = InlineLexer.output;\\n\\nmarked.Slugger = Slugger;\\n\\nmarked.parse = marked;\\n\\nif (typeof module !== 'undefined' && typeof exports === 'object') {\\n  module.exports = marked;\\n} else if (typeof define === 'function' && define.amd) {\\n  define(function() { return marked; });\\n} else {\\n  root.marked = marked;\\n}\\n})(this || (typeof window !== 'undefined' ? window : global));\\n\",\"// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: http://codemirror.net/LICENSE\\n\\n(function(mod) {\\n  if (typeof exports == \\\"object\\\" && typeof module == \\\"object\\\") // CommonJS\\n    mod(require(\\\"../../lib/codemirror\\\"));\\n  else if (typeof define == \\\"function\\\" && define.amd) // AMD\\n    define([\\\"../../lib/codemirror\\\"], mod);\\n  else // Plain browser env\\n    mod(CodeMirror);\\n})(function(CodeMirror) {\\n  \\\"use strict\\\";\\n\\n  var listRE = /^(\\\\s*)(>[> ]*|[*+-] \\\\[[x ]\\\\]\\\\s|[*+-]\\\\s|(\\\\d+)([.)]))(\\\\s*)/,\\n      emptyListRE = /^(\\\\s*)(>[> ]*|[*+-] \\\\[[x ]\\\\]|[*+-]|(\\\\d+)[.)])(\\\\s*)$/,\\n      unorderedListRE = /[*+-]\\\\s/;\\n\\n  CodeMirror.commands.newlineAndIndentContinueMarkdownList = function(cm) {\\n    if (cm.getOption(\\\"disableInput\\\")) return CodeMirror.Pass;\\n    var ranges = cm.listSelections(), replacements = [];\\n    for (var i = 0; i < ranges.length; i++) {\\n      var pos = ranges[i].head;\\n      var eolState = cm.getStateAfter(pos.line);\\n      var inList = eolState.list !== false;\\n      var inQuote = eolState.quote !== 0;\\n\\n      var line = cm.getLine(pos.line), match = listRE.exec(line);\\n      var cursorBeforeBullet = /^\\\\s*$/.test(line.slice(0, pos.ch));\\n      if (!ranges[i].empty() || (!inList && !inQuote) || !match || cursorBeforeBullet) {\\n        cm.execCommand(\\\"newlineAndIndent\\\");\\n        return;\\n      }\\n      if (emptyListRE.test(line)) {\\n        if (!/>\\\\s*$/.test(line)) cm.replaceRange(\\\"\\\", {\\n          line: pos.line, ch: 0\\n        }, {\\n          line: pos.line, ch: pos.ch + 1\\n        });\\n        replacements[i] = \\\"\\\\n\\\";\\n      } else {\\n        var indent = match[1], after = match[5];\\n        var numbered = !(unorderedListRE.test(match[2]) || match[2].indexOf(\\\">\\\") >= 0);\\n        var bullet = numbered ? (parseInt(match[3], 10) + 1) + match[4] : match[2].replace(\\\"x\\\", \\\" \\\");\\n        replacements[i] = \\\"\\\\n\\\" + indent + bullet + after;\\n\\n        if (numbered) incrementRemainingMarkdownListNumbers(cm, pos);\\n      }\\n    }\\n\\n    cm.replaceSelections(replacements);\\n  };\\n\\n  // Auto-updating Markdown list numbers when a new item is added to the\\n  // middle of a list\\n  function incrementRemainingMarkdownListNumbers(cm, pos) {\\n    var startLine = pos.line, lookAhead = 0, skipCount = 0;\\n    var startItem = listRE.exec(cm.getLine(startLine)), startIndent = startItem[1];\\n\\n    do {\\n      lookAhead += 1;\\n      var nextLineNumber = startLine + lookAhead;\\n      var nextLine = cm.getLine(nextLineNumber), nextItem = listRE.exec(nextLine);\\n\\n      if (nextItem) {\\n        var nextIndent = nextItem[1];\\n        var newNumber = (parseInt(startItem[3], 10) + lookAhead - skipCount);\\n        var nextNumber = (parseInt(nextItem[3], 10)), itemNumber = nextNumber;\\n\\n        if (startIndent === nextIndent && !isNaN(nextNumber)) {\\n          if (newNumber === nextNumber) itemNumber = nextNumber + 1;\\n          if (newNumber > nextNumber) itemNumber = newNumber + 1;\\n          cm.replaceRange(\\n            nextLine.replace(listRE, nextIndent + itemNumber + nextItem[4] + nextItem[5]),\\n          {\\n            line: nextLineNumber, ch: 0\\n          }, {\\n            line: nextLineNumber, ch: nextLine.length\\n          });\\n        } else {\\n          if (startIndent.length > nextIndent.length) return;\\n          // This doesn't run if the next line immediatley indents, as it is\\n          // not clear of the users intention (new indented item or same level)\\n          if ((startIndent.length < nextIndent.length) && (lookAhead === 1)) return;\\n          skipCount += 1;\\n        }\\n      }\\n    } while (nextItem);\\n  }\\n});\\n\",\"// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: http://codemirror.net/LICENSE\\n\\n(function(mod) {\\n  if (typeof exports == \\\"object\\\" && typeof module == \\\"object\\\") // CommonJS\\n    mod(require(\\\"../../lib/codemirror\\\"), require(\\\"../markdown/markdown\\\"), require(\\\"../../addon/mode/overlay\\\"));\\n  else if (typeof define == \\\"function\\\" && define.amd) // AMD\\n    define([\\\"../../lib/codemirror\\\", \\\"../markdown/markdown\\\", \\\"../../addon/mode/overlay\\\"], mod);\\n  else // Plain browser env\\n    mod(CodeMirror);\\n})(function(CodeMirror) {\\n\\\"use strict\\\";\\n\\nvar urlRE = /^((?:(?:aaas?|about|acap|adiumxtra|af[ps]|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|cap|chrome(?:-extension)?|cid|coap|com-eventbrite-attendee|content|crid|cvs|data|dav|dict|dlna-(?:playcontainer|playsingle)|dns|doi|dtn|dvb|ed2k|facetime|feed|file|finger|fish|ftp|geo|gg|git|gizmoproject|go|gopher|gtalk|h323|hcp|https?|iax|icap|icon|im|imap|info|ipn|ipp|irc[6s]?|iris(?:\\\\.beep|\\\\.lwz|\\\\.xpc|\\\\.xpcs)?|itms|jar|javascript|jms|keyparc|lastfm|ldaps?|magnet|mailto|maps|market|message|mid|mms|ms-help|msnim|msrps?|mtqp|mumble|mupdate|mvn|news|nfs|nih?|nntp|notes|oid|opaquelocktoken|palm|paparazzi|platform|pop|pres|proxy|psyc|query|res(?:ource)?|rmi|rsync|rtmp|rtsp|secondlife|service|session|sftp|sgn|shttp|sieve|sips?|skype|sm[bs]|snmp|soap\\\\.beeps?|soldat|spotify|ssh|steam|svn|tag|teamspeak|tel(?:net)?|tftp|things|thismessage|tip|tn3270|tv|udp|unreal|urn|ut2004|vemmi|ventrilo|view-source|webcal|wss?|wtai|wyciwyg|xcon(?:-userid)?|xfire|xmlrpc\\\\.beeps?|xmpp|xri|ymsgr|z39\\\\.50[rs]?):(?:\\\\/{1,3}|[a-z0-9%])|www\\\\d{0,3}[.]|[a-z0-9.\\\\-]+[.][a-z]{2,4}\\\\/)(?:[^\\\\s()<>]|\\\\([^\\\\s()<>]*\\\\))+(?:\\\\([^\\\\s()<>]*\\\\)|[^\\\\s`*!()\\\\[\\\\]{};:'\\\".,<>?«»“”‘’]))/i\\n\\nCodeMirror.defineMode(\\\"gfm\\\", function(config, modeConfig) {\\n  var codeDepth = 0;\\n  function blankLine(state) {\\n    state.code = false;\\n    return null;\\n  }\\n  var gfmOverlay = {\\n    startState: function() {\\n      return {\\n        code: false,\\n        codeBlock: false,\\n        ateSpace: false\\n      };\\n    },\\n    copyState: function(s) {\\n      return {\\n        code: s.code,\\n        codeBlock: s.codeBlock,\\n        ateSpace: s.ateSpace\\n      };\\n    },\\n    token: function(stream, state) {\\n      state.combineTokens = null;\\n\\n      // Hack to prevent formatting override inside code blocks (block and inline)\\n      if (state.codeBlock) {\\n        if (stream.match(/^```+/)) {\\n          state.codeBlock = false;\\n          return null;\\n        }\\n        stream.skipToEnd();\\n        return null;\\n      }\\n      if (stream.sol()) {\\n        state.code = false;\\n      }\\n      if (stream.sol() && stream.match(/^```+/)) {\\n        stream.skipToEnd();\\n        state.codeBlock = true;\\n        return null;\\n      }\\n      // If this block is changed, it may need to be updated in Markdown mode\\n      if (stream.peek() === '`') {\\n        stream.next();\\n        var before = stream.pos;\\n        stream.eatWhile('`');\\n        var difference = 1 + stream.pos - before;\\n        if (!state.code) {\\n          codeDepth = difference;\\n          state.code = true;\\n        } else {\\n          if (difference === codeDepth) { // Must be exact\\n            state.code = false;\\n          }\\n        }\\n        return null;\\n      } else if (state.code) {\\n        stream.next();\\n        return null;\\n      }\\n      // Check if space. If so, links can be formatted later on\\n      if (stream.eatSpace()) {\\n        state.ateSpace = true;\\n        return null;\\n      }\\n      if (stream.sol() || state.ateSpace) {\\n        state.ateSpace = false;\\n        if (modeConfig.gitHubSpice !== false) {\\n          if(stream.match(/^(?:[a-zA-Z0-9\\\\-_]+\\\\/)?(?:[a-zA-Z0-9\\\\-_]+@)?(?=.{0,6}\\\\d)(?:[a-f0-9]{7,40}\\\\b)/)) {\\n            // User/Project@SHA\\n            // User@SHA\\n            // SHA\\n            state.combineTokens = true;\\n            return \\\"link\\\";\\n          } else if (stream.match(/^(?:[a-zA-Z0-9\\\\-_]+\\\\/)?(?:[a-zA-Z0-9\\\\-_]+)?#[0-9]+\\\\b/)) {\\n            // User/Project#Num\\n            // User#Num\\n            // #Num\\n            state.combineTokens = true;\\n            return \\\"link\\\";\\n          }\\n        }\\n      }\\n      if (stream.match(urlRE) &&\\n          stream.string.slice(stream.start - 2, stream.start) != \\\"](\\\" &&\\n          (stream.start == 0 || /\\\\W/.test(stream.string.charAt(stream.start - 1)))) {\\n        // URLs\\n        // Taken from http://daringfireball.net/2010/07/improved_regex_for_matching_urls\\n        // And then (issue #1160) simplified to make it not crash the Chrome Regexp engine\\n        // And then limited url schemes to the CommonMark list, so foo:bar isn't matched as a URL\\n        state.combineTokens = true;\\n        return \\\"link\\\";\\n      }\\n      stream.next();\\n      return null;\\n    },\\n    blankLine: blankLine\\n  };\\n\\n  var markdownConfig = {\\n    taskLists: true,\\n    strikethrough: true,\\n    emoji: true\\n  };\\n  for (var attr in modeConfig) {\\n    markdownConfig[attr] = modeConfig[attr];\\n  }\\n  markdownConfig.name = \\\"markdown\\\";\\n  return CodeMirror.overlayMode(CodeMirror.getMode(config, markdownConfig), gfmOverlay);\\n\\n}, \\\"markdown\\\");\\n\\n  CodeMirror.defineMIME(\\\"text/x-gfm\\\", \\\"gfm\\\");\\n});\\n\",\"/* globals chrome: false */\\n/* globals __dirname: false */\\n/* globals require: false */\\n/* globals Buffer: false */\\n/* globals module: false */\\n\\n/**\\n * Typo is a JavaScript implementation of a spellchecker using hunspell-style \\n * dictionaries.\\n */\\n\\nvar Typo;\\n\\n(function () {\\n\\\"use strict\\\";\\n\\n/**\\n * Typo constructor.\\n *\\n * @param {String} [dictionary] The locale code of the dictionary being used. e.g.,\\n *                              \\\"en_US\\\". This is only used to auto-load dictionaries.\\n * @param {String} [affData]    The data from the dictionary's .aff file. If omitted\\n *                              and Typo.js is being used in a Chrome extension, the .aff\\n *                              file will be loaded automatically from\\n *                              lib/typo/dictionaries/[dictionary]/[dictionary].aff\\n *                              In other environments, it will be loaded from\\n *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].aff\\n * @param {String} [wordsData]  The data from the dictionary's .dic file. If omitted\\n *                              and Typo.js is being used in a Chrome extension, the .dic\\n *                              file will be loaded automatically from\\n *                              lib/typo/dictionaries/[dictionary]/[dictionary].dic\\n *                              In other environments, it will be loaded from\\n *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].dic\\n * @param {Object} [settings]   Constructor settings. Available properties are:\\n *                              {String} [dictionaryPath]: path to load dictionary from in non-chrome\\n *                              environment.\\n *                              {Object} [flags]: flag information.\\n *                              {Boolean} [asyncLoad]: If true, affData and wordsData will be loaded\\n *                              asynchronously.\\n *                              {Function} [loadedCallback]: Called when both affData and wordsData\\n *                              have been loaded. Only used if asyncLoad is set to true. The parameter\\n *                              is the instantiated Typo object.\\n *\\n * @returns {Typo} A Typo object.\\n */\\n\\nTypo = function (dictionary, affData, wordsData, settings) {\\n\\tsettings = settings || {};\\n\\n\\tthis.dictionary = null;\\n\\t\\n\\tthis.rules = {};\\n\\tthis.dictionaryTable = {};\\n\\t\\n\\tthis.compoundRules = [];\\n\\tthis.compoundRuleCodes = {};\\n\\t\\n\\tthis.replacementTable = [];\\n\\t\\n\\tthis.flags = settings.flags || {}; \\n\\t\\n\\tthis.memoized = {};\\n\\n\\tthis.loaded = false;\\n\\t\\n\\tvar self = this;\\n\\t\\n\\tvar path;\\n\\t\\n\\t// Loop-control variables.\\n\\tvar i, j, _len, _jlen;\\n\\t\\n\\tif (dictionary) {\\n\\t\\tself.dictionary = dictionary;\\n\\t\\t\\n\\t\\t// If the data is preloaded, just setup the Typo object.\\n\\t\\tif (affData && wordsData) {\\n\\t\\t\\tsetup();\\n\\t\\t}\\n\\t\\t// Loading data for Chrome extentions.\\n\\t\\telse if (typeof window !== 'undefined' && 'chrome' in window && 'extension' in window.chrome && 'getURL' in window.chrome.extension) {\\n\\t\\t\\tif (settings.dictionaryPath) {\\n\\t\\t\\t\\tpath = settings.dictionaryPath;\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tpath = \\\"typo/dictionaries\\\";\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tif (!affData) readDataFile(chrome.extension.getURL(path + \\\"/\\\" + dictionary + \\\"/\\\" + dictionary + \\\".aff\\\"), setAffData);\\n\\t\\t\\tif (!wordsData) readDataFile(chrome.extension.getURL(path + \\\"/\\\" + dictionary + \\\"/\\\" + dictionary + \\\".dic\\\"), setWordsData);\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tif (settings.dictionaryPath) {\\n\\t\\t\\t\\tpath = settings.dictionaryPath;\\n\\t\\t\\t}\\n\\t\\t\\telse if (typeof __dirname !== 'undefined') {\\n\\t\\t\\t\\tpath = __dirname + '/dictionaries';\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\tpath = './dictionaries';\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tif (!affData) readDataFile(path + \\\"/\\\" + dictionary + \\\"/\\\" + dictionary + \\\".aff\\\", setAffData);\\n\\t\\t\\tif (!wordsData) readDataFile(path + \\\"/\\\" + dictionary + \\\"/\\\" + dictionary + \\\".dic\\\", setWordsData);\\n\\t\\t}\\n\\t}\\n\\t\\n\\tfunction readDataFile(url, setFunc) {\\n\\t\\tvar response = self._readFile(url, null, settings.asyncLoad);\\n\\t\\t\\n\\t\\tif (settings.asyncLoad) {\\n\\t\\t\\tresponse.then(function(data) {\\n\\t\\t\\t\\tsetFunc(data);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\telse {\\n\\t\\t\\tsetFunc(response);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction setAffData(data) {\\n\\t\\taffData = data;\\n\\n\\t\\tif (wordsData) {\\n\\t\\t\\tsetup();\\n\\t\\t}\\n\\t}\\n\\n\\tfunction setWordsData(data) {\\n\\t\\twordsData = data;\\n\\n\\t\\tif (affData) {\\n\\t\\t\\tsetup();\\n\\t\\t}\\n\\t}\\n\\n\\tfunction setup() {\\n\\t\\tself.rules = self._parseAFF(affData);\\n\\t\\t\\n\\t\\t// Save the rule codes that are used in compound rules.\\n\\t\\tself.compoundRuleCodes = {};\\n\\t\\t\\n\\t\\tfor (i = 0, _len = self.compoundRules.length; i < _len; i++) {\\n\\t\\t\\tvar rule = self.compoundRules[i];\\n\\t\\t\\t\\n\\t\\t\\tfor (j = 0, _jlen = rule.length; j < _jlen; j++) {\\n\\t\\t\\t\\tself.compoundRuleCodes[rule[j]] = [];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t// If we add this ONLYINCOMPOUND flag to self.compoundRuleCodes, then _parseDIC\\n\\t\\t// will do the work of saving the list of words that are compound-only.\\n\\t\\tif (\\\"ONLYINCOMPOUND\\\" in self.flags) {\\n\\t\\t\\tself.compoundRuleCodes[self.flags.ONLYINCOMPOUND] = [];\\n\\t\\t}\\n\\t\\t\\n\\t\\tself.dictionaryTable = self._parseDIC(wordsData);\\n\\t\\t\\n\\t\\t// Get rid of any codes from the compound rule codes that are never used \\n\\t\\t// (or that were special regex characters).  Not especially necessary... \\n\\t\\tfor (i in self.compoundRuleCodes) {\\n\\t\\t\\tif (self.compoundRuleCodes[i].length === 0) {\\n\\t\\t\\t\\tdelete self.compoundRuleCodes[i];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t// Build the full regular expressions for each compound rule.\\n\\t\\t// I have a feeling (but no confirmation yet) that this method of \\n\\t\\t// testing for compound words is probably slow.\\n\\t\\tfor (i = 0, _len = self.compoundRules.length; i < _len; i++) {\\n\\t\\t\\tvar ruleText = self.compoundRules[i];\\n\\t\\t\\t\\n\\t\\t\\tvar expressionText = \\\"\\\";\\n\\t\\t\\t\\n\\t\\t\\tfor (j = 0, _jlen = ruleText.length; j < _jlen; j++) {\\n\\t\\t\\t\\tvar character = ruleText[j];\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif (character in self.compoundRuleCodes) {\\n\\t\\t\\t\\t\\texpressionText += \\\"(\\\" + self.compoundRuleCodes[character].join(\\\"|\\\") + \\\")\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\texpressionText += character;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tself.compoundRules[i] = new RegExp(expressionText, \\\"i\\\");\\n\\t\\t}\\n\\t\\t\\n\\t\\tself.loaded = true;\\n\\t\\t\\n\\t\\tif (settings.asyncLoad && settings.loadedCallback) {\\n\\t\\t\\tsettings.loadedCallback(self);\\n\\t\\t}\\n\\t}\\n\\t\\n\\treturn this;\\n};\\n\\nTypo.prototype = {\\n\\t/**\\n\\t * Loads a Typo instance from a hash of all of the Typo properties.\\n\\t *\\n\\t * @param object obj A hash of Typo properties, probably gotten from a JSON.parse(JSON.stringify(typo_instance)).\\n\\t */\\n\\t\\n\\tload : function (obj) {\\n\\t\\tfor (var i in obj) {\\n\\t\\t\\tif (obj.hasOwnProperty(i)) {\\n\\t\\t\\t\\tthis[i] = obj[i];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn this;\\n\\t},\\n\\t\\n\\t/**\\n\\t * Read the contents of a file.\\n\\t * \\n\\t * @param {String} path The path (relative) to the file.\\n\\t * @param {String} [charset=\\\"ISO8859-1\\\"] The expected charset of the file\\n\\t * @param {Boolean} async If true, the file will be read asynchronously. For node.js this does nothing, all\\n\\t *        files are read synchronously.\\n\\t * @returns {String} The file data if async is false, otherwise a promise object. If running node.js, the data is\\n\\t *          always returned.\\n\\t */\\n\\t\\n\\t_readFile : function (path, charset, async) {\\n\\t\\tcharset = charset || \\\"utf8\\\";\\n\\t\\t\\n\\t\\tif (typeof XMLHttpRequest !== 'undefined') {\\n\\t\\t\\tvar promise;\\n\\t\\t\\tvar req = new XMLHttpRequest();\\n\\t\\t\\treq.open(\\\"GET\\\", path, async);\\n\\t\\t\\t\\n\\t\\t\\tif (async) {\\n\\t\\t\\t\\tpromise = new Promise(function(resolve, reject) {\\n\\t\\t\\t\\t\\treq.onload = function() {\\n\\t\\t\\t\\t\\t\\tif (req.status === 200) {\\n\\t\\t\\t\\t\\t\\t\\tresolve(req.responseText);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\treject(req.statusText);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\treq.onerror = function() {\\n\\t\\t\\t\\t\\t\\treject(req.statusText);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t\\n\\t\\t\\tif (req.overrideMimeType)\\n\\t\\t\\t\\treq.overrideMimeType(\\\"text/plain; charset=\\\" + charset);\\n\\t\\t\\n\\t\\t\\treq.send(null);\\n\\t\\t\\t\\n\\t\\t\\treturn async ? promise : req.responseText;\\n\\t\\t}\\n\\t\\telse if (typeof require !== 'undefined') {\\n\\t\\t\\t// Node.js\\n\\t\\t\\tvar fs = require(\\\"fs\\\");\\n\\t\\t\\t\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif (fs.existsSync(path)) {\\n\\t\\t\\t\\t\\tvar stats = fs.statSync(path);\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tvar fileDescriptor = fs.openSync(path, 'r');\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tvar buffer = new Buffer(stats.size);\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tfs.readSync(fileDescriptor, buffer, 0, buffer.length, null);\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\treturn buffer.toString(charset, 0, buffer.length);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tconsole.log(\\\"Path \\\" + path + \\\" does not exist.\\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tconsole.log(e);\\n\\t\\t\\t\\treturn '';\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\t\\n\\t/**\\n\\t * Parse the rules out from a .aff file.\\n\\t *\\n\\t * @param {String} data The contents of the affix file.\\n\\t * @returns object The rules from the file.\\n\\t */\\n\\t\\n\\t_parseAFF : function (data) {\\n\\t\\tvar rules = {};\\n\\t\\t\\n\\t\\tvar line, subline, numEntries, lineParts;\\n\\t\\tvar i, j, _len, _jlen;\\n\\t\\t\\n\\t\\t// Remove comment lines\\n\\t\\tdata = this._removeAffixComments(data);\\n\\t\\t\\n\\t\\tvar lines = data.split(\\\"\\\\n\\\");\\n\\t\\t\\n\\t\\tfor (i = 0, _len = lines.length; i < _len; i++) {\\n\\t\\t\\tline = lines[i];\\n\\t\\t\\t\\n\\t\\t\\tvar definitionParts = line.split(/\\\\s+/);\\n\\t\\t\\t\\n\\t\\t\\tvar ruleType = definitionParts[0];\\n\\t\\t\\t\\n\\t\\t\\tif (ruleType == \\\"PFX\\\" || ruleType == \\\"SFX\\\") {\\n\\t\\t\\t\\tvar ruleCode = definitionParts[1];\\n\\t\\t\\t\\tvar combineable = definitionParts[2];\\n\\t\\t\\t\\tnumEntries = parseInt(definitionParts[3], 10);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tvar entries = [];\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tfor (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\\n\\t\\t\\t\\t\\tsubline = lines[j];\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tlineParts = subline.split(/\\\\s+/);\\n\\t\\t\\t\\t\\tvar charactersToRemove = lineParts[2];\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tvar additionParts = lineParts[3].split(\\\"/\\\");\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tvar charactersToAdd = additionParts[0];\\n\\t\\t\\t\\t\\tif (charactersToAdd === \\\"0\\\") charactersToAdd = \\\"\\\";\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tvar continuationClasses = this.parseRuleCodes(additionParts[1]);\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tvar regexToMatch = lineParts[4];\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tvar entry = {};\\n\\t\\t\\t\\t\\tentry.add = charactersToAdd;\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif (continuationClasses.length > 0) entry.continuationClasses = continuationClasses;\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif (regexToMatch !== \\\".\\\") {\\n\\t\\t\\t\\t\\t\\tif (ruleType === \\\"SFX\\\") {\\n\\t\\t\\t\\t\\t\\t\\tentry.match = new RegExp(regexToMatch + \\\"$\\\");\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\tentry.match = new RegExp(\\\"^\\\" + regexToMatch);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif (charactersToRemove != \\\"0\\\") {\\n\\t\\t\\t\\t\\t\\tif (ruleType === \\\"SFX\\\") {\\n\\t\\t\\t\\t\\t\\t\\tentry.remove = new RegExp(charactersToRemove  + \\\"$\\\");\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\tentry.remove = charactersToRemove;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tentries.push(entry);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\trules[ruleCode] = { \\\"type\\\" : ruleType, \\\"combineable\\\" : (combineable == \\\"Y\\\"), \\\"entries\\\" : entries };\\n\\t\\t\\t\\t\\n\\t\\t\\t\\ti += numEntries;\\n\\t\\t\\t}\\n\\t\\t\\telse if (ruleType === \\\"COMPOUNDRULE\\\") {\\n\\t\\t\\t\\tnumEntries = parseInt(definitionParts[1], 10);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tfor (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\\n\\t\\t\\t\\t\\tline = lines[j];\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tlineParts = line.split(/\\\\s+/);\\n\\t\\t\\t\\t\\tthis.compoundRules.push(lineParts[1]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\ti += numEntries;\\n\\t\\t\\t}\\n\\t\\t\\telse if (ruleType === \\\"REP\\\") {\\n\\t\\t\\t\\tlineParts = line.split(/\\\\s+/);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif (lineParts.length === 3) {\\n\\t\\t\\t\\t\\tthis.replacementTable.push([ lineParts[1], lineParts[2] ]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\t// ONLYINCOMPOUND\\n\\t\\t\\t\\t// COMPOUNDMIN\\n\\t\\t\\t\\t// FLAG\\n\\t\\t\\t\\t// KEEPCASE\\n\\t\\t\\t\\t// NEEDAFFIX\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tthis.flags[ruleType] = definitionParts[1];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn rules;\\n\\t},\\n\\t\\n\\t/**\\n\\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\\n\\t *\\n\\t * @param {String} data The data from an affix file.\\n\\t * @return {String} The cleaned-up data.\\n\\t */\\n\\t\\n\\t_removeAffixComments : function (data) {\\n\\t\\t// Remove comments\\n\\t\\t// This used to remove any string starting with '#' up to the end of the line,\\n\\t\\t// but some COMPOUNDRULE definitions include '#' as part of the rule.\\n\\t\\t// I haven't seen any affix files that use comments on the same line as real data,\\n\\t\\t// so I don't think this will break anything.\\n\\t\\tdata = data.replace(/^\\\\s*#.*$/mg, \\\"\\\");\\n\\t\\t\\n\\t\\t// Trim each line\\n\\t\\tdata = data.replace(/^\\\\s\\\\s*/m, '').replace(/\\\\s\\\\s*$/m, '');\\n\\t\\t\\n\\t\\t// Remove blank lines.\\n\\t\\tdata = data.replace(/\\\\n{2,}/g, \\\"\\\\n\\\");\\n\\t\\t\\n\\t\\t// Trim the entire string\\n\\t\\tdata = data.replace(/^\\\\s\\\\s*/, '').replace(/\\\\s\\\\s*$/, '');\\n\\t\\t\\n\\t\\treturn data;\\n\\t},\\n\\t\\n\\t/**\\n\\t * Parses the words out from the .dic file.\\n\\t *\\n\\t * @param {String} data The data from the dictionary file.\\n\\t * @returns object The lookup table containing all of the words and\\n\\t *                 word forms from the dictionary.\\n\\t */\\n\\t\\n\\t_parseDIC : function (data) {\\n\\t\\tdata = this._removeDicComments(data);\\n\\t\\t\\n\\t\\tvar lines = data.split(\\\"\\\\n\\\");\\n\\t\\tvar dictionaryTable = {};\\n\\t\\t\\n\\t\\tfunction addWord(word, rules) {\\n\\t\\t\\t// Some dictionaries will list the same word multiple times with different rule sets.\\n\\t\\t\\tif (!dictionaryTable.hasOwnProperty(word)) {\\n\\t\\t\\t\\tdictionaryTable[word] = null;\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tif (rules.length > 0) {\\n\\t\\t\\t\\tif (dictionaryTable[word] === null) {\\n\\t\\t\\t\\t\\tdictionaryTable[word] = [];\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdictionaryTable[word].push(rules);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t// The first line is the number of words in the dictionary.\\n\\t\\tfor (var i = 1, _len = lines.length; i < _len; i++) {\\n\\t\\t\\tvar line = lines[i];\\n\\t\\t\\t\\n\\t\\t\\tvar parts = line.split(\\\"/\\\", 2);\\n\\t\\t\\t\\n\\t\\t\\tvar word = parts[0];\\n\\n\\t\\t\\t// Now for each affix rule, generate that form of the word.\\n\\t\\t\\tif (parts.length > 1) {\\n\\t\\t\\t\\tvar ruleCodesArray = this.parseRuleCodes(parts[1]);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t// Save the ruleCodes for compound word situations.\\n\\t\\t\\t\\tif (!(\\\"NEEDAFFIX\\\" in this.flags) || ruleCodesArray.indexOf(this.flags.NEEDAFFIX) == -1) {\\n\\t\\t\\t\\t\\taddWord(word, ruleCodesArray);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tfor (var j = 0, _jlen = ruleCodesArray.length; j < _jlen; j++) {\\n\\t\\t\\t\\t\\tvar code = ruleCodesArray[j];\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tvar rule = this.rules[code];\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif (rule) {\\n\\t\\t\\t\\t\\t\\tvar newWords = this._applyRule(word, rule);\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tfor (var ii = 0, _iilen = newWords.length; ii < _iilen; ii++) {\\n\\t\\t\\t\\t\\t\\t\\tvar newWord = newWords[ii];\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\taddWord(newWord, []);\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\tif (rule.combineable) {\\n\\t\\t\\t\\t\\t\\t\\t\\tfor (var k = j + 1; k < _jlen; k++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar combineCode = ruleCodesArray[k];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar combineRule = this.rules[combineCode];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif (combineRule) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif (combineRule.combineable && (rule.type != combineRule.type)) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar otherNewWords = this._applyRule(newWord, combineRule);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfor (var iii = 0, _iiilen = otherNewWords.length; iii < _iiilen; iii++) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar otherNewWord = otherNewWords[iii];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taddWord(otherNewWord, []);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif (code in this.compoundRuleCodes) {\\n\\t\\t\\t\\t\\t\\tthis.compoundRuleCodes[code].push(word);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\telse {\\n\\t\\t\\t\\taddWord(word.trim(), []);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn dictionaryTable;\\n\\t},\\n\\t\\n\\t\\n\\t/**\\n\\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\\n\\t *\\n\\t * @param {String} data The data from a .dic file.\\n\\t * @return {String} The cleaned-up data.\\n\\t */\\n\\t\\n\\t_removeDicComments : function (data) {\\n\\t\\t// I can't find any official documentation on it, but at least the de_DE\\n\\t\\t// dictionary uses tab-indented lines as comments.\\n\\t\\t\\n\\t\\t// Remove comments\\n\\t\\tdata = data.replace(/^\\\\t.*$/mg, \\\"\\\");\\n\\t\\t\\n\\t\\treturn data;\\n\\t},\\n\\t\\n\\tparseRuleCodes : function (textCodes) {\\n\\t\\tif (!textCodes) {\\n\\t\\t\\treturn [];\\n\\t\\t}\\n\\t\\telse if (!(\\\"FLAG\\\" in this.flags)) {\\n\\t\\t\\treturn textCodes.split(\\\"\\\");\\n\\t\\t}\\n\\t\\telse if (this.flags.FLAG === \\\"long\\\") {\\n\\t\\t\\tvar flags = [];\\n\\t\\t\\t\\n\\t\\t\\tfor (var i = 0, _len = textCodes.length; i < _len; i += 2) {\\n\\t\\t\\t\\tflags.push(textCodes.substr(i, 2));\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\treturn flags;\\n\\t\\t}\\n\\t\\telse if (this.flags.FLAG === \\\"num\\\") {\\n\\t\\t\\treturn textCodes.split(\\\",\\\");\\n\\t\\t}\\n\\t},\\n\\t\\n\\t/**\\n\\t * Applies an affix rule to a word.\\n\\t *\\n\\t * @param {String} word The base word.\\n\\t * @param {Object} rule The affix rule.\\n\\t * @returns {String[]} The new words generated by the rule.\\n\\t */\\n\\t\\n\\t_applyRule : function (word, rule) {\\n\\t\\tvar entries = rule.entries;\\n\\t\\tvar newWords = [];\\n\\t\\t\\n\\t\\tfor (var i = 0, _len = entries.length; i < _len; i++) {\\n\\t\\t\\tvar entry = entries[i];\\n\\t\\t\\t\\n\\t\\t\\tif (!entry.match || word.match(entry.match)) {\\n\\t\\t\\t\\tvar newWord = word;\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif (entry.remove) {\\n\\t\\t\\t\\t\\tnewWord = newWord.replace(entry.remove, \\\"\\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif (rule.type === \\\"SFX\\\") {\\n\\t\\t\\t\\t\\tnewWord = newWord + entry.add;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tnewWord = entry.add + newWord;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tnewWords.push(newWord);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif (\\\"continuationClasses\\\" in entry) {\\n\\t\\t\\t\\t\\tfor (var j = 0, _jlen = entry.continuationClasses.length; j < _jlen; j++) {\\n\\t\\t\\t\\t\\t\\tvar continuationRule = this.rules[entry.continuationClasses[j]];\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\tif (continuationRule) {\\n\\t\\t\\t\\t\\t\\t\\tnewWords = newWords.concat(this._applyRule(newWord, continuationRule));\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t/*\\n\\t\\t\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\t\\t\\t// This shouldn't happen, but it does, at least in the de_DE dictionary.\\n\\t\\t\\t\\t\\t\\t\\t// I think the author mistakenly supplied lower-case rule codes instead \\n\\t\\t\\t\\t\\t\\t\\t// of upper-case.\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t*/\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn newWords;\\n\\t},\\n\\t\\n\\t/**\\n\\t * Checks whether a word or a capitalization variant exists in the current dictionary.\\n\\t * The word is trimmed and several variations of capitalizations are checked.\\n\\t * If you want to check a word without any changes made to it, call checkExact()\\n\\t *\\n\\t * @see http://blog.stevenlevithan.com/archives/faster-trim-javascript re:trimming function\\n\\t *\\n\\t * @param {String} aWord The word to check.\\n\\t * @returns {Boolean}\\n\\t */\\n\\t\\n\\tcheck : function (aWord) {\\n\\t\\tif (!this.loaded) {\\n\\t\\t\\tthrow \\\"Dictionary not loaded.\\\";\\n\\t\\t}\\n\\t\\t\\n\\t\\t// Remove leading and trailing whitespace\\n\\t\\tvar trimmedWord = aWord.replace(/^\\\\s\\\\s*/, '').replace(/\\\\s\\\\s*$/, '');\\n\\t\\t\\n\\t\\tif (this.checkExact(trimmedWord)) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\t\\n\\t\\t// The exact word is not in the dictionary.\\n\\t\\tif (trimmedWord.toUpperCase() === trimmedWord) {\\n\\t\\t\\t// The word was supplied in all uppercase.\\n\\t\\t\\t// Check for a capitalized form of the word.\\n\\t\\t\\tvar capitalizedWord = trimmedWord[0] + trimmedWord.substring(1).toLowerCase();\\n\\t\\t\\t\\n\\t\\t\\tif (this.hasFlag(capitalizedWord, \\\"KEEPCASE\\\")) {\\n\\t\\t\\t\\t// Capitalization variants are not allowed for this word.\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tif (this.checkExact(capitalizedWord)) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\tvar lowercaseWord = trimmedWord.toLowerCase();\\n\\t\\t\\n\\t\\tif (lowercaseWord !== trimmedWord) {\\n\\t\\t\\tif (this.hasFlag(lowercaseWord, \\\"KEEPCASE\\\")) {\\n\\t\\t\\t\\t// Capitalization variants are not allowed for this word.\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\t// Check for a lowercase form\\n\\t\\t\\tif (this.checkExact(lowercaseWord)) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn false;\\n\\t},\\n\\t\\n\\t/**\\n\\t * Checks whether a word exists in the current dictionary.\\n\\t *\\n\\t * @param {String} word The word to check.\\n\\t * @returns {Boolean}\\n\\t */\\n\\t\\n\\tcheckExact : function (word) {\\n\\t\\tif (!this.loaded) {\\n\\t\\t\\tthrow \\\"Dictionary not loaded.\\\";\\n\\t\\t}\\n\\n\\t\\tvar ruleCodes = this.dictionaryTable[word];\\n\\t\\t\\n\\t\\tvar i, _len;\\n\\t\\t\\n\\t\\tif (typeof ruleCodes === 'undefined') {\\n\\t\\t\\t// Check if this might be a compound word.\\n\\t\\t\\tif (\\\"COMPOUNDMIN\\\" in this.flags && word.length >= this.flags.COMPOUNDMIN) {\\n\\t\\t\\t\\tfor (i = 0, _len = this.compoundRules.length; i < _len; i++) {\\n\\t\\t\\t\\t\\tif (word.match(this.compoundRules[i])) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse if (ruleCodes === null) {\\n\\t\\t\\t// a null (but not undefined) value for an entry in the dictionary table\\n\\t\\t\\t// means that the word is in the dictionary but has no flags.\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\telse if (typeof ruleCodes === 'object') { // this.dictionary['hasOwnProperty'] will be a function.\\n\\t\\t\\tfor (i = 0, _len = ruleCodes.length; i < _len; i++) {\\n\\t\\t\\t\\tif (!this.hasFlag(word, \\\"ONLYINCOMPOUND\\\", ruleCodes[i])) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t},\\n\\t\\n\\t/**\\n\\t * Looks up whether a given word is flagged with a given flag.\\n\\t *\\n\\t * @param {String} word The word in question.\\n\\t * @param {String} flag The flag in question.\\n\\t * @return {Boolean}\\n\\t */\\n\\t \\n\\thasFlag : function (word, flag, wordFlags) {\\n\\t\\tif (!this.loaded) {\\n\\t\\t\\tthrow \\\"Dictionary not loaded.\\\";\\n\\t\\t}\\n\\n\\t\\tif (flag in this.flags) {\\n\\t\\t\\tif (typeof wordFlags === 'undefined') {\\n\\t\\t\\t\\twordFlags = Array.prototype.concat.apply([], this.dictionaryTable[word]);\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tif (wordFlags && wordFlags.indexOf(this.flags[flag]) !== -1) {\\n\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\treturn false;\\n\\t},\\n\\t\\n\\t/**\\n\\t * Returns a list of suggestions for a misspelled word.\\n\\t *\\n\\t * @see http://www.norvig.com/spell-correct.html for the basis of this suggestor.\\n\\t * This suggestor is primitive, but it works.\\n\\t *\\n\\t * @param {String} word The misspelling.\\n\\t * @param {Number} [limit=5] The maximum number of suggestions to return.\\n\\t * @returns {String[]} The array of suggestions.\\n\\t */\\n\\t\\n\\talphabet : \\\"\\\",\\n\\t\\n\\tsuggest : function (word, limit) {\\n\\t\\tif (!this.loaded) {\\n\\t\\t\\tthrow \\\"Dictionary not loaded.\\\";\\n\\t\\t}\\n\\n\\t\\tlimit = limit || 5;\\n\\n\\t\\tif (this.memoized.hasOwnProperty(word)) {\\n\\t\\t\\tvar memoizedLimit = this.memoized[word]['limit'];\\n\\n\\t\\t\\t// Only return the cached list if it's big enough or if there weren't enough suggestions\\n\\t\\t\\t// to fill a smaller limit.\\n\\t\\t\\tif (limit <= memoizedLimit || this.memoized[word]['suggestions'].length < memoizedLimit) {\\n\\t\\t\\t\\treturn this.memoized[word]['suggestions'].slice(0, limit);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\tif (this.check(word)) return [];\\n\\t\\t\\n\\t\\t// Check the replacement table.\\n\\t\\tfor (var i = 0, _len = this.replacementTable.length; i < _len; i++) {\\n\\t\\t\\tvar replacementEntry = this.replacementTable[i];\\n\\t\\t\\t\\n\\t\\t\\tif (word.indexOf(replacementEntry[0]) !== -1) {\\n\\t\\t\\t\\tvar correctedWord = word.replace(replacementEntry[0], replacementEntry[1]);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif (this.check(correctedWord)) {\\n\\t\\t\\t\\t\\treturn [ correctedWord ];\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\tvar self = this;\\n\\t\\tself.alphabet = \\\"abcdefghijklmnopqrstuvwxyz\\\";\\n\\t\\t\\n\\t\\t/*\\n\\t\\tif (!self.alphabet) {\\n\\t\\t\\t// Use the alphabet as implicitly defined by the words in the dictionary.\\n\\t\\t\\tvar alphaHash = {};\\n\\t\\t\\t\\n\\t\\t\\tfor (var i in self.dictionaryTable) {\\n\\t\\t\\t\\tfor (var j = 0, _len = i.length; j < _len; j++) {\\n\\t\\t\\t\\t\\talphaHash[i[j]] = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tfor (var i in alphaHash) {\\n\\t\\t\\t\\tself.alphabet += i;\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tvar alphaArray = self.alphabet.split(\\\"\\\");\\n\\t\\t\\talphaArray.sort();\\n\\t\\t\\tself.alphabet = alphaArray.join(\\\"\\\");\\n\\t\\t}\\n\\t\\t*/\\n\\t\\t\\n\\t\\tfunction edits1(words) {\\n\\t\\t\\tvar rv = [];\\n\\t\\t\\t\\n\\t\\t\\tvar ii, i, j, _iilen, _len, _jlen;\\n\\t\\t\\t\\n\\t\\t\\tfor (ii = 0, _iilen = words.length; ii < _iilen; ii++) {\\n\\t\\t\\t\\tvar word = words[ii];\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tfor (i = 0, _len = word.length + 1; i < _len; i++) {\\n\\t\\t\\t\\t\\tvar s = [ word.substring(0, i), word.substring(i) ];\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tif (s[1]) {\\n\\t\\t\\t\\t\\t\\trv.push(s[0] + s[1].substring(1));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t// Eliminate transpositions of identical letters\\n\\t\\t\\t\\t\\tif (s[1].length > 1 && s[1][1] !== s[1][0]) {\\n\\t\\t\\t\\t\\t\\trv.push(s[0] + s[1][1] + s[1][0] + s[1].substring(2));\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (s[1]) {\\n\\t\\t\\t\\t\\t\\tfor (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\\n\\t\\t\\t\\t\\t\\t\\t// Eliminate replacement of a letter by itself\\n\\t\\t\\t\\t\\t\\t\\tif (self.alphabet[j] != s[1].substring(0,1)){\\n\\t\\t\\t\\t\\t\\t\\t\\trv.push(s[0] + self.alphabet[j] + s[1].substring(1));\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tif (s[1]) {\\n\\t\\t\\t\\t\\t\\tfor (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\\n\\t\\t\\t\\t\\t\\t\\trv.push(s[0] + self.alphabet[j] + s[1]);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\treturn rv;\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunction known(words) {\\n\\t\\t\\tvar rv = [];\\n\\t\\t\\t\\n\\t\\t\\tfor (var i = 0, _len = words.length; i < _len; i++) {\\n\\t\\t\\t\\tif (self.check(words[i])) {\\n\\t\\t\\t\\t\\trv.push(words[i]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\treturn rv;\\n\\t\\t}\\n\\t\\t\\n\\t\\tfunction correct(word) {\\n\\t\\t\\t// Get the edit-distance-1 and edit-distance-2 forms of this word.\\n\\t\\t\\tvar ed1 = edits1([word]);\\n\\t\\t\\tvar ed2 = edits1(ed1);\\n\\t\\t\\t\\n\\t\\t\\tvar corrections = known(ed1.concat(ed2));\\n\\t\\t\\t\\n\\t\\t\\tvar i, _len;\\n\\t\\t\\t\\n\\t\\t\\t// Sort the edits based on how many different ways they were created.\\n\\t\\t\\tvar weighted_corrections = {};\\n\\t\\t\\t\\n\\t\\t\\tfor (i = 0, _len = corrections.length; i < _len; i++) {\\n\\t\\t\\t\\tif (!(corrections[i] in weighted_corrections)) {\\n\\t\\t\\t\\t\\tweighted_corrections[corrections[i]] = 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse {\\n\\t\\t\\t\\t\\tweighted_corrections[corrections[i]] += 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tvar sorted_corrections = [];\\n\\t\\t\\t\\n\\t\\t\\tfor (i in weighted_corrections) {\\n\\t\\t\\t\\tif (weighted_corrections.hasOwnProperty(i)) {\\n\\t\\t\\t\\t\\tsorted_corrections.push([ i, weighted_corrections[i] ]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tfunction sorter(a, b) {\\n\\t\\t\\t\\tif (a[1] < b[1]) {\\n\\t\\t\\t\\t\\treturn -1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\treturn 1;\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tsorted_corrections.sort(sorter).reverse();\\n\\t\\t\\t\\n\\t\\t\\tvar rv = [];\\n\\n\\t\\t\\tvar capitalization_scheme = \\\"lowercase\\\";\\n\\t\\t\\t\\n\\t\\t\\tif (word.toUpperCase() === word) {\\n\\t\\t\\t\\tcapitalization_scheme = \\\"uppercase\\\";\\n\\t\\t\\t}\\n\\t\\t\\telse if (word.substr(0, 1).toUpperCase() + word.substr(1).toLowerCase() === word) {\\n\\t\\t\\t\\tcapitalization_scheme = \\\"capitalized\\\";\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\tfor (i = 0, _len = Math.min(limit, sorted_corrections.length); i < _len; i++) {\\n\\t\\t\\t\\tif (\\\"uppercase\\\" === capitalization_scheme) {\\n\\t\\t\\t\\t\\tsorted_corrections[i][0] = sorted_corrections[i][0].toUpperCase();\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse if (\\\"capitalized\\\" === capitalization_scheme) {\\n\\t\\t\\t\\t\\tsorted_corrections[i][0] = sorted_corrections[i][0].substr(0, 1).toUpperCase() + sorted_corrections[i][0].substr(1);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tif (!self.hasFlag(sorted_corrections[i][0], \\\"NOSUGGEST\\\")) {\\n\\t\\t\\t\\t\\trv.push(sorted_corrections[i][0]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\\n\\t\\t\\treturn rv;\\n\\t\\t}\\n\\t\\t\\n\\t\\tthis.memoized[word] = {\\n\\t\\t\\t'suggestions': correct(word),\\n\\t\\t\\t'limit': limit\\n\\t\\t};\\n\\n\\t\\treturn this.memoized[word]['suggestions'];\\n\\t}\\n};\\n})();\\n\\n// Support for use as a node.js module.\\nif (typeof module !== 'undefined') {\\n\\tmodule.exports = Typo;\\n}\",\"// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: http://codemirror.net/LICENSE\\n\\n(function(mod) {\\n  if (typeof exports == \\\"object\\\" && typeof module == \\\"object\\\") // CommonJS\\n    mod(require(\\\"../../lib/codemirror\\\"));\\n  else if (typeof define == \\\"function\\\" && define.amd) // AMD\\n    define([\\\"../../lib/codemirror\\\"], mod);\\n  else // Plain browser env\\n    mod(CodeMirror);\\n})(function(CodeMirror) {\\n  \\\"use strict\\\";\\n\\n  CodeMirror.defineOption(\\\"fullScreen\\\", false, function(cm, val, old) {\\n    if (old == CodeMirror.Init) old = false;\\n    if (!old == !val) return;\\n    if (val) setFullscreen(cm);\\n    else setNormal(cm);\\n  });\\n\\n  function setFullscreen(cm) {\\n    var wrap = cm.getWrapperElement();\\n    cm.state.fullScreenRestore = {scrollTop: window.pageYOffset, scrollLeft: window.pageXOffset,\\n                                  width: wrap.style.width, height: wrap.style.height};\\n    wrap.style.width = \\\"\\\";\\n    wrap.style.height = \\\"auto\\\";\\n    wrap.className += \\\" CodeMirror-fullscreen\\\";\\n    document.documentElement.style.overflow = \\\"hidden\\\";\\n    cm.refresh();\\n  }\\n\\n  function setNormal(cm) {\\n    var wrap = cm.getWrapperElement();\\n    wrap.className = wrap.className.replace(/\\\\s*CodeMirror-fullscreen\\\\b/, \\\"\\\");\\n    document.documentElement.style.overflow = \\\"\\\";\\n    var info = cm.state.fullScreenRestore;\\n    wrap.style.width = info.width; wrap.style.height = info.height;\\n    window.scrollTo(info.scrollLeft, info.scrollTop);\\n    cm.refresh();\\n  }\\n});\\n\",\"var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('markdown-editor',{model:{value:(_vm.content),callback:function ($$v) {_vm.content=$$v},expression:\\\"content\\\"}})],1)}\\nvar staticRenderFns = []\\n\\nexport { render, staticRenderFns }\",\"var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\\\"markdown-wrapper\\\"},[_c('textarea',{ref:\\\"editor\\\"})])}\\nvar staticRenderFns = []\\n\\nexport { render, staticRenderFns }\",\"<template>\\n  <div class=\\\"markdown-wrapper\\\">\\n    <textarea ref=\\\"editor\\\"></textarea>\\n  </div>\\n</template>\\n\\n<script>\\nimport Simplemde from 'simplemde'\\nimport 'simplemde/dist/simplemde.min.css'\\nexport default {\\n  naem: 'MarkdownEditor',\\n  props: {\\n    value: {\\n      type: String,\\n      default: ''\\n    },\\n    options: {\\n      type: Object,\\n      default: () => {\\n        return {}\\n      }\\n    },\\n    localCache: {\\n      type: Boolean,\\n      default: true\\n    }\\n  },\\n  data () {\\n    return {\\n      editor: null\\n    }\\n  },\\n  methods: {\\n    addEvents () {\\n      this.editor.codemirror.on('change', () => {\\n        let value = this.editor.value()\\n        if (this.localCache) localStorage.markdownContent = value\\n        this.$emit('input', value)\\n        this.$emit('on-change', value)\\n      })\\n      this.editor.codemirror.on('focus', () => {\\n        this.$emit('on-focus', this.editor.value())\\n      })\\n      this.editor.codemirror.on('blur', () => {\\n        this.$emit('on-blur', this.editor.value())\\n      })\\n    }\\n  },\\n  mounted () {\\n    this.editor = new Simplemde(Object.assign(this.options, {\\n      element: this.$refs.editor\\n    }))\\n    /**\\n     * 事件列表为Codemirror编辑器的事件，更多事件类型，请参考：\\n     * https://codemirror.net/doc/manual.html#events\\n     */\\n    this.addEvents()\\n    let content = localStorage.markdownContent\\n    if (content) this.editor.value(content)\\n  }\\n}\\n</script>\\n\\n<style lang=\\\"less\\\">\\n.markdown-wrapper{\\n  .editor-toolbar.fullscreen{\\n    z-index: 9999;\\n  }\\n  .CodeMirror-fullscreen{\\n    z-index: 9999;\\n  }\\n  .CodeMirror-fullscreen ~ .editor-preview-side{\\n    z-index: 9999;\\n  }\\n}\\n</style>\\n\",\"import mod from \\\"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\\\"; export default mod; export * from \\\"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\\\"\",\"import { render, staticRenderFns } from \\\"./markdown.vue?vue&type=template&id=b709a36e&\\\"\\nimport script from \\\"./markdown.vue?vue&type=script&lang=js&\\\"\\nexport * from \\\"./markdown.vue?vue&type=script&lang=js&\\\"\\nimport style0 from \\\"./markdown.vue?vue&type=style&index=0&lang=less&\\\"\\n\\n\\n/* normalize component */\\nimport normalizer from \\\"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\\\"\\nvar component = normalizer(\\n  script,\\n  render,\\n  staticRenderFns,\\n  false,\\n  null,\\n  null,\\n  null\\n  \\n)\\n\\nexport default component.exports\",\"import MarkdownEditor from './markdown.vue'\\nexport default MarkdownEditor\\n\",\"<template>\\n  <div>\\n    <markdown-editor v-model=\\\"content\\\"/>\\n  </div>\\n</template>\\n\\n<script>\\nimport MarkdownEditor from '_c/markdown'\\nexport default {\\n  name: 'markdown_page',\\n  components: {\\n    MarkdownEditor\\n  },\\n  data () {\\n    return {\\n      content: ''\\n    }\\n  }\\n}\\n</script>\\n\\n<style>\\n\\n</style>\\n\",\"import mod from \\\"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\\\"; export default mod; export * from \\\"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=script&lang=js&\\\"\",\"import { render, staticRenderFns } from \\\"./markdown.vue?vue&type=template&id=157f5a35&\\\"\\nimport script from \\\"./markdown.vue?vue&type=script&lang=js&\\\"\\nexport * from \\\"./markdown.vue?vue&type=script&lang=js&\\\"\\n\\n\\n/* normalize component */\\nimport normalizer from \\\"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\\\"\\nvar component = normalizer(\\n  script,\\n  render,\\n  staticRenderFns,\\n  false,\\n  null,\\n  null,\\n  null\\n  \\n)\\n\\nexport default component.exports\",\"import mod from \\\"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=style&index=0&lang=less&\\\"; export default mod; export * from \\\"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./markdown.vue?vue&type=style&index=0&lang=less&\\\"\",\"// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: http://codemirror.net/LICENSE\\n\\n(function(mod) {\\n  if (typeof exports == \\\"object\\\" && typeof module == \\\"object\\\") // CommonJS\\n    mod(require(\\\"../../lib/codemirror\\\"), require(\\\"../xml/xml\\\"), require(\\\"../meta\\\"));\\n  else if (typeof define == \\\"function\\\" && define.amd) // AMD\\n    define([\\\"../../lib/codemirror\\\", \\\"../xml/xml\\\", \\\"../meta\\\"], mod);\\n  else // Plain browser env\\n    mod(CodeMirror);\\n})(function(CodeMirror) {\\n\\\"use strict\\\";\\n\\nCodeMirror.defineMode(\\\"markdown\\\", function(cmCfg, modeCfg) {\\n\\n  var htmlMode = CodeMirror.getMode(cmCfg, \\\"text/html\\\");\\n  var htmlModeMissing = htmlMode.name == \\\"null\\\"\\n\\n  function getMode(name) {\\n    if (CodeMirror.findModeByName) {\\n      var found = CodeMirror.findModeByName(name);\\n      if (found) name = found.mime || found.mimes[0];\\n    }\\n    var mode = CodeMirror.getMode(cmCfg, name);\\n    return mode.name == \\\"null\\\" ? null : mode;\\n  }\\n\\n  // Should characters that affect highlighting be highlighted separate?\\n  // Does not include characters that will be output (such as `1.` and `-` for lists)\\n  if (modeCfg.highlightFormatting === undefined)\\n    modeCfg.highlightFormatting = false;\\n\\n  // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\\n  // Excess `>` will emit `error` token.\\n  if (modeCfg.maxBlockquoteDepth === undefined)\\n    modeCfg.maxBlockquoteDepth = 0;\\n\\n  // Turn on task lists? (\\\"- [ ] \\\" and \\\"- [x] \\\")\\n  if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\\n\\n  // Turn on strikethrough syntax\\n  if (modeCfg.strikethrough === undefined)\\n    modeCfg.strikethrough = false;\\n\\n  if (modeCfg.emoji === undefined)\\n    modeCfg.emoji = false;\\n\\n  if (modeCfg.fencedCodeBlockHighlighting === undefined)\\n    modeCfg.fencedCodeBlockHighlighting = true;\\n\\n  if (modeCfg.xml === undefined)\\n    modeCfg.xml = true;\\n\\n  // Allow token types to be overridden by user-provided token types.\\n  if (modeCfg.tokenTypeOverrides === undefined)\\n    modeCfg.tokenTypeOverrides = {};\\n\\n  var tokenTypes = {\\n    header: \\\"header\\\",\\n    code: \\\"comment\\\",\\n    quote: \\\"quote\\\",\\n    list1: \\\"variable-2\\\",\\n    list2: \\\"variable-3\\\",\\n    list3: \\\"keyword\\\",\\n    hr: \\\"hr\\\",\\n    image: \\\"image\\\",\\n    imageAltText: \\\"image-alt-text\\\",\\n    imageMarker: \\\"image-marker\\\",\\n    formatting: \\\"formatting\\\",\\n    linkInline: \\\"link\\\",\\n    linkEmail: \\\"link\\\",\\n    linkText: \\\"link\\\",\\n    linkHref: \\\"string\\\",\\n    em: \\\"em\\\",\\n    strong: \\\"strong\\\",\\n    strikethrough: \\\"strikethrough\\\",\\n    emoji: \\\"builtin\\\"\\n  };\\n\\n  for (var tokenType in tokenTypes) {\\n    if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\\n      tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\\n    }\\n  }\\n\\n  var hrRE = /^([*\\\\-_])(?:\\\\s*\\\\1){2,}\\\\s*$/\\n  ,   listRE = /^(?:[*\\\\-+]|^[0-9]+([.)]))\\\\s+/\\n  ,   taskListRE = /^\\\\[(x| )\\\\](?=\\\\s)/i // Must follow listRE\\n  ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\\n  ,   setextHeaderRE = /^ *(?:\\\\={1,}|-{1,})\\\\s*$/\\n  ,   textRE = /^[^#!\\\\[\\\\]*_\\\\\\\\<>` \\\"'(~:]+/\\n  ,   fencedCodeRE = /^(~~~+|```+)[ \\\\t]*([\\\\w+#-]*)[^\\\\n`]*$/\\n  ,   linkDefRE = /^\\\\s*\\\\[[^\\\\]]+?\\\\]:.*$/ // naive link-definition\\n  ,   punctuation = /[!\\\\\\\"#$%&\\\\'()*+,\\\\-\\\\.\\\\/:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~—]/\\n  ,   expandedTab = \\\"    \\\" // CommonMark specifies tab as 4 spaces\\n\\n  function switchInline(stream, state, f) {\\n    state.f = state.inline = f;\\n    return f(stream, state);\\n  }\\n\\n  function switchBlock(stream, state, f) {\\n    state.f = state.block = f;\\n    return f(stream, state);\\n  }\\n\\n  function lineIsEmpty(line) {\\n    return !line || !/\\\\S/.test(line.string)\\n  }\\n\\n  // Blocks\\n\\n  function blankLine(state) {\\n    // Reset linkTitle state\\n    state.linkTitle = false;\\n    state.linkHref = false;\\n    state.linkText = false;\\n    // Reset EM state\\n    state.em = false;\\n    // Reset STRONG state\\n    state.strong = false;\\n    // Reset strikethrough state\\n    state.strikethrough = false;\\n    // Reset state.quote\\n    state.quote = 0;\\n    // Reset state.indentedCode\\n    state.indentedCode = false;\\n    if (state.f == htmlBlock) {\\n      state.f = inlineNormal;\\n      state.block = blockNormal;\\n    }\\n    // Reset state.trailingSpace\\n    state.trailingSpace = 0;\\n    state.trailingSpaceNewLine = false;\\n    // Mark this line as blank\\n    state.prevLine = state.thisLine\\n    state.thisLine = {stream: null}\\n    return null;\\n  }\\n\\n  function blockNormal(stream, state) {\\n    var firstTokenOnLine = stream.column() === state.indentation;\\n    var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\\n    var prevLineIsIndentedCode = state.indentedCode;\\n    var prevLineIsHr = state.prevLine.hr;\\n    var prevLineIsList = state.list !== false;\\n    var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\\n\\n    state.indentedCode = false;\\n\\n    var lineIndentation = state.indentation;\\n    // compute once per line (on first token)\\n    if (state.indentationDiff === null) {\\n      state.indentationDiff = state.indentation;\\n      if (prevLineIsList) {\\n        // Reset inline styles which shouldn't propagate aross list items\\n        state.em = false;\\n        state.strong = false;\\n        state.code = false;\\n        state.strikethrough = false;\\n\\n        state.list = null;\\n        // While this list item's marker's indentation is less than the deepest\\n        //  list item's content's indentation,pop the deepest list item\\n        //  indentation off the stack, and update block indentation state\\n        while (lineIndentation < state.listStack[state.listStack.length - 1]) {\\n          state.listStack.pop();\\n          if (state.listStack.length) {\\n            state.indentation = state.listStack[state.listStack.length - 1];\\n          // less than the first list's indent -> the line is no longer a list\\n          } else {\\n            state.list = false;\\n          }\\n        }\\n        if (state.list !== false) {\\n          state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1]\\n        }\\n      }\\n    }\\n\\n    // not comprehensive (currently only for setext detection purposes)\\n    var allowsInlineContinuation = (\\n        !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header &&\\n        (!prevLineIsList || !prevLineIsIndentedCode) &&\\n        !state.prevLine.fencedCodeEnd\\n    );\\n\\n    var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) &&\\n      state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\\n\\n    var match = null;\\n    if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd ||\\n         state.prevLine.header || prevLineLineIsEmpty)) {\\n      stream.skipToEnd();\\n      state.indentedCode = true;\\n      return tokenTypes.code;\\n    } else if (stream.eatSpace()) {\\n      return null;\\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\\n      state.quote = 0;\\n      state.header = match[1].length;\\n      state.thisLine.header = true;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"header\\\";\\n      state.f = state.inline;\\n      return getType(state);\\n    } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\\n      state.quote = firstTokenOnLine ? 1 : state.quote + 1;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"quote\\\";\\n      stream.eatSpace();\\n      return getType(state);\\n    } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\\n      var listType = match[1] ? \\\"ol\\\" : \\\"ul\\\";\\n\\n      state.indentation = lineIndentation + stream.current().length;\\n      state.list = true;\\n      state.quote = 0;\\n\\n      // Add this list item's content's indentation to the stack\\n      state.listStack.push(state.indentation);\\n\\n      if (modeCfg.taskLists && stream.match(taskListRE, false)) {\\n        state.taskList = true;\\n      }\\n      state.f = state.inline;\\n      if (modeCfg.highlightFormatting) state.formatting = [\\\"list\\\", \\\"list-\\\" + listType];\\n      return getType(state);\\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\\n      state.quote = 0;\\n      state.fencedEndRE = new RegExp(match[1] + \\\"+ *$\\\");\\n      // try switching mode\\n      state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2]);\\n      if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\\n      state.f = state.block = local;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"code-block\\\";\\n      state.code = -1\\n      return getType(state);\\n    // SETEXT has lowest block-scope precedence after HR, so check it after\\n    //  the others (code, blockquote, list...)\\n    } else if (\\n      // if setext set, indicates line after ---/===\\n      state.setext || (\\n        // line before ---/===\\n        (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false &&\\n        !state.code && !isHr && !linkDefRE.test(stream.string) &&\\n        (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))\\n      )\\n    ) {\\n      if ( !state.setext ) {\\n        state.header = match[0].charAt(0) == '=' ? 1 : 2;\\n        state.setext = state.header;\\n      } else {\\n        state.header = state.setext;\\n        // has no effect on type so we can reset it now\\n        state.setext = 0;\\n        stream.skipToEnd();\\n        if (modeCfg.highlightFormatting) state.formatting = \\\"header\\\";\\n      }\\n      state.thisLine.header = true;\\n      state.f = state.inline;\\n      return getType(state);\\n    } else if (isHr) {\\n      stream.skipToEnd();\\n      state.hr = true;\\n      state.thisLine.hr = true;\\n      return tokenTypes.hr;\\n    } else if (stream.peek() === '[') {\\n      return switchInline(stream, state, footnoteLink);\\n    }\\n\\n    return switchInline(stream, state, state.inline);\\n  }\\n\\n  function htmlBlock(stream, state) {\\n    var style = htmlMode.token(stream, state.htmlState);\\n    if (!htmlModeMissing) {\\n      var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\\n      if ((inner.mode.name == \\\"xml\\\" && inner.state.tagStart === null &&\\n           (!inner.state.context && inner.state.tokenize.isInText)) ||\\n          (state.md_inside && stream.current().indexOf(\\\">\\\") > -1)) {\\n        state.f = inlineNormal;\\n        state.block = blockNormal;\\n        state.htmlState = null;\\n      }\\n    }\\n    return style;\\n  }\\n\\n  function local(stream, state) {\\n    var currListInd = state.listStack[state.listStack.length - 1] || 0;\\n    var hasExitedList = state.indentation < currListInd;\\n    var maxFencedEndInd = currListInd + 3;\\n    if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"code-block\\\";\\n      var returnType;\\n      if (!hasExitedList) returnType = getType(state)\\n      state.localMode = state.localState = null;\\n      state.block = blockNormal;\\n      state.f = inlineNormal;\\n      state.fencedEndRE = null;\\n      state.code = 0\\n      state.thisLine.fencedCodeEnd = true;\\n      if (hasExitedList) return switchBlock(stream, state, state.block);\\n      return returnType;\\n    } else if (state.localMode) {\\n      return state.localMode.token(stream, state.localState);\\n    } else {\\n      stream.skipToEnd();\\n      return tokenTypes.code;\\n    }\\n  }\\n\\n  // Inline\\n  function getType(state) {\\n    var styles = [];\\n\\n    if (state.formatting) {\\n      styles.push(tokenTypes.formatting);\\n\\n      if (typeof state.formatting === \\\"string\\\") state.formatting = [state.formatting];\\n\\n      for (var i = 0; i < state.formatting.length; i++) {\\n        styles.push(tokenTypes.formatting + \\\"-\\\" + state.formatting[i]);\\n\\n        if (state.formatting[i] === \\\"header\\\") {\\n          styles.push(tokenTypes.formatting + \\\"-\\\" + state.formatting[i] + \\\"-\\\" + state.header);\\n        }\\n\\n        // Add `formatting-quote` and `formatting-quote-#` for blockquotes\\n        // Add `error` instead if the maximum blockquote nesting depth is passed\\n        if (state.formatting[i] === \\\"quote\\\") {\\n          if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\\n            styles.push(tokenTypes.formatting + \\\"-\\\" + state.formatting[i] + \\\"-\\\" + state.quote);\\n          } else {\\n            styles.push(\\\"error\\\");\\n          }\\n        }\\n      }\\n    }\\n\\n    if (state.taskOpen) {\\n      styles.push(\\\"meta\\\");\\n      return styles.length ? styles.join(' ') : null;\\n    }\\n    if (state.taskClosed) {\\n      styles.push(\\\"property\\\");\\n      return styles.length ? styles.join(' ') : null;\\n    }\\n\\n    if (state.linkHref) {\\n      styles.push(tokenTypes.linkHref, \\\"url\\\");\\n    } else { // Only apply inline styles to non-url text\\n      if (state.strong) { styles.push(tokenTypes.strong); }\\n      if (state.em) { styles.push(tokenTypes.em); }\\n      if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\\n      if (state.emoji) { styles.push(tokenTypes.emoji); }\\n      if (state.linkText) { styles.push(tokenTypes.linkText); }\\n      if (state.code) { styles.push(tokenTypes.code); }\\n      if (state.image) { styles.push(tokenTypes.image); }\\n      if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \\\"link\\\"); }\\n      if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\\n    }\\n\\n    if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \\\"-\\\" + state.header); }\\n\\n    if (state.quote) {\\n      styles.push(tokenTypes.quote);\\n\\n      // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\\n      if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\\n        styles.push(tokenTypes.quote + \\\"-\\\" + state.quote);\\n      } else {\\n        styles.push(tokenTypes.quote + \\\"-\\\" + modeCfg.maxBlockquoteDepth);\\n      }\\n    }\\n\\n    if (state.list !== false) {\\n      var listMod = (state.listStack.length - 1) % 3;\\n      if (!listMod) {\\n        styles.push(tokenTypes.list1);\\n      } else if (listMod === 1) {\\n        styles.push(tokenTypes.list2);\\n      } else {\\n        styles.push(tokenTypes.list3);\\n      }\\n    }\\n\\n    if (state.trailingSpaceNewLine) {\\n      styles.push(\\\"trailing-space-new-line\\\");\\n    } else if (state.trailingSpace) {\\n      styles.push(\\\"trailing-space-\\\" + (state.trailingSpace % 2 ? \\\"a\\\" : \\\"b\\\"));\\n    }\\n\\n    return styles.length ? styles.join(' ') : null;\\n  }\\n\\n  function handleText(stream, state) {\\n    if (stream.match(textRE, true)) {\\n      return getType(state);\\n    }\\n    return undefined;\\n  }\\n\\n  function inlineNormal(stream, state) {\\n    var style = state.text(stream, state);\\n    if (typeof style !== 'undefined')\\n      return style;\\n\\n    if (state.list) { // List marker (*, +, -, 1., etc)\\n      state.list = null;\\n      return getType(state);\\n    }\\n\\n    if (state.taskList) {\\n      var taskOpen = stream.match(taskListRE, true)[1] === \\\" \\\";\\n      if (taskOpen) state.taskOpen = true;\\n      else state.taskClosed = true;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"task\\\";\\n      state.taskList = false;\\n      return getType(state);\\n    }\\n\\n    state.taskOpen = false;\\n    state.taskClosed = false;\\n\\n    if (state.header && stream.match(/^#+$/, true)) {\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"header\\\";\\n      return getType(state);\\n    }\\n\\n    var ch = stream.next();\\n\\n    // Matches link titles present on next line\\n    if (state.linkTitle) {\\n      state.linkTitle = false;\\n      var matchCh = ch;\\n      if (ch === '(') {\\n        matchCh = ')';\\n      }\\n      matchCh = (matchCh+'').replace(/([.?*+^\\\\[\\\\]\\\\\\\\(){}|-])/g, \\\"\\\\\\\\$1\\\");\\n      var regex = '^\\\\\\\\s*(?:[^' + matchCh + '\\\\\\\\\\\\\\\\]+|\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\|\\\\\\\\\\\\\\\\.)' + matchCh;\\n      if (stream.match(new RegExp(regex), true)) {\\n        return tokenTypes.linkHref;\\n      }\\n    }\\n\\n    // If this block is changed, it may need to be updated in GFM mode\\n    if (ch === '`') {\\n      var previousFormatting = state.formatting;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"code\\\";\\n      stream.eatWhile('`');\\n      var count = stream.current().length\\n      if (state.code == 0 && (!state.quote || count == 1)) {\\n        state.code = count\\n        return getType(state)\\n      } else if (count == state.code) { // Must be exact\\n        var t = getType(state)\\n        state.code = 0\\n        return t\\n      } else {\\n        state.formatting = previousFormatting\\n        return getType(state)\\n      }\\n    } else if (state.code) {\\n      return getType(state);\\n    }\\n\\n    if (ch === '\\\\\\\\') {\\n      stream.next();\\n      if (modeCfg.highlightFormatting) {\\n        var type = getType(state);\\n        var formattingEscape = tokenTypes.formatting + \\\"-escape\\\";\\n        return type ? type + \\\" \\\" + formattingEscape : formattingEscape;\\n      }\\n    }\\n\\n    if (ch === '!' && stream.match(/\\\\[[^\\\\]]*\\\\] ?(?:\\\\(|\\\\[)/, false)) {\\n      state.imageMarker = true;\\n      state.image = true;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"image\\\";\\n      return getType(state);\\n    }\\n\\n    if (ch === '[' && state.imageMarker && stream.match(/[^\\\\]]*\\\\](\\\\(.*?\\\\)| ?\\\\[.*?\\\\])/, false)) {\\n      state.imageMarker = false;\\n      state.imageAltText = true\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"image\\\";\\n      return getType(state);\\n    }\\n\\n    if (ch === ']' && state.imageAltText) {\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"image\\\";\\n      var type = getType(state);\\n      state.imageAltText = false;\\n      state.image = false;\\n      state.inline = state.f = linkHref;\\n      return type;\\n    }\\n\\n    if (ch === '[' && !state.image) {\\n      state.linkText = true;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"link\\\";\\n      return getType(state);\\n    }\\n\\n    if (ch === ']' && state.linkText) {\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"link\\\";\\n      var type = getType(state);\\n      state.linkText = false;\\n      state.inline = state.f = stream.match(/\\\\(.*?\\\\)| ?\\\\[.*?\\\\]/, false) ? linkHref : inlineNormal\\n      return type;\\n    }\\n\\n    if (ch === '<' && stream.match(/^(https?|ftps?):\\\\/\\\\/(?:[^\\\\\\\\>]|\\\\\\\\.)+>/, false)) {\\n      state.f = state.inline = linkInline;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"link\\\";\\n      var type = getType(state);\\n      if (type){\\n        type += \\\" \\\";\\n      } else {\\n        type = \\\"\\\";\\n      }\\n      return type + tokenTypes.linkInline;\\n    }\\n\\n    if (ch === '<' && stream.match(/^[^> \\\\\\\\]+@(?:[^\\\\\\\\>]|\\\\\\\\.)+>/, false)) {\\n      state.f = state.inline = linkInline;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"link\\\";\\n      var type = getType(state);\\n      if (type){\\n        type += \\\" \\\";\\n      } else {\\n        type = \\\"\\\";\\n      }\\n      return type + tokenTypes.linkEmail;\\n    }\\n\\n    if (modeCfg.xml && ch === '<' && stream.match(/^(!--|[a-z][a-z0-9-]*(?:\\\\s+[a-z_:.\\\\-]+(?:\\\\s*=\\\\s*[^>]+)?)*\\\\s*>)/i, false)) {\\n      var end = stream.string.indexOf(\\\">\\\", stream.pos);\\n      if (end != -1) {\\n        var atts = stream.string.substring(stream.start, end);\\n        if (/markdown\\\\s*=\\\\s*('|\\\"){0,1}1('|\\\"){0,1}/.test(atts)) state.md_inside = true;\\n      }\\n      stream.backUp(1);\\n      state.htmlState = CodeMirror.startState(htmlMode);\\n      return switchBlock(stream, state, htmlBlock);\\n    }\\n\\n    if (modeCfg.xml && ch === '<' && stream.match(/^\\\\/\\\\w*?>/)) {\\n      state.md_inside = false;\\n      return \\\"tag\\\";\\n    } else if (ch === \\\"*\\\" || ch === \\\"_\\\") {\\n      var len = 1, before = stream.pos == 1 ? \\\" \\\" : stream.string.charAt(stream.pos - 2)\\n      while (len < 3 && stream.eat(ch)) len++\\n      var after = stream.peek() || \\\" \\\"\\n      // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\\n      var leftFlanking = !/\\\\s/.test(after) && (!punctuation.test(after) || /\\\\s/.test(before) || punctuation.test(before))\\n      var rightFlanking = !/\\\\s/.test(before) && (!punctuation.test(before) || /\\\\s/.test(after) || punctuation.test(after))\\n      var setEm = null, setStrong = null\\n      if (len % 2) { // Em\\n        if (!state.em && leftFlanking && (ch === \\\"*\\\" || !rightFlanking || punctuation.test(before)))\\n          setEm = true\\n        else if (state.em == ch && rightFlanking && (ch === \\\"*\\\" || !leftFlanking || punctuation.test(after)))\\n          setEm = false\\n      }\\n      if (len > 1) { // Strong\\n        if (!state.strong && leftFlanking && (ch === \\\"*\\\" || !rightFlanking || punctuation.test(before)))\\n          setStrong = true\\n        else if (state.strong == ch && rightFlanking && (ch === \\\"*\\\" || !leftFlanking || punctuation.test(after)))\\n          setStrong = false\\n      }\\n      if (setStrong != null || setEm != null) {\\n        if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \\\"strong\\\" : setStrong == null ? \\\"em\\\" : \\\"strong em\\\"\\n        if (setEm === true) state.em = ch\\n        if (setStrong === true) state.strong = ch\\n        var t = getType(state)\\n        if (setEm === false) state.em = false\\n        if (setStrong === false) state.strong = false\\n        return t\\n      }\\n    } else if (ch === ' ') {\\n      if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\\n        if (stream.peek() === ' ') { // Surrounded by spaces, ignore\\n          return getType(state);\\n        } else { // Not surrounded by spaces, back up pointer\\n          stream.backUp(1);\\n        }\\n      }\\n    }\\n\\n    if (modeCfg.strikethrough) {\\n      if (ch === '~' && stream.eatWhile(ch)) {\\n        if (state.strikethrough) {// Remove strikethrough\\n          if (modeCfg.highlightFormatting) state.formatting = \\\"strikethrough\\\";\\n          var t = getType(state);\\n          state.strikethrough = false;\\n          return t;\\n        } else if (stream.match(/^[^\\\\s]/, false)) {// Add strikethrough\\n          state.strikethrough = true;\\n          if (modeCfg.highlightFormatting) state.formatting = \\\"strikethrough\\\";\\n          return getType(state);\\n        }\\n      } else if (ch === ' ') {\\n        if (stream.match(/^~~/, true)) { // Probably surrounded by space\\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\\n            return getType(state);\\n          } else { // Not surrounded by spaces, back up pointer\\n            stream.backUp(2);\\n          }\\n        }\\n      }\\n    }\\n\\n    if (modeCfg.emoji && ch === \\\":\\\" && stream.match(/^[a-z_\\\\d+-]+:/)) {\\n      state.emoji = true;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"emoji\\\";\\n      var retType = getType(state);\\n      state.emoji = false;\\n      return retType;\\n    }\\n\\n    if (ch === ' ') {\\n      if (stream.match(/^ +$/, false)) {\\n        state.trailingSpace++;\\n      } else if (state.trailingSpace) {\\n        state.trailingSpaceNewLine = true;\\n      }\\n    }\\n\\n    return getType(state);\\n  }\\n\\n  function linkInline(stream, state) {\\n    var ch = stream.next();\\n\\n    if (ch === \\\">\\\") {\\n      state.f = state.inline = inlineNormal;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"link\\\";\\n      var type = getType(state);\\n      if (type){\\n        type += \\\" \\\";\\n      } else {\\n        type = \\\"\\\";\\n      }\\n      return type + tokenTypes.linkInline;\\n    }\\n\\n    stream.match(/^[^>]+/, true);\\n\\n    return tokenTypes.linkInline;\\n  }\\n\\n  function linkHref(stream, state) {\\n    // Check if space, and return NULL if so (to avoid marking the space)\\n    if(stream.eatSpace()){\\n      return null;\\n    }\\n    var ch = stream.next();\\n    if (ch === '(' || ch === '[') {\\n      state.f = state.inline = getLinkHrefInside(ch === \\\"(\\\" ? \\\")\\\" : \\\"]\\\");\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"link-string\\\";\\n      state.linkHref = true;\\n      return getType(state);\\n    }\\n    return 'error';\\n  }\\n\\n  var linkRE = {\\n    \\\")\\\": /^(?:[^\\\\\\\\\\\\(\\\\)]|\\\\\\\\.|\\\\((?:[^\\\\\\\\\\\\(\\\\)]|\\\\\\\\.)*\\\\))*?(?=\\\\))/,\\n    \\\"]\\\": /^(?:[^\\\\\\\\\\\\[\\\\]]|\\\\\\\\.|\\\\[(?:[^\\\\\\\\\\\\[\\\\]]|\\\\\\\\.)*\\\\])*?(?=\\\\])/\\n  }\\n\\n  function getLinkHrefInside(endChar) {\\n    return function(stream, state) {\\n      var ch = stream.next();\\n\\n      if (ch === endChar) {\\n        state.f = state.inline = inlineNormal;\\n        if (modeCfg.highlightFormatting) state.formatting = \\\"link-string\\\";\\n        var returnState = getType(state);\\n        state.linkHref = false;\\n        return returnState;\\n      }\\n\\n      stream.match(linkRE[endChar])\\n      state.linkHref = true;\\n      return getType(state);\\n    };\\n  }\\n\\n  function footnoteLink(stream, state) {\\n    if (stream.match(/^([^\\\\]\\\\\\\\]|\\\\\\\\.)*\\\\]:/, false)) {\\n      state.f = footnoteLinkInside;\\n      stream.next(); // Consume [\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"link\\\";\\n      state.linkText = true;\\n      return getType(state);\\n    }\\n    return switchInline(stream, state, inlineNormal);\\n  }\\n\\n  function footnoteLinkInside(stream, state) {\\n    if (stream.match(/^\\\\]:/, true)) {\\n      state.f = state.inline = footnoteUrl;\\n      if (modeCfg.highlightFormatting) state.formatting = \\\"link\\\";\\n      var returnType = getType(state);\\n      state.linkText = false;\\n      return returnType;\\n    }\\n\\n    stream.match(/^([^\\\\]\\\\\\\\]|\\\\\\\\.)+/, true);\\n\\n    return tokenTypes.linkText;\\n  }\\n\\n  function footnoteUrl(stream, state) {\\n    // Check if space, and return NULL if so (to avoid marking the space)\\n    if(stream.eatSpace()){\\n      return null;\\n    }\\n    // Match URL\\n    stream.match(/^[^\\\\s]+/, true);\\n    // Check for link title\\n    if (stream.peek() === undefined) { // End of line, set flag to check next line\\n      state.linkTitle = true;\\n    } else { // More content on line, check if link title\\n      stream.match(/^(?:\\\\s+(?:\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\\\\\\\\\|\\\\\\\\.)+\\\"|'(?:[^'\\\\\\\\]|\\\\\\\\\\\\\\\\|\\\\\\\\.)+'|\\\\((?:[^)\\\\\\\\]|\\\\\\\\\\\\\\\\|\\\\\\\\.)+\\\\)))?/, true);\\n    }\\n    state.f = state.inline = inlineNormal;\\n    return tokenTypes.linkHref + \\\" url\\\";\\n  }\\n\\n  var mode = {\\n    startState: function() {\\n      return {\\n        f: blockNormal,\\n\\n        prevLine: {stream: null},\\n        thisLine: {stream: null},\\n\\n        block: blockNormal,\\n        htmlState: null,\\n        indentation: 0,\\n\\n        inline: inlineNormal,\\n        text: handleText,\\n\\n        formatting: false,\\n        linkText: false,\\n        linkHref: false,\\n        linkTitle: false,\\n        code: 0,\\n        em: false,\\n        strong: false,\\n        header: 0,\\n        setext: 0,\\n        hr: false,\\n        taskList: false,\\n        list: false,\\n        listStack: [],\\n        quote: 0,\\n        trailingSpace: 0,\\n        trailingSpaceNewLine: false,\\n        strikethrough: false,\\n        emoji: false,\\n        fencedEndRE: null\\n      };\\n    },\\n\\n    copyState: function(s) {\\n      return {\\n        f: s.f,\\n\\n        prevLine: s.prevLine,\\n        thisLine: s.thisLine,\\n\\n        block: s.block,\\n        htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\\n        indentation: s.indentation,\\n\\n        localMode: s.localMode,\\n        localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\\n\\n        inline: s.inline,\\n        text: s.text,\\n        formatting: false,\\n        linkText: s.linkText,\\n        linkTitle: s.linkTitle,\\n        linkHref: s.linkHref,\\n        code: s.code,\\n        em: s.em,\\n        strong: s.strong,\\n        strikethrough: s.strikethrough,\\n        emoji: s.emoji,\\n        header: s.header,\\n        setext: s.setext,\\n        hr: s.hr,\\n        taskList: s.taskList,\\n        list: s.list,\\n        listStack: s.listStack.slice(0),\\n        quote: s.quote,\\n        indentedCode: s.indentedCode,\\n        trailingSpace: s.trailingSpace,\\n        trailingSpaceNewLine: s.trailingSpaceNewLine,\\n        md_inside: s.md_inside,\\n        fencedEndRE: s.fencedEndRE\\n      };\\n    },\\n\\n    token: function(stream, state) {\\n\\n      // Reset state.formatting\\n      state.formatting = false;\\n\\n      if (stream != state.thisLine.stream) {\\n        state.header = 0;\\n        state.hr = false;\\n\\n        if (stream.match(/^\\\\s*$/, true)) {\\n          blankLine(state);\\n          return null;\\n        }\\n\\n        state.prevLine = state.thisLine\\n        state.thisLine = {stream: stream}\\n\\n        // Reset state.taskList\\n        state.taskList = false;\\n\\n        // Reset state.trailingSpace\\n        state.trailingSpace = 0;\\n        state.trailingSpaceNewLine = false;\\n\\n        if (!state.localState) {\\n          state.f = state.block;\\n          if (state.f != htmlBlock) {\\n            var indentation = stream.match(/^\\\\s*/, true)[0].replace(/\\\\t/g, expandedTab).length;\\n            state.indentation = indentation;\\n            state.indentationDiff = null;\\n            if (indentation > 0) return null;\\n          }\\n        }\\n      }\\n      return state.f(stream, state);\\n    },\\n\\n    innerMode: function(state) {\\n      if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\\n      if (state.localState) return {state: state.localState, mode: state.localMode};\\n      return {state: state, mode: mode};\\n    },\\n\\n    indent: function(state, textAfter, line) {\\n      if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line)\\n      if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line)\\n      return CodeMirror.Pass\\n    },\\n\\n    blankLine: blankLine,\\n\\n    getType: getType,\\n\\n    closeBrackets: \\\"()[]{}''\\\\\\\"\\\\\\\"``\\\",\\n    fold: \\\"markdown\\\"\\n  };\\n  return mode;\\n}, \\\"xml\\\");\\n\\nCodeMirror.defineMIME(\\\"text/markdown\\\", \\\"markdown\\\");\\n\\nCodeMirror.defineMIME(\\\"text/x-markdown\\\", \\\"markdown\\\");\\n\\n});\\n\",\"// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: http://codemirror.net/LICENSE\\n\\n// Because sometimes you need to mark the selected *text*.\\n//\\n// Adds an option 'styleSelectedText' which, when enabled, gives\\n// selected text the CSS class given as option value, or\\n// \\\"CodeMirror-selectedtext\\\" when the value is not a string.\\n\\n(function(mod) {\\n  if (typeof exports == \\\"object\\\" && typeof module == \\\"object\\\") // CommonJS\\n    mod(require(\\\"../../lib/codemirror\\\"));\\n  else if (typeof define == \\\"function\\\" && define.amd) // AMD\\n    define([\\\"../../lib/codemirror\\\"], mod);\\n  else // Plain browser env\\n    mod(CodeMirror);\\n})(function(CodeMirror) {\\n  \\\"use strict\\\";\\n\\n  CodeMirror.defineOption(\\\"styleSelectedText\\\", false, function(cm, val, old) {\\n    var prev = old && old != CodeMirror.Init;\\n    if (val && !prev) {\\n      cm.state.markedSelection = [];\\n      cm.state.markedSelectionStyle = typeof val == \\\"string\\\" ? val : \\\"CodeMirror-selectedtext\\\";\\n      reset(cm);\\n      cm.on(\\\"cursorActivity\\\", onCursorActivity);\\n      cm.on(\\\"change\\\", onChange);\\n    } else if (!val && prev) {\\n      cm.off(\\\"cursorActivity\\\", onCursorActivity);\\n      cm.off(\\\"change\\\", onChange);\\n      clear(cm);\\n      cm.state.markedSelection = cm.state.markedSelectionStyle = null;\\n    }\\n  });\\n\\n  function onCursorActivity(cm) {\\n    if (cm.state.markedSelection)\\n      cm.operation(function() { update(cm); });\\n  }\\n\\n  function onChange(cm) {\\n    if (cm.state.markedSelection && cm.state.markedSelection.length)\\n      cm.operation(function() { clear(cm); });\\n  }\\n\\n  var CHUNK_SIZE = 8;\\n  var Pos = CodeMirror.Pos;\\n  var cmp = CodeMirror.cmpPos;\\n\\n  function coverRange(cm, from, to, addAt) {\\n    if (cmp(from, to) == 0) return;\\n    var array = cm.state.markedSelection;\\n    var cls = cm.state.markedSelectionStyle;\\n    for (var line = from.line;;) {\\n      var start = line == from.line ? from : Pos(line, 0);\\n      var endLine = line + CHUNK_SIZE, atEnd = endLine >= to.line;\\n      var end = atEnd ? to : Pos(endLine, 0);\\n      var mark = cm.markText(start, end, {className: cls});\\n      if (addAt == null) array.push(mark);\\n      else array.splice(addAt++, 0, mark);\\n      if (atEnd) break;\\n      line = endLine;\\n    }\\n  }\\n\\n  function clear(cm) {\\n    var array = cm.state.markedSelection;\\n    for (var i = 0; i < array.length; ++i) array[i].clear();\\n    array.length = 0;\\n  }\\n\\n  function reset(cm) {\\n    clear(cm);\\n    var ranges = cm.listSelections();\\n    for (var i = 0; i < ranges.length; i++)\\n      coverRange(cm, ranges[i].from(), ranges[i].to());\\n  }\\n\\n  function update(cm) {\\n    if (!cm.somethingSelected()) return clear(cm);\\n    if (cm.listSelections().length > 1) return reset(cm);\\n\\n    var from = cm.getCursor(\\\"start\\\"), to = cm.getCursor(\\\"end\\\");\\n\\n    var array = cm.state.markedSelection;\\n    if (!array.length) return coverRange(cm, from, to);\\n\\n    var coverStart = array[0].find(), coverEnd = array[array.length - 1].find();\\n    if (!coverStart || !coverEnd || to.line - from.line <= CHUNK_SIZE ||\\n        cmp(from, coverEnd.to) >= 0 || cmp(to, coverStart.from) <= 0)\\n      return reset(cm);\\n\\n    while (cmp(from, coverStart.from) > 0) {\\n      array.shift().clear();\\n      coverStart = array[0].find();\\n    }\\n    if (cmp(from, coverStart.from) < 0) {\\n      if (coverStart.to.line - from.line < CHUNK_SIZE) {\\n        array.shift().clear();\\n        coverRange(cm, from, coverStart.to, 0);\\n      } else {\\n        coverRange(cm, from, coverStart.from, 0);\\n      }\\n    }\\n\\n    while (cmp(to, coverEnd.to) < 0) {\\n      array.pop().clear();\\n      coverEnd = array[array.length - 1].find();\\n    }\\n    if (cmp(to, coverEnd.to) > 0) {\\n      if (to.line - coverEnd.from.line < CHUNK_SIZE) {\\n        array.pop().clear();\\n        coverRange(cm, coverEnd.from, to);\\n      } else {\\n        coverRange(cm, coverEnd.to, to);\\n      }\\n    }\\n  }\\n});\\n\",\"// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: http://codemirror.net/LICENSE\\n\\n// Utility function that allows modes to be combined. The mode given\\n// as the base argument takes care of most of the normal mode\\n// functionality, but a second (typically simple) mode is used, which\\n// can override the style of text. Both modes get to parse all of the\\n// text, but when both assign a non-null style to a piece of code, the\\n// overlay wins, unless the combine argument was true and not overridden,\\n// or state.overlay.combineTokens was true, in which case the styles are\\n// combined.\\n\\n(function(mod) {\\n  if (typeof exports == \\\"object\\\" && typeof module == \\\"object\\\") // CommonJS\\n    mod(require(\\\"../../lib/codemirror\\\"));\\n  else if (typeof define == \\\"function\\\" && define.amd) // AMD\\n    define([\\\"../../lib/codemirror\\\"], mod);\\n  else // Plain browser env\\n    mod(CodeMirror);\\n})(function(CodeMirror) {\\n\\\"use strict\\\";\\n\\nCodeMirror.overlayMode = function(base, overlay, combine) {\\n  return {\\n    startState: function() {\\n      return {\\n        base: CodeMirror.startState(base),\\n        overlay: CodeMirror.startState(overlay),\\n        basePos: 0, baseCur: null,\\n        overlayPos: 0, overlayCur: null,\\n        streamSeen: null\\n      };\\n    },\\n    copyState: function(state) {\\n      return {\\n        base: CodeMirror.copyState(base, state.base),\\n        overlay: CodeMirror.copyState(overlay, state.overlay),\\n        basePos: state.basePos, baseCur: null,\\n        overlayPos: state.overlayPos, overlayCur: null\\n      };\\n    },\\n\\n    token: function(stream, state) {\\n      if (stream != state.streamSeen ||\\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\\n        state.streamSeen = stream;\\n        state.basePos = state.overlayPos = stream.start;\\n      }\\n\\n      if (stream.start == state.basePos) {\\n        state.baseCur = base.token(stream, state.base);\\n        state.basePos = stream.pos;\\n      }\\n      if (stream.start == state.overlayPos) {\\n        stream.pos = stream.start;\\n        state.overlayCur = overlay.token(stream, state.overlay);\\n        state.overlayPos = stream.pos;\\n      }\\n      stream.pos = Math.min(state.basePos, state.overlayPos);\\n\\n      // state.overlay.combineTokens always takes precedence over combine,\\n      // unless set to null\\n      if (state.overlayCur == null) return state.baseCur;\\n      else if (state.baseCur != null &&\\n               state.overlay.combineTokens ||\\n               combine && state.overlay.combineTokens == null)\\n        return state.baseCur + \\\" \\\" + state.overlayCur;\\n      else return state.overlayCur;\\n    },\\n\\n    indent: base.indent && function(state, textAfter) {\\n      return base.indent(state.base, textAfter);\\n    },\\n    electricChars: base.electricChars,\\n\\n    innerMode: function(state) { return {state: state.base, mode: base}; },\\n\\n    blankLine: function(state) {\\n      var baseToken, overlayToken;\\n      if (base.blankLine) baseToken = base.blankLine(state.base);\\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\\n\\n      return overlayToken == null ?\\n        baseToken :\\n        (combine && baseToken != null ? baseToken + \\\" \\\" + overlayToken : overlayToken);\\n    }\\n  };\\n};\\n\\n});\\n\",\"// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: http://codemirror.net/LICENSE\\n\\nvar CodeMirror = require(\\\"codemirror\\\");\\n\\nCodeMirror.commands.tabAndIndentMarkdownList = function (cm) {\\n\\tvar ranges = cm.listSelections();\\n\\tvar pos = ranges[0].head;\\n\\tvar eolState = cm.getStateAfter(pos.line);\\n\\tvar inList = eolState.list !== false;\\n\\n\\tif (inList) {\\n\\t\\tcm.execCommand(\\\"indentMore\\\");\\n\\t\\treturn;\\n\\t}\\n\\n\\tif (cm.options.indentWithTabs) {\\n\\t\\tcm.execCommand(\\\"insertTab\\\");\\n\\t}\\n\\telse {\\n\\t\\tvar spaces = Array(cm.options.tabSize + 1).join(\\\" \\\");\\n\\t\\tcm.replaceSelection(spaces);\\n\\t}\\n};\\n\\nCodeMirror.commands.shiftTabAndUnindentMarkdownList = function (cm) {\\n\\tvar ranges = cm.listSelections();\\n\\tvar pos = ranges[0].head;\\n\\tvar eolState = cm.getStateAfter(pos.line);\\n\\tvar inList = eolState.list !== false;\\n\\n\\tif (inList) {\\n\\t\\tcm.execCommand(\\\"indentLess\\\");\\n\\t\\treturn;\\n\\t}\\n\\n\\tif (cm.options.indentWithTabs) {\\n\\t\\tcm.execCommand(\\\"insertTab\\\");\\n\\t}\\n\\telse {\\n\\t\\tvar spaces = Array(cm.options.tabSize + 1).join(\\\" \\\");\\n\\t\\tcm.replaceSelection(spaces);\\n\\t}\\n};\\n\",\"// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: http://codemirror.net/LICENSE\\n\\n(function(mod) {\\n  if (typeof exports == \\\"object\\\" && typeof module == \\\"object\\\") // CommonJS\\n    mod(require(\\\"../../lib/codemirror\\\"));\\n  else if (typeof define == \\\"function\\\" && define.amd) // AMD\\n    define([\\\"../../lib/codemirror\\\"], mod);\\n  else // Plain browser env\\n    mod(CodeMirror);\\n})(function(CodeMirror) {\\n\\\"use strict\\\";\\n\\nvar htmlConfig = {\\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\\n                    'track': true, 'wbr': true, 'menuitem': true},\\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\\n                     'th': true, 'tr': true},\\n  contextGrabbers: {\\n    'dd': {'dd': true, 'dt': true},\\n    'dt': {'dd': true, 'dt': true},\\n    'li': {'li': true},\\n    'option': {'option': true, 'optgroup': true},\\n    'optgroup': {'optgroup': true},\\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\\n    'rp': {'rp': true, 'rt': true},\\n    'rt': {'rp': true, 'rt': true},\\n    'tbody': {'tbody': true, 'tfoot': true},\\n    'td': {'td': true, 'th': true},\\n    'tfoot': {'tbody': true},\\n    'th': {'td': true, 'th': true},\\n    'thead': {'tbody': true, 'tfoot': true},\\n    'tr': {'tr': true}\\n  },\\n  doNotIndent: {\\\"pre\\\": true},\\n  allowUnquoted: true,\\n  allowMissing: true,\\n  caseFold: true\\n}\\n\\nvar xmlConfig = {\\n  autoSelfClosers: {},\\n  implicitlyClosed: {},\\n  contextGrabbers: {},\\n  doNotIndent: {},\\n  allowUnquoted: false,\\n  allowMissing: false,\\n  allowMissingTagName: false,\\n  caseFold: false\\n}\\n\\nCodeMirror.defineMode(\\\"xml\\\", function(editorConf, config_) {\\n  var indentUnit = editorConf.indentUnit\\n  var config = {}\\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\\n  for (var prop in defaults) config[prop] = defaults[prop]\\n  for (var prop in config_) config[prop] = config_[prop]\\n\\n  // Return variables for tokenizers\\n  var type, setStyle;\\n\\n  function inText(stream, state) {\\n    function chain(parser) {\\n      state.tokenize = parser;\\n      return parser(stream, state);\\n    }\\n\\n    var ch = stream.next();\\n    if (ch == \\\"<\\\") {\\n      if (stream.eat(\\\"!\\\")) {\\n        if (stream.eat(\\\"[\\\")) {\\n          if (stream.match(\\\"CDATA[\\\")) return chain(inBlock(\\\"atom\\\", \\\"]]>\\\"));\\n          else return null;\\n        } else if (stream.match(\\\"--\\\")) {\\n          return chain(inBlock(\\\"comment\\\", \\\"-->\\\"));\\n        } else if (stream.match(\\\"DOCTYPE\\\", true, true)) {\\n          stream.eatWhile(/[\\\\w\\\\._\\\\-]/);\\n          return chain(doctype(1));\\n        } else {\\n          return null;\\n        }\\n      } else if (stream.eat(\\\"?\\\")) {\\n        stream.eatWhile(/[\\\\w\\\\._\\\\-]/);\\n        state.tokenize = inBlock(\\\"meta\\\", \\\"?>\\\");\\n        return \\\"meta\\\";\\n      } else {\\n        type = stream.eat(\\\"/\\\") ? \\\"closeTag\\\" : \\\"openTag\\\";\\n        state.tokenize = inTag;\\n        return \\\"tag bracket\\\";\\n      }\\n    } else if (ch == \\\"&\\\") {\\n      var ok;\\n      if (stream.eat(\\\"#\\\")) {\\n        if (stream.eat(\\\"x\\\")) {\\n          ok = stream.eatWhile(/[a-fA-F\\\\d]/) && stream.eat(\\\";\\\");\\n        } else {\\n          ok = stream.eatWhile(/[\\\\d]/) && stream.eat(\\\";\\\");\\n        }\\n      } else {\\n        ok = stream.eatWhile(/[\\\\w\\\\.\\\\-:]/) && stream.eat(\\\";\\\");\\n      }\\n      return ok ? \\\"atom\\\" : \\\"error\\\";\\n    } else {\\n      stream.eatWhile(/[^&<]/);\\n      return null;\\n    }\\n  }\\n  inText.isInText = true;\\n\\n  function inTag(stream, state) {\\n    var ch = stream.next();\\n    if (ch == \\\">\\\" || (ch == \\\"/\\\" && stream.eat(\\\">\\\"))) {\\n      state.tokenize = inText;\\n      type = ch == \\\">\\\" ? \\\"endTag\\\" : \\\"selfcloseTag\\\";\\n      return \\\"tag bracket\\\";\\n    } else if (ch == \\\"=\\\") {\\n      type = \\\"equals\\\";\\n      return null;\\n    } else if (ch == \\\"<\\\") {\\n      state.tokenize = inText;\\n      state.state = baseState;\\n      state.tagName = state.tagStart = null;\\n      var next = state.tokenize(stream, state);\\n      return next ? next + \\\" tag error\\\" : \\\"tag error\\\";\\n    } else if (/[\\\\'\\\\\\\"]/.test(ch)) {\\n      state.tokenize = inAttribute(ch);\\n      state.stringStartCol = stream.column();\\n      return state.tokenize(stream, state);\\n    } else {\\n      stream.match(/^[^\\\\s\\\\u00a0=<>\\\\\\\"\\\\']*[^\\\\s\\\\u00a0=<>\\\\\\\"\\\\'\\\\/]/);\\n      return \\\"word\\\";\\n    }\\n  }\\n\\n  function inAttribute(quote) {\\n    var closure = function(stream, state) {\\n      while (!stream.eol()) {\\n        if (stream.next() == quote) {\\n          state.tokenize = inTag;\\n          break;\\n        }\\n      }\\n      return \\\"string\\\";\\n    };\\n    closure.isInAttribute = true;\\n    return closure;\\n  }\\n\\n  function inBlock(style, terminator) {\\n    return function(stream, state) {\\n      while (!stream.eol()) {\\n        if (stream.match(terminator)) {\\n          state.tokenize = inText;\\n          break;\\n        }\\n        stream.next();\\n      }\\n      return style;\\n    };\\n  }\\n  function doctype(depth) {\\n    return function(stream, state) {\\n      var ch;\\n      while ((ch = stream.next()) != null) {\\n        if (ch == \\\"<\\\") {\\n          state.tokenize = doctype(depth + 1);\\n          return state.tokenize(stream, state);\\n        } else if (ch == \\\">\\\") {\\n          if (depth == 1) {\\n            state.tokenize = inText;\\n            break;\\n          } else {\\n            state.tokenize = doctype(depth - 1);\\n            return state.tokenize(stream, state);\\n          }\\n        }\\n      }\\n      return \\\"meta\\\";\\n    };\\n  }\\n\\n  function Context(state, tagName, startOfLine) {\\n    this.prev = state.context;\\n    this.tagName = tagName;\\n    this.indent = state.indented;\\n    this.startOfLine = startOfLine;\\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\\n      this.noIndent = true;\\n  }\\n  function popContext(state) {\\n    if (state.context) state.context = state.context.prev;\\n  }\\n  function maybePopContext(state, nextTagName) {\\n    var parentTagName;\\n    while (true) {\\n      if (!state.context) {\\n        return;\\n      }\\n      parentTagName = state.context.tagName;\\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\\n        return;\\n      }\\n      popContext(state);\\n    }\\n  }\\n\\n  function baseState(type, stream, state) {\\n    if (type == \\\"openTag\\\") {\\n      state.tagStart = stream.column();\\n      return tagNameState;\\n    } else if (type == \\\"closeTag\\\") {\\n      return closeTagNameState;\\n    } else {\\n      return baseState;\\n    }\\n  }\\n  function tagNameState(type, stream, state) {\\n    if (type == \\\"word\\\") {\\n      state.tagName = stream.current();\\n      setStyle = \\\"tag\\\";\\n      return attrState;\\n    } else if (config.allowMissingTagName && type == \\\"endTag\\\") {\\n      setStyle = \\\"tag bracket\\\";\\n      return attrState(type, stream, state);\\n    } else {\\n      setStyle = \\\"error\\\";\\n      return tagNameState;\\n    }\\n  }\\n  function closeTagNameState(type, stream, state) {\\n    if (type == \\\"word\\\") {\\n      var tagName = stream.current();\\n      if (state.context && state.context.tagName != tagName &&\\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\\n        popContext(state);\\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\\n        setStyle = \\\"tag\\\";\\n        return closeState;\\n      } else {\\n        setStyle = \\\"tag error\\\";\\n        return closeStateErr;\\n      }\\n    } else if (config.allowMissingTagName && type == \\\"endTag\\\") {\\n      setStyle = \\\"tag bracket\\\";\\n      return closeState(type, stream, state);\\n    } else {\\n      setStyle = \\\"error\\\";\\n      return closeStateErr;\\n    }\\n  }\\n\\n  function closeState(type, _stream, state) {\\n    if (type != \\\"endTag\\\") {\\n      setStyle = \\\"error\\\";\\n      return closeState;\\n    }\\n    popContext(state);\\n    return baseState;\\n  }\\n  function closeStateErr(type, stream, state) {\\n    setStyle = \\\"error\\\";\\n    return closeState(type, stream, state);\\n  }\\n\\n  function attrState(type, _stream, state) {\\n    if (type == \\\"word\\\") {\\n      setStyle = \\\"attribute\\\";\\n      return attrEqState;\\n    } else if (type == \\\"endTag\\\" || type == \\\"selfcloseTag\\\") {\\n      var tagName = state.tagName, tagStart = state.tagStart;\\n      state.tagName = state.tagStart = null;\\n      if (type == \\\"selfcloseTag\\\" ||\\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\\n        maybePopContext(state, tagName);\\n      } else {\\n        maybePopContext(state, tagName);\\n        state.context = new Context(state, tagName, tagStart == state.indented);\\n      }\\n      return baseState;\\n    }\\n    setStyle = \\\"error\\\";\\n    return attrState;\\n  }\\n  function attrEqState(type, stream, state) {\\n    if (type == \\\"equals\\\") return attrValueState;\\n    if (!config.allowMissing) setStyle = \\\"error\\\";\\n    return attrState(type, stream, state);\\n  }\\n  function attrValueState(type, stream, state) {\\n    if (type == \\\"string\\\") return attrContinuedState;\\n    if (type == \\\"word\\\" && config.allowUnquoted) {setStyle = \\\"string\\\"; return attrState;}\\n    setStyle = \\\"error\\\";\\n    return attrState(type, stream, state);\\n  }\\n  function attrContinuedState(type, stream, state) {\\n    if (type == \\\"string\\\") return attrContinuedState;\\n    return attrState(type, stream, state);\\n  }\\n\\n  return {\\n    startState: function(baseIndent) {\\n      var state = {tokenize: inText,\\n                   state: baseState,\\n                   indented: baseIndent || 0,\\n                   tagName: null, tagStart: null,\\n                   context: null}\\n      if (baseIndent != null) state.baseIndent = baseIndent\\n      return state\\n    },\\n\\n    token: function(stream, state) {\\n      if (!state.tagName && stream.sol())\\n        state.indented = stream.indentation();\\n\\n      if (stream.eatSpace()) return null;\\n      type = null;\\n      var style = state.tokenize(stream, state);\\n      if ((style || type) && style != \\\"comment\\\") {\\n        setStyle = null;\\n        state.state = state.state(type || style, stream, state);\\n        if (setStyle)\\n          style = setStyle == \\\"error\\\" ? style + \\\" error\\\" : setStyle;\\n      }\\n      return style;\\n    },\\n\\n    indent: function(state, textAfter, fullLine) {\\n      var context = state.context;\\n      // Indent multi-line strings (e.g. css).\\n      if (state.tokenize.isInAttribute) {\\n        if (state.tagStart == state.indented)\\n          return state.stringStartCol + 1;\\n        else\\n          return state.indented + indentUnit;\\n      }\\n      if (context && context.noIndent) return CodeMirror.Pass;\\n      if (state.tokenize != inTag && state.tokenize != inText)\\n        return fullLine ? fullLine.match(/^(\\\\s*)/)[0].length : 0;\\n      // Indent the starts of attribute names.\\n      if (state.tagName) {\\n        if (config.multilineTagIndentPastTag !== false)\\n          return state.tagStart + state.tagName.length + 2;\\n        else\\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\\n      }\\n      if (config.alignCDATA && /<!\\\\[CDATA\\\\[/.test(textAfter)) return 0;\\n      var tagAfter = textAfter && /^<(\\\\/)?([\\\\w_:\\\\.-]*)/.exec(textAfter);\\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\\n        while (context) {\\n          if (context.tagName == tagAfter[2]) {\\n            context = context.prev;\\n            break;\\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\\n            context = context.prev;\\n          } else {\\n            break;\\n          }\\n        }\\n      } else if (tagAfter) { // Opening tag spotted\\n        while (context) {\\n          var grabbers = config.contextGrabbers[context.tagName];\\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\\n            context = context.prev;\\n          else\\n            break;\\n        }\\n      }\\n      while (context && context.prev && !context.startOfLine)\\n        context = context.prev;\\n      if (context) return context.indent + indentUnit;\\n      else return state.baseIndent || 0;\\n    },\\n\\n    electricInput: /<\\\\/[\\\\s\\\\w:]+>$/,\\n    blockCommentStart: \\\"<!--\\\",\\n    blockCommentEnd: \\\"-->\\\",\\n\\n    configuration: config.htmlMode ? \\\"html\\\" : \\\"xml\\\",\\n    helperType: config.htmlMode ? \\\"html\\\" : \\\"xml\\\",\\n\\n    skipAttribute: function(state) {\\n      if (state.state == attrValueState)\\n        state.state = attrState\\n    }\\n  };\\n});\\n\\nCodeMirror.defineMIME(\\\"text/xml\\\", \\\"xml\\\");\\nCodeMirror.defineMIME(\\\"application/xml\\\", \\\"xml\\\");\\nif (!CodeMirror.mimeModes.hasOwnProperty(\\\"text/html\\\"))\\n  CodeMirror.defineMIME(\\\"text/html\\\", {name: \\\"xml\\\", htmlMode: true});\\n\\n});\\n\",\"// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: http://codemirror.net/LICENSE\\n\\n(function(mod) {\\n  if (typeof exports == \\\"object\\\" && typeof module == \\\"object\\\") // CommonJS\\n    mod(require(\\\"../../lib/codemirror\\\"));\\n  else if (typeof define == \\\"function\\\" && define.amd) // AMD\\n    define([\\\"../../lib/codemirror\\\"], mod);\\n  else // Plain browser env\\n    mod(CodeMirror);\\n})(function(CodeMirror) {\\n  CodeMirror.defineOption(\\\"placeholder\\\", \\\"\\\", function(cm, val, old) {\\n    var prev = old && old != CodeMirror.Init;\\n    if (val && !prev) {\\n      cm.on(\\\"blur\\\", onBlur);\\n      cm.on(\\\"change\\\", onChange);\\n      cm.on(\\\"swapDoc\\\", onChange);\\n      onChange(cm);\\n    } else if (!val && prev) {\\n      cm.off(\\\"blur\\\", onBlur);\\n      cm.off(\\\"change\\\", onChange);\\n      cm.off(\\\"swapDoc\\\", onChange);\\n      clearPlaceholder(cm);\\n      var wrapper = cm.getWrapperElement();\\n      wrapper.className = wrapper.className.replace(\\\" CodeMirror-empty\\\", \\\"\\\");\\n    }\\n\\n    if (val && !cm.hasFocus()) onBlur(cm);\\n  });\\n\\n  function clearPlaceholder(cm) {\\n    if (cm.state.placeholder) {\\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\\n      cm.state.placeholder = null;\\n    }\\n  }\\n  function setPlaceholder(cm) {\\n    clearPlaceholder(cm);\\n    var elt = cm.state.placeholder = document.createElement(\\\"pre\\\");\\n    elt.style.cssText = \\\"height: 0; overflow: visible\\\";\\n    elt.style.direction = cm.getOption(\\\"direction\\\");\\n    elt.className = \\\"CodeMirror-placeholder\\\";\\n    var placeHolder = cm.getOption(\\\"placeholder\\\")\\n    if (typeof placeHolder == \\\"string\\\") placeHolder = document.createTextNode(placeHolder)\\n    elt.appendChild(placeHolder)\\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\\n  }\\n\\n  function onBlur(cm) {\\n    if (isEmpty(cm)) setPlaceholder(cm);\\n  }\\n  function onChange(cm) {\\n    var wrapper = cm.getWrapperElement(), empty = isEmpty(cm);\\n    wrapper.className = wrapper.className.replace(\\\" CodeMirror-empty\\\", \\\"\\\") + (empty ? \\\" CodeMirror-empty\\\" : \\\"\\\");\\n\\n    if (empty) setPlaceholder(cm);\\n    else clearPlaceholder(cm);\\n  }\\n\\n  function isEmpty(cm) {\\n    return (cm.lineCount() === 1) && (cm.getLine(0) === \\\"\\\");\\n  }\\n});\\n\",\"// Use strict mode (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)\\n\\\"use strict\\\";\\n\\n\\n// Requires\\nvar Typo = require(\\\"typo-js\\\");\\n\\n\\n// Create function\\nfunction CodeMirrorSpellChecker(options) {\\n\\t// Initialize\\n\\toptions = options || {};\\n\\n\\n\\t// Verify\\n\\tif(typeof options.codeMirrorInstance !== \\\"function\\\" || typeof options.codeMirrorInstance.defineMode !== \\\"function\\\") {\\n\\t\\tconsole.log(\\\"CodeMirror Spell Checker: You must provide an instance of CodeMirror via the option `codeMirrorInstance`\\\");\\n\\t\\treturn;\\n\\t}\\n\\n\\n\\t// Because some browsers don't support this functionality yet\\n\\tif(!String.prototype.includes) {\\n\\t\\tString.prototype.includes = function() {\\n\\t\\t\\t\\\"use strict\\\";\\n\\t\\t\\treturn String.prototype.indexOf.apply(this, arguments) !== -1;\\n\\t\\t};\\n\\t}\\n\\n\\n\\t// Define the new mode\\n\\toptions.codeMirrorInstance.defineMode(\\\"spell-checker\\\", function(config) {\\n\\t\\t// Load AFF/DIC data\\n\\t\\tif(!CodeMirrorSpellChecker.aff_loading) {\\n\\t\\t\\tCodeMirrorSpellChecker.aff_loading = true;\\n\\t\\t\\tvar xhr_aff = new XMLHttpRequest();\\n\\t\\t\\txhr_aff.open(\\\"GET\\\", \\\"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.aff\\\", true);\\n\\t\\t\\txhr_aff.onload = function() {\\n\\t\\t\\t\\tif(xhr_aff.readyState === 4 && xhr_aff.status === 200) {\\n\\t\\t\\t\\t\\tCodeMirrorSpellChecker.aff_data = xhr_aff.responseText;\\n\\t\\t\\t\\t\\tCodeMirrorSpellChecker.num_loaded++;\\n\\n\\t\\t\\t\\t\\tif(CodeMirrorSpellChecker.num_loaded == 2) {\\n\\t\\t\\t\\t\\t\\tCodeMirrorSpellChecker.typo = new Typo(\\\"en_US\\\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\\n\\t\\t\\t\\t\\t\\t\\tplatform: \\\"any\\\"\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t\\txhr_aff.send(null);\\n\\t\\t}\\n\\n\\t\\tif(!CodeMirrorSpellChecker.dic_loading) {\\n\\t\\t\\tCodeMirrorSpellChecker.dic_loading = true;\\n\\t\\t\\tvar xhr_dic = new XMLHttpRequest();\\n\\t\\t\\txhr_dic.open(\\\"GET\\\", \\\"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.dic\\\", true);\\n\\t\\t\\txhr_dic.onload = function() {\\n\\t\\t\\t\\tif(xhr_dic.readyState === 4 && xhr_dic.status === 200) {\\n\\t\\t\\t\\t\\tCodeMirrorSpellChecker.dic_data = xhr_dic.responseText;\\n\\t\\t\\t\\t\\tCodeMirrorSpellChecker.num_loaded++;\\n\\n\\t\\t\\t\\t\\tif(CodeMirrorSpellChecker.num_loaded == 2) {\\n\\t\\t\\t\\t\\t\\tCodeMirrorSpellChecker.typo = new Typo(\\\"en_US\\\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\\n\\t\\t\\t\\t\\t\\t\\tplatform: \\\"any\\\"\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t\\txhr_dic.send(null);\\n\\t\\t}\\n\\n\\n\\t\\t// Define what separates a word\\n\\t\\tvar rx_word = \\\"!\\\\\\\"#$%&()*+,-./:;<=>?@[\\\\\\\\]^_`{|}~ \\\";\\n\\n\\n\\t\\t// Create the overlay and such\\n\\t\\tvar overlay = {\\n\\t\\t\\ttoken: function(stream) {\\n\\t\\t\\t\\tvar ch = stream.peek();\\n\\t\\t\\t\\tvar word = \\\"\\\";\\n\\n\\t\\t\\t\\tif(rx_word.includes(ch)) {\\n\\t\\t\\t\\t\\tstream.next();\\n\\t\\t\\t\\t\\treturn null;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\twhile((ch = stream.peek()) != null && !rx_word.includes(ch)) {\\n\\t\\t\\t\\t\\tword += ch;\\n\\t\\t\\t\\t\\tstream.next();\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif(CodeMirrorSpellChecker.typo && !CodeMirrorSpellChecker.typo.check(word))\\n\\t\\t\\t\\t\\treturn \\\"spell-error\\\"; // CSS class: cm-spell-error\\n\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\t\\tvar mode = options.codeMirrorInstance.getMode(\\n\\t\\t\\tconfig, config.backdrop || \\\"text/plain\\\"\\n\\t\\t);\\n\\n\\t\\treturn options.codeMirrorInstance.overlayMode(mode, overlay, true);\\n\\t});\\n}\\n\\n\\n// Initialize data globally to reduce memory consumption\\nCodeMirrorSpellChecker.num_loaded = 0;\\nCodeMirrorSpellChecker.aff_loading = false;\\nCodeMirrorSpellChecker.dic_loading = false;\\nCodeMirrorSpellChecker.aff_data = \\\"\\\";\\nCodeMirrorSpellChecker.dic_data = \\\"\\\";\\nCodeMirrorSpellChecker.typo;\\n\\n\\n// Export\\nmodule.exports = CodeMirrorSpellChecker;\",\"/*global require,module*/\\n\\\"use strict\\\";\\nvar CodeMirror = require(\\\"codemirror\\\");\\nrequire(\\\"codemirror/addon/edit/continuelist.js\\\");\\nrequire(\\\"./codemirror/tablist\\\");\\nrequire(\\\"codemirror/addon/display/fullscreen.js\\\");\\nrequire(\\\"codemirror/mode/markdown/markdown.js\\\");\\nrequire(\\\"codemirror/addon/mode/overlay.js\\\");\\nrequire(\\\"codemirror/addon/display/placeholder.js\\\");\\nrequire(\\\"codemirror/addon/selection/mark-selection.js\\\");\\nrequire(\\\"codemirror/mode/gfm/gfm.js\\\");\\nrequire(\\\"codemirror/mode/xml/xml.js\\\");\\nvar CodeMirrorSpellChecker = require(\\\"codemirror-spell-checker\\\");\\nvar marked = require(\\\"marked\\\");\\n\\n\\n// Some variables\\nvar isMac = /Mac/.test(navigator.platform);\\n\\n// Mapping of actions that can be bound to keyboard shortcuts or toolbar buttons\\nvar bindings = {\\n\\t\\\"toggleBold\\\": toggleBold,\\n\\t\\\"toggleItalic\\\": toggleItalic,\\n\\t\\\"drawLink\\\": drawLink,\\n\\t\\\"toggleHeadingSmaller\\\": toggleHeadingSmaller,\\n\\t\\\"toggleHeadingBigger\\\": toggleHeadingBigger,\\n\\t\\\"drawImage\\\": drawImage,\\n\\t\\\"toggleBlockquote\\\": toggleBlockquote,\\n\\t\\\"toggleOrderedList\\\": toggleOrderedList,\\n\\t\\\"toggleUnorderedList\\\": toggleUnorderedList,\\n\\t\\\"toggleCodeBlock\\\": toggleCodeBlock,\\n\\t\\\"togglePreview\\\": togglePreview,\\n\\t\\\"toggleStrikethrough\\\": toggleStrikethrough,\\n\\t\\\"toggleHeading1\\\": toggleHeading1,\\n\\t\\\"toggleHeading2\\\": toggleHeading2,\\n\\t\\\"toggleHeading3\\\": toggleHeading3,\\n\\t\\\"cleanBlock\\\": cleanBlock,\\n\\t\\\"drawTable\\\": drawTable,\\n\\t\\\"drawHorizontalRule\\\": drawHorizontalRule,\\n\\t\\\"undo\\\": undo,\\n\\t\\\"redo\\\": redo,\\n\\t\\\"toggleSideBySide\\\": toggleSideBySide,\\n\\t\\\"toggleFullScreen\\\": toggleFullScreen\\n};\\n\\nvar shortcuts = {\\n\\t\\\"toggleBold\\\": \\\"Cmd-B\\\",\\n\\t\\\"toggleItalic\\\": \\\"Cmd-I\\\",\\n\\t\\\"drawLink\\\": \\\"Cmd-K\\\",\\n\\t\\\"toggleHeadingSmaller\\\": \\\"Cmd-H\\\",\\n\\t\\\"toggleHeadingBigger\\\": \\\"Shift-Cmd-H\\\",\\n\\t\\\"cleanBlock\\\": \\\"Cmd-E\\\",\\n\\t\\\"drawImage\\\": \\\"Cmd-Alt-I\\\",\\n\\t\\\"toggleBlockquote\\\": \\\"Cmd-'\\\",\\n\\t\\\"toggleOrderedList\\\": \\\"Cmd-Alt-L\\\",\\n\\t\\\"toggleUnorderedList\\\": \\\"Cmd-L\\\",\\n\\t\\\"toggleCodeBlock\\\": \\\"Cmd-Alt-C\\\",\\n\\t\\\"togglePreview\\\": \\\"Cmd-P\\\",\\n\\t\\\"toggleSideBySide\\\": \\\"F9\\\",\\n\\t\\\"toggleFullScreen\\\": \\\"F11\\\"\\n};\\n\\nvar getBindingName = function(f) {\\n\\tfor(var key in bindings) {\\n\\t\\tif(bindings[key] === f) {\\n\\t\\t\\treturn key;\\n\\t\\t}\\n\\t}\\n\\treturn null;\\n};\\n\\nvar isMobile = function() {\\n\\tvar check = false;\\n\\t(function(a) {\\n\\t\\tif(/(android|bb\\\\d+|meego).+mobile|avantgo|bada\\\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\\\-(n|u)|c55\\\\/|capi|ccwa|cdm\\\\-|cell|chtm|cldc|cmd\\\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\\\-|_)|g1 u|g560|gene|gf\\\\-5|g\\\\-mo|go(\\\\.w|od)|gr(ad|un)|haie|hcit|hd\\\\-(m|p|t)|hei\\\\-|hi(pt|ta)|hp( i|ip)|hs\\\\-c|ht(c(\\\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\\\-(20|go|ma)|i230|iac( |\\\\-|\\\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\\\/)|klon|kpt |kwc\\\\-|kyo(c|k)|le(no|xi)|lg( g|\\\\/(k|l|u)|50|54|\\\\-[a-w])|libw|lynx|m1\\\\-w|m3ga|m50\\\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\\\-2|po(ck|rt|se)|prox|psio|pt\\\\-g|qa\\\\-a|qc(07|12|21|32|60|\\\\-[2-7]|i\\\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\\\-|oo|p\\\\-)|sdk\\\\/|se(c(\\\\-|0|1)|47|mc|nd|ri)|sgh\\\\-|shar|sie(\\\\-|m)|sk\\\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\\\-|v\\\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\\\-|tdg\\\\-|tel(i|m)|tim\\\\-|t\\\\-mo|to(pl|sh)|ts(70|m\\\\-|m3|m5)|tx\\\\-9|up(\\\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\\\-|your|zeto|zte\\\\-/i.test(a.substr(0, 4))) check = true;\\n\\t})(navigator.userAgent || navigator.vendor || window.opera);\\n\\treturn check;\\n};\\n\\n\\n/**\\n * Fix shortcut. Mac use Command, others use Ctrl.\\n */\\nfunction fixShortcut(name) {\\n\\tif(isMac) {\\n\\t\\tname = name.replace(\\\"Ctrl\\\", \\\"Cmd\\\");\\n\\t} else {\\n\\t\\tname = name.replace(\\\"Cmd\\\", \\\"Ctrl\\\");\\n\\t}\\n\\treturn name;\\n}\\n\\n\\n/**\\n * Create icon element for toolbar.\\n */\\nfunction createIcon(options, enableTooltips, shortcuts) {\\n\\toptions = options || {};\\n\\tvar el = document.createElement(\\\"a\\\");\\n\\tenableTooltips = (enableTooltips == undefined) ? true : enableTooltips;\\n\\n\\tif(options.title && enableTooltips) {\\n\\t\\tel.title = createTootlip(options.title, options.action, shortcuts);\\n\\n\\t\\tif(isMac) {\\n\\t\\t\\tel.title = el.title.replace(\\\"Ctrl\\\", \\\"⌘\\\");\\n\\t\\t\\tel.title = el.title.replace(\\\"Alt\\\", \\\"⌥\\\");\\n\\t\\t}\\n\\t}\\n\\n\\tel.tabIndex = -1;\\n\\tel.className = options.className;\\n\\treturn el;\\n}\\n\\nfunction createSep() {\\n\\tvar el = document.createElement(\\\"i\\\");\\n\\tel.className = \\\"separator\\\";\\n\\tel.innerHTML = \\\"|\\\";\\n\\treturn el;\\n}\\n\\nfunction createTootlip(title, action, shortcuts) {\\n\\tvar actionName;\\n\\tvar tooltip = title;\\n\\n\\tif(action) {\\n\\t\\tactionName = getBindingName(action);\\n\\t\\tif(shortcuts[actionName]) {\\n\\t\\t\\ttooltip += \\\" (\\\" + fixShortcut(shortcuts[actionName]) + \\\")\\\";\\n\\t\\t}\\n\\t}\\n\\n\\treturn tooltip;\\n}\\n\\n/**\\n * The state of CodeMirror at the given position.\\n */\\nfunction getState(cm, pos) {\\n\\tpos = pos || cm.getCursor(\\\"start\\\");\\n\\tvar stat = cm.getTokenAt(pos);\\n\\tif(!stat.type) return {};\\n\\n\\tvar types = stat.type.split(\\\" \\\");\\n\\n\\tvar ret = {},\\n\\t\\tdata, text;\\n\\tfor(var i = 0; i < types.length; i++) {\\n\\t\\tdata = types[i];\\n\\t\\tif(data === \\\"strong\\\") {\\n\\t\\t\\tret.bold = true;\\n\\t\\t} else if(data === \\\"variable-2\\\") {\\n\\t\\t\\ttext = cm.getLine(pos.line);\\n\\t\\t\\tif(/^\\\\s*\\\\d+\\\\.\\\\s/.test(text)) {\\n\\t\\t\\t\\tret[\\\"ordered-list\\\"] = true;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tret[\\\"unordered-list\\\"] = true;\\n\\t\\t\\t}\\n\\t\\t} else if(data === \\\"atom\\\") {\\n\\t\\t\\tret.quote = true;\\n\\t\\t} else if(data === \\\"em\\\") {\\n\\t\\t\\tret.italic = true;\\n\\t\\t} else if(data === \\\"quote\\\") {\\n\\t\\t\\tret.quote = true;\\n\\t\\t} else if(data === \\\"strikethrough\\\") {\\n\\t\\t\\tret.strikethrough = true;\\n\\t\\t} else if(data === \\\"comment\\\") {\\n\\t\\t\\tret.code = true;\\n\\t\\t} else if(data === \\\"link\\\") {\\n\\t\\t\\tret.link = true;\\n\\t\\t} else if(data === \\\"tag\\\") {\\n\\t\\t\\tret.image = true;\\n\\t\\t} else if(data.match(/^header(\\\\-[1-6])?$/)) {\\n\\t\\t\\tret[data.replace(\\\"header\\\", \\\"heading\\\")] = true;\\n\\t\\t}\\n\\t}\\n\\treturn ret;\\n}\\n\\n\\n// Saved overflow setting\\nvar saved_overflow = \\\"\\\";\\n\\n/**\\n * Toggle full screen of the editor.\\n */\\nfunction toggleFullScreen(editor) {\\n\\t// Set fullscreen\\n\\tvar cm = editor.codemirror;\\n\\tcm.setOption(\\\"fullScreen\\\", !cm.getOption(\\\"fullScreen\\\"));\\n\\n\\n\\t// Prevent scrolling on body during fullscreen active\\n\\tif(cm.getOption(\\\"fullScreen\\\")) {\\n\\t\\tsaved_overflow = document.body.style.overflow;\\n\\t\\tdocument.body.style.overflow = \\\"hidden\\\";\\n\\t} else {\\n\\t\\tdocument.body.style.overflow = saved_overflow;\\n\\t}\\n\\n\\n\\t// Update toolbar class\\n\\tvar wrap = cm.getWrapperElement();\\n\\n\\tif(!/fullscreen/.test(wrap.previousSibling.className)) {\\n\\t\\twrap.previousSibling.className += \\\" fullscreen\\\";\\n\\t} else {\\n\\t\\twrap.previousSibling.className = wrap.previousSibling.className.replace(/\\\\s*fullscreen\\\\b/, \\\"\\\");\\n\\t}\\n\\n\\n\\t// Update toolbar button\\n\\tvar toolbarButton = editor.toolbarElements.fullscreen;\\n\\n\\tif(!/active/.test(toolbarButton.className)) {\\n\\t\\ttoolbarButton.className += \\\" active\\\";\\n\\t} else {\\n\\t\\ttoolbarButton.className = toolbarButton.className.replace(/\\\\s*active\\\\s*/g, \\\"\\\");\\n\\t}\\n\\n\\n\\t// Hide side by side if needed\\n\\tvar sidebyside = cm.getWrapperElement().nextSibling;\\n\\tif(/editor-preview-active-side/.test(sidebyside.className))\\n\\t\\ttoggleSideBySide(editor);\\n}\\n\\n\\n/**\\n * Action for toggling bold.\\n */\\nfunction toggleBold(editor) {\\n\\t_toggleBlock(editor, \\\"bold\\\", editor.options.blockStyles.bold);\\n}\\n\\n\\n/**\\n * Action for toggling italic.\\n */\\nfunction toggleItalic(editor) {\\n\\t_toggleBlock(editor, \\\"italic\\\", editor.options.blockStyles.italic);\\n}\\n\\n\\n/**\\n * Action for toggling strikethrough.\\n */\\nfunction toggleStrikethrough(editor) {\\n\\t_toggleBlock(editor, \\\"strikethrough\\\", \\\"~~\\\");\\n}\\n\\n/**\\n * Action for toggling code block.\\n */\\nfunction toggleCodeBlock(editor) {\\n\\tvar fenceCharsToInsert = editor.options.blockStyles.code;\\n\\n\\tfunction fencing_line(line) {\\n\\t\\t/* return true, if this is a ``` or ~~~ line */\\n\\t\\tif(typeof line !== \\\"object\\\") {\\n\\t\\t\\tthrow \\\"fencing_line() takes a 'line' object (not a line number, or line text).  Got: \\\" + typeof line + \\\": \\\" + line;\\n\\t\\t}\\n\\t\\treturn line.styles && line.styles[2] && line.styles[2].indexOf(\\\"formatting-code-block\\\") !== -1;\\n\\t}\\n\\n\\tfunction token_state(token) {\\n\\t\\t// base goes an extra level deep when mode backdrops are used, e.g. spellchecker on\\n\\t\\treturn token.state.base.base || token.state.base;\\n\\t}\\n\\n\\tfunction code_type(cm, line_num, line, firstTok, lastTok) {\\n\\t\\t/*\\n\\t\\t * Return \\\"single\\\", \\\"indented\\\", \\\"fenced\\\" or false\\n\\t\\t *\\n\\t\\t * cm and line_num are required.  Others are optional for efficiency\\n\\t\\t *   To check in the middle of a line, pass in firstTok yourself.\\n\\t\\t */\\n\\t\\tline = line || cm.getLineHandle(line_num);\\n\\t\\tfirstTok = firstTok || cm.getTokenAt({\\n\\t\\t\\tline: line_num,\\n\\t\\t\\tch: 1\\n\\t\\t});\\n\\t\\tlastTok = lastTok || (!!line.text && cm.getTokenAt({\\n\\t\\t\\tline: line_num,\\n\\t\\t\\tch: line.text.length - 1\\n\\t\\t}));\\n\\t\\tvar types = firstTok.type ? firstTok.type.split(\\\" \\\") : [];\\n\\t\\tif(lastTok && token_state(lastTok).indentedCode) {\\n\\t\\t\\t// have to check last char, since first chars of first line aren\\\"t marked as indented\\n\\t\\t\\treturn \\\"indented\\\";\\n\\t\\t} else if(types.indexOf(\\\"comment\\\") === -1) {\\n\\t\\t\\t// has to be after \\\"indented\\\" check, since first chars of first indented line aren\\\"t marked as such\\n\\t\\t\\treturn false;\\n\\t\\t} else if(token_state(firstTok).fencedChars || token_state(lastTok).fencedChars || fencing_line(line)) {\\n\\t\\t\\treturn \\\"fenced\\\";\\n\\t\\t} else {\\n\\t\\t\\treturn \\\"single\\\";\\n\\t\\t}\\n\\t}\\n\\n\\tfunction insertFencingAtSelection(cm, cur_start, cur_end, fenceCharsToInsert) {\\n\\t\\tvar start_line_sel = cur_start.line + 1,\\n\\t\\t\\tend_line_sel = cur_end.line + 1,\\n\\t\\t\\tsel_multi = cur_start.line !== cur_end.line,\\n\\t\\t\\trepl_start = fenceCharsToInsert + \\\"\\\\n\\\",\\n\\t\\t\\trepl_end = \\\"\\\\n\\\" + fenceCharsToInsert;\\n\\t\\tif(sel_multi) {\\n\\t\\t\\tend_line_sel++;\\n\\t\\t}\\n\\t\\t// handle last char including \\\\n or not\\n\\t\\tif(sel_multi && cur_end.ch === 0) {\\n\\t\\t\\trepl_end = fenceCharsToInsert + \\\"\\\\n\\\";\\n\\t\\t\\tend_line_sel--;\\n\\t\\t}\\n\\t\\t_replaceSelection(cm, false, [repl_start, repl_end]);\\n\\t\\tcm.setSelection({\\n\\t\\t\\tline: start_line_sel,\\n\\t\\t\\tch: 0\\n\\t\\t}, {\\n\\t\\t\\tline: end_line_sel,\\n\\t\\t\\tch: 0\\n\\t\\t});\\n\\t}\\n\\n\\tvar cm = editor.codemirror,\\n\\t\\tcur_start = cm.getCursor(\\\"start\\\"),\\n\\t\\tcur_end = cm.getCursor(\\\"end\\\"),\\n\\t\\ttok = cm.getTokenAt({\\n\\t\\t\\tline: cur_start.line,\\n\\t\\t\\tch: cur_start.ch || 1\\n\\t\\t}), // avoid ch 0 which is a cursor pos but not token\\n\\t\\tline = cm.getLineHandle(cur_start.line),\\n\\t\\tis_code = code_type(cm, cur_start.line, line, tok);\\n\\tvar block_start, block_end, lineCount;\\n\\n\\tif(is_code === \\\"single\\\") {\\n\\t\\t// similar to some SimpleMDE _toggleBlock logic\\n\\t\\tvar start = line.text.slice(0, cur_start.ch).replace(\\\"`\\\", \\\"\\\"),\\n\\t\\t\\tend = line.text.slice(cur_start.ch).replace(\\\"`\\\", \\\"\\\");\\n\\t\\tcm.replaceRange(start + end, {\\n\\t\\t\\tline: cur_start.line,\\n\\t\\t\\tch: 0\\n\\t\\t}, {\\n\\t\\t\\tline: cur_start.line,\\n\\t\\t\\tch: 99999999999999\\n\\t\\t});\\n\\t\\tcur_start.ch--;\\n\\t\\tif(cur_start !== cur_end) {\\n\\t\\t\\tcur_end.ch--;\\n\\t\\t}\\n\\t\\tcm.setSelection(cur_start, cur_end);\\n\\t\\tcm.focus();\\n\\t} else if(is_code === \\\"fenced\\\") {\\n\\t\\tif(cur_start.line !== cur_end.line || cur_start.ch !== cur_end.ch) {\\n\\t\\t\\t// use selection\\n\\n\\t\\t\\t// find the fenced line so we know what type it is (tilde, backticks, number of them)\\n\\t\\t\\tfor(block_start = cur_start.line; block_start >= 0; block_start--) {\\n\\t\\t\\t\\tline = cm.getLineHandle(block_start);\\n\\t\\t\\t\\tif(fencing_line(line)) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tvar fencedTok = cm.getTokenAt({\\n\\t\\t\\t\\tline: block_start,\\n\\t\\t\\t\\tch: 1\\n\\t\\t\\t});\\n\\t\\t\\tvar fence_chars = token_state(fencedTok).fencedChars;\\n\\t\\t\\tvar start_text, start_line;\\n\\t\\t\\tvar end_text, end_line;\\n\\t\\t\\t// check for selection going up against fenced lines, in which case we don't want to add more fencing\\n\\t\\t\\tif(fencing_line(cm.getLineHandle(cur_start.line))) {\\n\\t\\t\\t\\tstart_text = \\\"\\\";\\n\\t\\t\\t\\tstart_line = cur_start.line;\\n\\t\\t\\t} else if(fencing_line(cm.getLineHandle(cur_start.line - 1))) {\\n\\t\\t\\t\\tstart_text = \\\"\\\";\\n\\t\\t\\t\\tstart_line = cur_start.line - 1;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tstart_text = fence_chars + \\\"\\\\n\\\";\\n\\t\\t\\t\\tstart_line = cur_start.line;\\n\\t\\t\\t}\\n\\t\\t\\tif(fencing_line(cm.getLineHandle(cur_end.line))) {\\n\\t\\t\\t\\tend_text = \\\"\\\";\\n\\t\\t\\t\\tend_line = cur_end.line;\\n\\t\\t\\t\\tif(cur_end.ch === 0) {\\n\\t\\t\\t\\t\\tend_line += 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if(cur_end.ch !== 0 && fencing_line(cm.getLineHandle(cur_end.line + 1))) {\\n\\t\\t\\t\\tend_text = \\\"\\\";\\n\\t\\t\\t\\tend_line = cur_end.line + 1;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tend_text = fence_chars + \\\"\\\\n\\\";\\n\\t\\t\\t\\tend_line = cur_end.line + 1;\\n\\t\\t\\t}\\n\\t\\t\\tif(cur_end.ch === 0) {\\n\\t\\t\\t\\t// full last line selected, putting cursor at beginning of next\\n\\t\\t\\t\\tend_line -= 1;\\n\\t\\t\\t}\\n\\t\\t\\tcm.operation(function() {\\n\\t\\t\\t\\t// end line first, so that line numbers don't change\\n\\t\\t\\t\\tcm.replaceRange(end_text, {\\n\\t\\t\\t\\t\\tline: end_line,\\n\\t\\t\\t\\t\\tch: 0\\n\\t\\t\\t\\t}, {\\n\\t\\t\\t\\t\\tline: end_line + (end_text ? 0 : 1),\\n\\t\\t\\t\\t\\tch: 0\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tcm.replaceRange(start_text, {\\n\\t\\t\\t\\t\\tline: start_line,\\n\\t\\t\\t\\t\\tch: 0\\n\\t\\t\\t\\t}, {\\n\\t\\t\\t\\t\\tline: start_line + (start_text ? 0 : 1),\\n\\t\\t\\t\\t\\tch: 0\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t\\tcm.setSelection({\\n\\t\\t\\t\\tline: start_line + (start_text ? 1 : 0),\\n\\t\\t\\t\\tch: 0\\n\\t\\t\\t}, {\\n\\t\\t\\t\\tline: end_line + (start_text ? 1 : -1),\\n\\t\\t\\t\\tch: 0\\n\\t\\t\\t});\\n\\t\\t\\tcm.focus();\\n\\t\\t} else {\\n\\t\\t\\t// no selection, search for ends of this fenced block\\n\\t\\t\\tvar search_from = cur_start.line;\\n\\t\\t\\tif(fencing_line(cm.getLineHandle(cur_start.line))) { // gets a little tricky if cursor is right on a fenced line\\n\\t\\t\\t\\tif(code_type(cm, cur_start.line + 1) === \\\"fenced\\\") {\\n\\t\\t\\t\\t\\tblock_start = cur_start.line;\\n\\t\\t\\t\\t\\tsearch_from = cur_start.line + 1; // for searching for \\\"end\\\"\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tblock_end = cur_start.line;\\n\\t\\t\\t\\t\\tsearch_from = cur_start.line - 1; // for searching for \\\"start\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tif(block_start === undefined) {\\n\\t\\t\\t\\tfor(block_start = search_from; block_start >= 0; block_start--) {\\n\\t\\t\\t\\t\\tline = cm.getLineHandle(block_start);\\n\\t\\t\\t\\t\\tif(fencing_line(line)) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tif(block_end === undefined) {\\n\\t\\t\\t\\tlineCount = cm.lineCount();\\n\\t\\t\\t\\tfor(block_end = search_from; block_end < lineCount; block_end++) {\\n\\t\\t\\t\\t\\tline = cm.getLineHandle(block_end);\\n\\t\\t\\t\\t\\tif(fencing_line(line)) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tcm.operation(function() {\\n\\t\\t\\t\\tcm.replaceRange(\\\"\\\", {\\n\\t\\t\\t\\t\\tline: block_start,\\n\\t\\t\\t\\t\\tch: 0\\n\\t\\t\\t\\t}, {\\n\\t\\t\\t\\t\\tline: block_start + 1,\\n\\t\\t\\t\\t\\tch: 0\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tcm.replaceRange(\\\"\\\", {\\n\\t\\t\\t\\t\\tline: block_end - 1,\\n\\t\\t\\t\\t\\tch: 0\\n\\t\\t\\t\\t}, {\\n\\t\\t\\t\\t\\tline: block_end,\\n\\t\\t\\t\\t\\tch: 0\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t\\t\\tcm.focus();\\n\\t\\t}\\n\\t} else if(is_code === \\\"indented\\\") {\\n\\t\\tif(cur_start.line !== cur_end.line || cur_start.ch !== cur_end.ch) {\\n\\t\\t\\t// use selection\\n\\t\\t\\tblock_start = cur_start.line;\\n\\t\\t\\tblock_end = cur_end.line;\\n\\t\\t\\tif(cur_end.ch === 0) {\\n\\t\\t\\t\\tblock_end--;\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\t// no selection, search for ends of this indented block\\n\\t\\t\\tfor(block_start = cur_start.line; block_start >= 0; block_start--) {\\n\\t\\t\\t\\tline = cm.getLineHandle(block_start);\\n\\t\\t\\t\\tif(line.text.match(/^\\\\s*$/)) {\\n\\t\\t\\t\\t\\t// empty or all whitespace - keep going\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif(code_type(cm, block_start, line) !== \\\"indented\\\") {\\n\\t\\t\\t\\t\\t\\tblock_start += 1;\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tlineCount = cm.lineCount();\\n\\t\\t\\tfor(block_end = cur_start.line; block_end < lineCount; block_end++) {\\n\\t\\t\\t\\tline = cm.getLineHandle(block_end);\\n\\t\\t\\t\\tif(line.text.match(/^\\\\s*$/)) {\\n\\t\\t\\t\\t\\t// empty or all whitespace - keep going\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif(code_type(cm, block_end, line) !== \\\"indented\\\") {\\n\\t\\t\\t\\t\\t\\tblock_end -= 1;\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t// if we are going to un-indent based on a selected set of lines, and the next line is indented too, we need to\\n\\t\\t// insert a blank line so that the next line(s) continue to be indented code\\n\\t\\tvar next_line = cm.getLineHandle(block_end + 1),\\n\\t\\t\\tnext_line_last_tok = next_line && cm.getTokenAt({\\n\\t\\t\\t\\tline: block_end + 1,\\n\\t\\t\\t\\tch: next_line.text.length - 1\\n\\t\\t\\t}),\\n\\t\\t\\tnext_line_indented = next_line_last_tok && token_state(next_line_last_tok).indentedCode;\\n\\t\\tif(next_line_indented) {\\n\\t\\t\\tcm.replaceRange(\\\"\\\\n\\\", {\\n\\t\\t\\t\\tline: block_end + 1,\\n\\t\\t\\t\\tch: 0\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tfor(var i = block_start; i <= block_end; i++) {\\n\\t\\t\\tcm.indentLine(i, \\\"subtract\\\"); // TODO: this doesn't get tracked in the history, so can't be undone :(\\n\\t\\t}\\n\\t\\tcm.focus();\\n\\t} else {\\n\\t\\t// insert code formatting\\n\\t\\tvar no_sel_and_starting_of_line = (cur_start.line === cur_end.line && cur_start.ch === cur_end.ch && cur_start.ch === 0);\\n\\t\\tvar sel_multi = cur_start.line !== cur_end.line;\\n\\t\\tif(no_sel_and_starting_of_line || sel_multi) {\\n\\t\\t\\tinsertFencingAtSelection(cm, cur_start, cur_end, fenceCharsToInsert);\\n\\t\\t} else {\\n\\t\\t\\t_replaceSelection(cm, false, [\\\"`\\\", \\\"`\\\"]);\\n\\t\\t}\\n\\t}\\n}\\n\\n/**\\n * Action for toggling blockquote.\\n */\\nfunction toggleBlockquote(editor) {\\n\\tvar cm = editor.codemirror;\\n\\t_toggleLine(cm, \\\"quote\\\");\\n}\\n\\n/**\\n * Action for toggling heading size: normal -> h1 -> h2 -> h3 -> h4 -> h5 -> h6 -> normal\\n */\\nfunction toggleHeadingSmaller(editor) {\\n\\tvar cm = editor.codemirror;\\n\\t_toggleHeading(cm, \\\"smaller\\\");\\n}\\n\\n/**\\n * Action for toggling heading size: normal -> h6 -> h5 -> h4 -> h3 -> h2 -> h1 -> normal\\n */\\nfunction toggleHeadingBigger(editor) {\\n\\tvar cm = editor.codemirror;\\n\\t_toggleHeading(cm, \\\"bigger\\\");\\n}\\n\\n/**\\n * Action for toggling heading size 1\\n */\\nfunction toggleHeading1(editor) {\\n\\tvar cm = editor.codemirror;\\n\\t_toggleHeading(cm, undefined, 1);\\n}\\n\\n/**\\n * Action for toggling heading size 2\\n */\\nfunction toggleHeading2(editor) {\\n\\tvar cm = editor.codemirror;\\n\\t_toggleHeading(cm, undefined, 2);\\n}\\n\\n/**\\n * Action for toggling heading size 3\\n */\\nfunction toggleHeading3(editor) {\\n\\tvar cm = editor.codemirror;\\n\\t_toggleHeading(cm, undefined, 3);\\n}\\n\\n\\n/**\\n * Action for toggling ul.\\n */\\nfunction toggleUnorderedList(editor) {\\n\\tvar cm = editor.codemirror;\\n\\t_toggleLine(cm, \\\"unordered-list\\\");\\n}\\n\\n\\n/**\\n * Action for toggling ol.\\n */\\nfunction toggleOrderedList(editor) {\\n\\tvar cm = editor.codemirror;\\n\\t_toggleLine(cm, \\\"ordered-list\\\");\\n}\\n\\n/**\\n * Action for clean block (remove headline, list, blockquote code, markers)\\n */\\nfunction cleanBlock(editor) {\\n\\tvar cm = editor.codemirror;\\n\\t_cleanBlock(cm);\\n}\\n\\n/**\\n * Action for drawing a link.\\n */\\nfunction drawLink(editor) {\\n\\tvar cm = editor.codemirror;\\n\\tvar stat = getState(cm);\\n\\tvar options = editor.options;\\n\\tvar url = \\\"http://\\\";\\n\\tif(options.promptURLs) {\\n\\t\\turl = prompt(options.promptTexts.link);\\n\\t\\tif(!url) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t}\\n\\t_replaceSelection(cm, stat.link, options.insertTexts.link, url);\\n}\\n\\n/**\\n * Action for drawing an img.\\n */\\nfunction drawImage(editor) {\\n\\tvar cm = editor.codemirror;\\n\\tvar stat = getState(cm);\\n\\tvar options = editor.options;\\n\\tvar url = \\\"http://\\\";\\n\\tif(options.promptURLs) {\\n\\t\\turl = prompt(options.promptTexts.image);\\n\\t\\tif(!url) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t}\\n\\t_replaceSelection(cm, stat.image, options.insertTexts.image, url);\\n}\\n\\n/**\\n * Action for drawing a table.\\n */\\nfunction drawTable(editor) {\\n\\tvar cm = editor.codemirror;\\n\\tvar stat = getState(cm);\\n\\tvar options = editor.options;\\n\\t_replaceSelection(cm, stat.table, options.insertTexts.table);\\n}\\n\\n/**\\n * Action for drawing a horizontal rule.\\n */\\nfunction drawHorizontalRule(editor) {\\n\\tvar cm = editor.codemirror;\\n\\tvar stat = getState(cm);\\n\\tvar options = editor.options;\\n\\t_replaceSelection(cm, stat.image, options.insertTexts.horizontalRule);\\n}\\n\\n\\n/**\\n * Undo action.\\n */\\nfunction undo(editor) {\\n\\tvar cm = editor.codemirror;\\n\\tcm.undo();\\n\\tcm.focus();\\n}\\n\\n\\n/**\\n * Redo action.\\n */\\nfunction redo(editor) {\\n\\tvar cm = editor.codemirror;\\n\\tcm.redo();\\n\\tcm.focus();\\n}\\n\\n\\n/**\\n * Toggle side by side preview\\n */\\nfunction toggleSideBySide(editor) {\\n\\tvar cm = editor.codemirror;\\n\\tvar wrapper = cm.getWrapperElement();\\n\\tvar preview = wrapper.nextSibling;\\n\\tvar toolbarButton = editor.toolbarElements[\\\"side-by-side\\\"];\\n\\tvar useSideBySideListener = false;\\n\\tif(/editor-preview-active-side/.test(preview.className)) {\\n\\t\\tpreview.className = preview.className.replace(\\n\\t\\t\\t/\\\\s*editor-preview-active-side\\\\s*/g, \\\"\\\"\\n\\t\\t);\\n\\t\\ttoolbarButton.className = toolbarButton.className.replace(/\\\\s*active\\\\s*/g, \\\"\\\");\\n\\t\\twrapper.className = wrapper.className.replace(/\\\\s*CodeMirror-sided\\\\s*/g, \\\" \\\");\\n\\t} else {\\n\\t\\t// When the preview button is clicked for the first time,\\n\\t\\t// give some time for the transition from editor.css to fire and the view to slide from right to left,\\n\\t\\t// instead of just appearing.\\n\\t\\tsetTimeout(function() {\\n\\t\\t\\tif(!cm.getOption(\\\"fullScreen\\\"))\\n\\t\\t\\t\\ttoggleFullScreen(editor);\\n\\t\\t\\tpreview.className += \\\" editor-preview-active-side\\\";\\n\\t\\t}, 1);\\n\\t\\ttoolbarButton.className += \\\" active\\\";\\n\\t\\twrapper.className += \\\" CodeMirror-sided\\\";\\n\\t\\tuseSideBySideListener = true;\\n\\t}\\n\\n\\t// Hide normal preview if active\\n\\tvar previewNormal = wrapper.lastChild;\\n\\tif(/editor-preview-active/.test(previewNormal.className)) {\\n\\t\\tpreviewNormal.className = previewNormal.className.replace(\\n\\t\\t\\t/\\\\s*editor-preview-active\\\\s*/g, \\\"\\\"\\n\\t\\t);\\n\\t\\tvar toolbar = editor.toolbarElements.preview;\\n\\t\\tvar toolbar_div = wrapper.previousSibling;\\n\\t\\ttoolbar.className = toolbar.className.replace(/\\\\s*active\\\\s*/g, \\\"\\\");\\n\\t\\ttoolbar_div.className = toolbar_div.className.replace(/\\\\s*disabled-for-preview*/g, \\\"\\\");\\n\\t}\\n\\n\\tvar sideBySideRenderingFunction = function() {\\n\\t\\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\\n\\t};\\n\\n\\tif(!cm.sideBySideRenderingFunction) {\\n\\t\\tcm.sideBySideRenderingFunction = sideBySideRenderingFunction;\\n\\t}\\n\\n\\tif(useSideBySideListener) {\\n\\t\\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\\n\\t\\tcm.on(\\\"update\\\", cm.sideBySideRenderingFunction);\\n\\t} else {\\n\\t\\tcm.off(\\\"update\\\", cm.sideBySideRenderingFunction);\\n\\t}\\n\\n\\t// Refresh to fix selection being off (#309)\\n\\tcm.refresh();\\n}\\n\\n\\n/**\\n * Preview action.\\n */\\nfunction togglePreview(editor) {\\n\\tvar cm = editor.codemirror;\\n\\tvar wrapper = cm.getWrapperElement();\\n\\tvar toolbar_div = wrapper.previousSibling;\\n\\tvar toolbar = editor.options.toolbar ? editor.toolbarElements.preview : false;\\n\\tvar preview = wrapper.lastChild;\\n\\tif(!preview || !/editor-preview/.test(preview.className)) {\\n\\t\\tpreview = document.createElement(\\\"div\\\");\\n\\t\\tpreview.className = \\\"editor-preview\\\";\\n\\t\\twrapper.appendChild(preview);\\n\\t}\\n\\tif(/editor-preview-active/.test(preview.className)) {\\n\\t\\tpreview.className = preview.className.replace(\\n\\t\\t\\t/\\\\s*editor-preview-active\\\\s*/g, \\\"\\\"\\n\\t\\t);\\n\\t\\tif(toolbar) {\\n\\t\\t\\ttoolbar.className = toolbar.className.replace(/\\\\s*active\\\\s*/g, \\\"\\\");\\n\\t\\t\\ttoolbar_div.className = toolbar_div.className.replace(/\\\\s*disabled-for-preview*/g, \\\"\\\");\\n\\t\\t}\\n\\t} else {\\n\\t\\t// When the preview button is clicked for the first time,\\n\\t\\t// give some time for the transition from editor.css to fire and the view to slide from right to left,\\n\\t\\t// instead of just appearing.\\n\\t\\tsetTimeout(function() {\\n\\t\\t\\tpreview.className += \\\" editor-preview-active\\\";\\n\\t\\t}, 1);\\n\\t\\tif(toolbar) {\\n\\t\\t\\ttoolbar.className += \\\" active\\\";\\n\\t\\t\\ttoolbar_div.className += \\\" disabled-for-preview\\\";\\n\\t\\t}\\n\\t}\\n\\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\\n\\n\\t// Turn off side by side if needed\\n\\tvar sidebyside = cm.getWrapperElement().nextSibling;\\n\\tif(/editor-preview-active-side/.test(sidebyside.className))\\n\\t\\ttoggleSideBySide(editor);\\n}\\n\\nfunction _replaceSelection(cm, active, startEnd, url) {\\n\\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\\n\\t\\treturn;\\n\\n\\tvar text;\\n\\tvar start = startEnd[0];\\n\\tvar end = startEnd[1];\\n\\tvar startPoint = cm.getCursor(\\\"start\\\");\\n\\tvar endPoint = cm.getCursor(\\\"end\\\");\\n\\tif(url) {\\n\\t\\tend = end.replace(\\\"#url#\\\", url);\\n\\t}\\n\\tif(active) {\\n\\t\\ttext = cm.getLine(startPoint.line);\\n\\t\\tstart = text.slice(0, startPoint.ch);\\n\\t\\tend = text.slice(startPoint.ch);\\n\\t\\tcm.replaceRange(start + end, {\\n\\t\\t\\tline: startPoint.line,\\n\\t\\t\\tch: 0\\n\\t\\t});\\n\\t} else {\\n\\t\\ttext = cm.getSelection();\\n\\t\\tcm.replaceSelection(start + text + end);\\n\\n\\t\\tstartPoint.ch += start.length;\\n\\t\\tif(startPoint !== endPoint) {\\n\\t\\t\\tendPoint.ch += start.length;\\n\\t\\t}\\n\\t}\\n\\tcm.setSelection(startPoint, endPoint);\\n\\tcm.focus();\\n}\\n\\n\\nfunction _toggleHeading(cm, direction, size) {\\n\\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\\n\\t\\treturn;\\n\\n\\tvar startPoint = cm.getCursor(\\\"start\\\");\\n\\tvar endPoint = cm.getCursor(\\\"end\\\");\\n\\tfor(var i = startPoint.line; i <= endPoint.line; i++) {\\n\\t\\t(function(i) {\\n\\t\\t\\tvar text = cm.getLine(i);\\n\\t\\t\\tvar currHeadingLevel = text.search(/[^#]/);\\n\\n\\t\\t\\tif(direction !== undefined) {\\n\\t\\t\\t\\tif(currHeadingLevel <= 0) {\\n\\t\\t\\t\\t\\tif(direction == \\\"bigger\\\") {\\n\\t\\t\\t\\t\\t\\ttext = \\\"###### \\\" + text;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\ttext = \\\"# \\\" + text;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else if(currHeadingLevel == 6 && direction == \\\"smaller\\\") {\\n\\t\\t\\t\\t\\ttext = text.substr(7);\\n\\t\\t\\t\\t} else if(currHeadingLevel == 1 && direction == \\\"bigger\\\") {\\n\\t\\t\\t\\t\\ttext = text.substr(2);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif(direction == \\\"bigger\\\") {\\n\\t\\t\\t\\t\\t\\ttext = text.substr(1);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\ttext = \\\"#\\\" + text;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tif(size == 1) {\\n\\t\\t\\t\\t\\tif(currHeadingLevel <= 0) {\\n\\t\\t\\t\\t\\t\\ttext = \\\"# \\\" + text;\\n\\t\\t\\t\\t\\t} else if(currHeadingLevel == size) {\\n\\t\\t\\t\\t\\t\\ttext = text.substr(currHeadingLevel + 1);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\ttext = \\\"# \\\" + text.substr(currHeadingLevel + 1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else if(size == 2) {\\n\\t\\t\\t\\t\\tif(currHeadingLevel <= 0) {\\n\\t\\t\\t\\t\\t\\ttext = \\\"## \\\" + text;\\n\\t\\t\\t\\t\\t} else if(currHeadingLevel == size) {\\n\\t\\t\\t\\t\\t\\ttext = text.substr(currHeadingLevel + 1);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\ttext = \\\"## \\\" + text.substr(currHeadingLevel + 1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tif(currHeadingLevel <= 0) {\\n\\t\\t\\t\\t\\t\\ttext = \\\"### \\\" + text;\\n\\t\\t\\t\\t\\t} else if(currHeadingLevel == size) {\\n\\t\\t\\t\\t\\t\\ttext = text.substr(currHeadingLevel + 1);\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\ttext = \\\"### \\\" + text.substr(currHeadingLevel + 1);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tcm.replaceRange(text, {\\n\\t\\t\\t\\tline: i,\\n\\t\\t\\t\\tch: 0\\n\\t\\t\\t}, {\\n\\t\\t\\t\\tline: i,\\n\\t\\t\\t\\tch: 99999999999999\\n\\t\\t\\t});\\n\\t\\t})(i);\\n\\t}\\n\\tcm.focus();\\n}\\n\\n\\nfunction _toggleLine(cm, name) {\\n\\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\\n\\t\\treturn;\\n\\n\\tvar stat = getState(cm);\\n\\tvar startPoint = cm.getCursor(\\\"start\\\");\\n\\tvar endPoint = cm.getCursor(\\\"end\\\");\\n\\tvar repl = {\\n\\t\\t\\\"quote\\\": /^(\\\\s*)\\\\>\\\\s+/,\\n\\t\\t\\\"unordered-list\\\": /^(\\\\s*)(\\\\*|\\\\-|\\\\+)\\\\s+/,\\n\\t\\t\\\"ordered-list\\\": /^(\\\\s*)\\\\d+\\\\.\\\\s+/\\n\\t};\\n\\tvar map = {\\n\\t\\t\\\"quote\\\": \\\"> \\\",\\n\\t\\t\\\"unordered-list\\\": \\\"* \\\",\\n\\t\\t\\\"ordered-list\\\": \\\"1. \\\"\\n\\t};\\n\\tfor(var i = startPoint.line; i <= endPoint.line; i++) {\\n\\t\\t(function(i) {\\n\\t\\t\\tvar text = cm.getLine(i);\\n\\t\\t\\tif(stat[name]) {\\n\\t\\t\\t\\ttext = text.replace(repl[name], \\\"$1\\\");\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttext = map[name] + text;\\n\\t\\t\\t}\\n\\t\\t\\tcm.replaceRange(text, {\\n\\t\\t\\t\\tline: i,\\n\\t\\t\\t\\tch: 0\\n\\t\\t\\t}, {\\n\\t\\t\\t\\tline: i,\\n\\t\\t\\t\\tch: 99999999999999\\n\\t\\t\\t});\\n\\t\\t})(i);\\n\\t}\\n\\tcm.focus();\\n}\\n\\nfunction _toggleBlock(editor, type, start_chars, end_chars) {\\n\\tif(/editor-preview-active/.test(editor.codemirror.getWrapperElement().lastChild.className))\\n\\t\\treturn;\\n\\n\\tend_chars = (typeof end_chars === \\\"undefined\\\") ? start_chars : end_chars;\\n\\tvar cm = editor.codemirror;\\n\\tvar stat = getState(cm);\\n\\n\\tvar text;\\n\\tvar start = start_chars;\\n\\tvar end = end_chars;\\n\\n\\tvar startPoint = cm.getCursor(\\\"start\\\");\\n\\tvar endPoint = cm.getCursor(\\\"end\\\");\\n\\n\\tif(stat[type]) {\\n\\t\\ttext = cm.getLine(startPoint.line);\\n\\t\\tstart = text.slice(0, startPoint.ch);\\n\\t\\tend = text.slice(startPoint.ch);\\n\\t\\tif(type == \\\"bold\\\") {\\n\\t\\t\\tstart = start.replace(/(\\\\*\\\\*|__)(?![\\\\s\\\\S]*(\\\\*\\\\*|__))/, \\\"\\\");\\n\\t\\t\\tend = end.replace(/(\\\\*\\\\*|__)/, \\\"\\\");\\n\\t\\t} else if(type == \\\"italic\\\") {\\n\\t\\t\\tstart = start.replace(/(\\\\*|_)(?![\\\\s\\\\S]*(\\\\*|_))/, \\\"\\\");\\n\\t\\t\\tend = end.replace(/(\\\\*|_)/, \\\"\\\");\\n\\t\\t} else if(type == \\\"strikethrough\\\") {\\n\\t\\t\\tstart = start.replace(/(\\\\*\\\\*|~~)(?![\\\\s\\\\S]*(\\\\*\\\\*|~~))/, \\\"\\\");\\n\\t\\t\\tend = end.replace(/(\\\\*\\\\*|~~)/, \\\"\\\");\\n\\t\\t}\\n\\t\\tcm.replaceRange(start + end, {\\n\\t\\t\\tline: startPoint.line,\\n\\t\\t\\tch: 0\\n\\t\\t}, {\\n\\t\\t\\tline: startPoint.line,\\n\\t\\t\\tch: 99999999999999\\n\\t\\t});\\n\\n\\t\\tif(type == \\\"bold\\\" || type == \\\"strikethrough\\\") {\\n\\t\\t\\tstartPoint.ch -= 2;\\n\\t\\t\\tif(startPoint !== endPoint) {\\n\\t\\t\\t\\tendPoint.ch -= 2;\\n\\t\\t\\t}\\n\\t\\t} else if(type == \\\"italic\\\") {\\n\\t\\t\\tstartPoint.ch -= 1;\\n\\t\\t\\tif(startPoint !== endPoint) {\\n\\t\\t\\t\\tendPoint.ch -= 1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} else {\\n\\t\\ttext = cm.getSelection();\\n\\t\\tif(type == \\\"bold\\\") {\\n\\t\\t\\ttext = text.split(\\\"**\\\").join(\\\"\\\");\\n\\t\\t\\ttext = text.split(\\\"__\\\").join(\\\"\\\");\\n\\t\\t} else if(type == \\\"italic\\\") {\\n\\t\\t\\ttext = text.split(\\\"*\\\").join(\\\"\\\");\\n\\t\\t\\ttext = text.split(\\\"_\\\").join(\\\"\\\");\\n\\t\\t} else if(type == \\\"strikethrough\\\") {\\n\\t\\t\\ttext = text.split(\\\"~~\\\").join(\\\"\\\");\\n\\t\\t}\\n\\t\\tcm.replaceSelection(start + text + end);\\n\\n\\t\\tstartPoint.ch += start_chars.length;\\n\\t\\tendPoint.ch = startPoint.ch + text.length;\\n\\t}\\n\\n\\tcm.setSelection(startPoint, endPoint);\\n\\tcm.focus();\\n}\\n\\nfunction _cleanBlock(cm) {\\n\\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\\n\\t\\treturn;\\n\\n\\tvar startPoint = cm.getCursor(\\\"start\\\");\\n\\tvar endPoint = cm.getCursor(\\\"end\\\");\\n\\tvar text;\\n\\n\\tfor(var line = startPoint.line; line <= endPoint.line; line++) {\\n\\t\\ttext = cm.getLine(line);\\n\\t\\ttext = text.replace(/^[ ]*([# ]+|\\\\*|\\\\-|[> ]+|[0-9]+(.|\\\\)))[ ]*/, \\\"\\\");\\n\\n\\t\\tcm.replaceRange(text, {\\n\\t\\t\\tline: line,\\n\\t\\t\\tch: 0\\n\\t\\t}, {\\n\\t\\t\\tline: line,\\n\\t\\t\\tch: 99999999999999\\n\\t\\t});\\n\\t}\\n}\\n\\n// Merge the properties of one object into another.\\nfunction _mergeProperties(target, source) {\\n\\tfor(var property in source) {\\n\\t\\tif(source.hasOwnProperty(property)) {\\n\\t\\t\\tif(source[property] instanceof Array) {\\n\\t\\t\\t\\ttarget[property] = source[property].concat(target[property] instanceof Array ? target[property] : []);\\n\\t\\t\\t} else if(\\n\\t\\t\\t\\tsource[property] !== null &&\\n\\t\\t\\t\\ttypeof source[property] === \\\"object\\\" &&\\n\\t\\t\\t\\tsource[property].constructor === Object\\n\\t\\t\\t) {\\n\\t\\t\\t\\ttarget[property] = _mergeProperties(target[property] || {}, source[property]);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttarget[property] = source[property];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn target;\\n}\\n\\n// Merge an arbitrary number of objects into one.\\nfunction extend(target) {\\n\\tfor(var i = 1; i < arguments.length; i++) {\\n\\t\\ttarget = _mergeProperties(target, arguments[i]);\\n\\t}\\n\\n\\treturn target;\\n}\\n\\n/* The right word count in respect for CJK. */\\nfunction wordCount(data) {\\n\\tvar pattern = /[a-zA-Z0-9_\\\\u0392-\\\\u03c9\\\\u0410-\\\\u04F9]+|[\\\\u4E00-\\\\u9FFF\\\\u3400-\\\\u4dbf\\\\uf900-\\\\ufaff\\\\u3040-\\\\u309f\\\\uac00-\\\\ud7af]+/g;\\n\\tvar m = data.match(pattern);\\n\\tvar count = 0;\\n\\tif(m === null) return count;\\n\\tfor(var i = 0; i < m.length; i++) {\\n\\t\\tif(m[i].charCodeAt(0) >= 0x4E00) {\\n\\t\\t\\tcount += m[i].length;\\n\\t\\t} else {\\n\\t\\t\\tcount += 1;\\n\\t\\t}\\n\\t}\\n\\treturn count;\\n}\\n\\nvar toolbarBuiltInButtons = {\\n\\t\\\"bold\\\": {\\n\\t\\tname: \\\"bold\\\",\\n\\t\\taction: toggleBold,\\n\\t\\tclassName: \\\"fa fa-bold\\\",\\n\\t\\ttitle: \\\"Bold\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"italic\\\": {\\n\\t\\tname: \\\"italic\\\",\\n\\t\\taction: toggleItalic,\\n\\t\\tclassName: \\\"fa fa-italic\\\",\\n\\t\\ttitle: \\\"Italic\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"strikethrough\\\": {\\n\\t\\tname: \\\"strikethrough\\\",\\n\\t\\taction: toggleStrikethrough,\\n\\t\\tclassName: \\\"fa fa-strikethrough\\\",\\n\\t\\ttitle: \\\"Strikethrough\\\"\\n\\t},\\n\\t\\\"heading\\\": {\\n\\t\\tname: \\\"heading\\\",\\n\\t\\taction: toggleHeadingSmaller,\\n\\t\\tclassName: \\\"fa fa-header\\\",\\n\\t\\ttitle: \\\"Heading\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"heading-smaller\\\": {\\n\\t\\tname: \\\"heading-smaller\\\",\\n\\t\\taction: toggleHeadingSmaller,\\n\\t\\tclassName: \\\"fa fa-header fa-header-x fa-header-smaller\\\",\\n\\t\\ttitle: \\\"Smaller Heading\\\"\\n\\t},\\n\\t\\\"heading-bigger\\\": {\\n\\t\\tname: \\\"heading-bigger\\\",\\n\\t\\taction: toggleHeadingBigger,\\n\\t\\tclassName: \\\"fa fa-header fa-header-x fa-header-bigger\\\",\\n\\t\\ttitle: \\\"Bigger Heading\\\"\\n\\t},\\n\\t\\\"heading-1\\\": {\\n\\t\\tname: \\\"heading-1\\\",\\n\\t\\taction: toggleHeading1,\\n\\t\\tclassName: \\\"fa fa-header fa-header-x fa-header-1\\\",\\n\\t\\ttitle: \\\"Big Heading\\\"\\n\\t},\\n\\t\\\"heading-2\\\": {\\n\\t\\tname: \\\"heading-2\\\",\\n\\t\\taction: toggleHeading2,\\n\\t\\tclassName: \\\"fa fa-header fa-header-x fa-header-2\\\",\\n\\t\\ttitle: \\\"Medium Heading\\\"\\n\\t},\\n\\t\\\"heading-3\\\": {\\n\\t\\tname: \\\"heading-3\\\",\\n\\t\\taction: toggleHeading3,\\n\\t\\tclassName: \\\"fa fa-header fa-header-x fa-header-3\\\",\\n\\t\\ttitle: \\\"Small Heading\\\"\\n\\t},\\n\\t\\\"separator-1\\\": {\\n\\t\\tname: \\\"separator-1\\\"\\n\\t},\\n\\t\\\"code\\\": {\\n\\t\\tname: \\\"code\\\",\\n\\t\\taction: toggleCodeBlock,\\n\\t\\tclassName: \\\"fa fa-code\\\",\\n\\t\\ttitle: \\\"Code\\\"\\n\\t},\\n\\t\\\"quote\\\": {\\n\\t\\tname: \\\"quote\\\",\\n\\t\\taction: toggleBlockquote,\\n\\t\\tclassName: \\\"fa fa-quote-left\\\",\\n\\t\\ttitle: \\\"Quote\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"unordered-list\\\": {\\n\\t\\tname: \\\"unordered-list\\\",\\n\\t\\taction: toggleUnorderedList,\\n\\t\\tclassName: \\\"fa fa-list-ul\\\",\\n\\t\\ttitle: \\\"Generic List\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"ordered-list\\\": {\\n\\t\\tname: \\\"ordered-list\\\",\\n\\t\\taction: toggleOrderedList,\\n\\t\\tclassName: \\\"fa fa-list-ol\\\",\\n\\t\\ttitle: \\\"Numbered List\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"clean-block\\\": {\\n\\t\\tname: \\\"clean-block\\\",\\n\\t\\taction: cleanBlock,\\n\\t\\tclassName: \\\"fa fa-eraser fa-clean-block\\\",\\n\\t\\ttitle: \\\"Clean block\\\"\\n\\t},\\n\\t\\\"separator-2\\\": {\\n\\t\\tname: \\\"separator-2\\\"\\n\\t},\\n\\t\\\"link\\\": {\\n\\t\\tname: \\\"link\\\",\\n\\t\\taction: drawLink,\\n\\t\\tclassName: \\\"fa fa-link\\\",\\n\\t\\ttitle: \\\"Create Link\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"image\\\": {\\n\\t\\tname: \\\"image\\\",\\n\\t\\taction: drawImage,\\n\\t\\tclassName: \\\"fa fa-picture-o\\\",\\n\\t\\ttitle: \\\"Insert Image\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"table\\\": {\\n\\t\\tname: \\\"table\\\",\\n\\t\\taction: drawTable,\\n\\t\\tclassName: \\\"fa fa-table\\\",\\n\\t\\ttitle: \\\"Insert Table\\\"\\n\\t},\\n\\t\\\"horizontal-rule\\\": {\\n\\t\\tname: \\\"horizontal-rule\\\",\\n\\t\\taction: drawHorizontalRule,\\n\\t\\tclassName: \\\"fa fa-minus\\\",\\n\\t\\ttitle: \\\"Insert Horizontal Line\\\"\\n\\t},\\n\\t\\\"separator-3\\\": {\\n\\t\\tname: \\\"separator-3\\\"\\n\\t},\\n\\t\\\"preview\\\": {\\n\\t\\tname: \\\"preview\\\",\\n\\t\\taction: togglePreview,\\n\\t\\tclassName: \\\"fa fa-eye no-disable\\\",\\n\\t\\ttitle: \\\"Toggle Preview\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"side-by-side\\\": {\\n\\t\\tname: \\\"side-by-side\\\",\\n\\t\\taction: toggleSideBySide,\\n\\t\\tclassName: \\\"fa fa-columns no-disable no-mobile\\\",\\n\\t\\ttitle: \\\"Toggle Side by Side\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"fullscreen\\\": {\\n\\t\\tname: \\\"fullscreen\\\",\\n\\t\\taction: toggleFullScreen,\\n\\t\\tclassName: \\\"fa fa-arrows-alt no-disable no-mobile\\\",\\n\\t\\ttitle: \\\"Toggle Fullscreen\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"separator-4\\\": {\\n\\t\\tname: \\\"separator-4\\\"\\n\\t},\\n\\t\\\"guide\\\": {\\n\\t\\tname: \\\"guide\\\",\\n\\t\\taction: \\\"https://simplemde.com/markdown-guide\\\",\\n\\t\\tclassName: \\\"fa fa-question-circle\\\",\\n\\t\\ttitle: \\\"Markdown Guide\\\",\\n\\t\\tdefault: true\\n\\t},\\n\\t\\\"separator-5\\\": {\\n\\t\\tname: \\\"separator-5\\\"\\n\\t},\\n\\t\\\"undo\\\": {\\n\\t\\tname: \\\"undo\\\",\\n\\t\\taction: undo,\\n\\t\\tclassName: \\\"fa fa-undo no-disable\\\",\\n\\t\\ttitle: \\\"Undo\\\"\\n\\t},\\n\\t\\\"redo\\\": {\\n\\t\\tname: \\\"redo\\\",\\n\\t\\taction: redo,\\n\\t\\tclassName: \\\"fa fa-repeat no-disable\\\",\\n\\t\\ttitle: \\\"Redo\\\"\\n\\t}\\n};\\n\\nvar insertTexts = {\\n\\tlink: [\\\"[\\\", \\\"](#url#)\\\"],\\n\\timage: [\\\"![](\\\", \\\"#url#)\\\"],\\n\\ttable: [\\\"\\\", \\\"\\\\n\\\\n| Column 1 | Column 2 | Column 3 |\\\\n| -------- | -------- | -------- |\\\\n| Text     | Text     | Text     |\\\\n\\\\n\\\"],\\n\\thorizontalRule: [\\\"\\\", \\\"\\\\n\\\\n-----\\\\n\\\\n\\\"]\\n};\\n\\nvar promptTexts = {\\n\\tlink: \\\"URL for the link:\\\",\\n\\timage: \\\"URL of the image:\\\"\\n};\\n\\nvar blockStyles = {\\n\\t\\\"bold\\\": \\\"**\\\",\\n\\t\\\"code\\\": \\\"```\\\",\\n\\t\\\"italic\\\": \\\"*\\\"\\n};\\n\\n/**\\n * Interface of SimpleMDE.\\n */\\nfunction SimpleMDE(options) {\\n\\t// Handle options parameter\\n\\toptions = options || {};\\n\\n\\n\\t// Used later to refer to it\\\"s parent\\n\\toptions.parent = this;\\n\\n\\n\\t// Check if Font Awesome needs to be auto downloaded\\n\\tvar autoDownloadFA = true;\\n\\n\\tif(options.autoDownloadFontAwesome === false) {\\n\\t\\tautoDownloadFA = false;\\n\\t}\\n\\n\\tif(options.autoDownloadFontAwesome !== true) {\\n\\t\\tvar styleSheets = document.styleSheets;\\n\\t\\tfor(var i = 0; i < styleSheets.length; i++) {\\n\\t\\t\\tif(!styleSheets[i].href)\\n\\t\\t\\t\\tcontinue;\\n\\n\\t\\t\\tif(styleSheets[i].href.indexOf(\\\"//maxcdn.bootstrapcdn.com/font-awesome/\\\") > -1) {\\n\\t\\t\\t\\tautoDownloadFA = false;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif(autoDownloadFA) {\\n\\t\\tvar link = document.createElement(\\\"link\\\");\\n\\t\\tlink.rel = \\\"stylesheet\\\";\\n\\t\\tlink.href = \\\"https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css\\\";\\n\\t\\tdocument.getElementsByTagName(\\\"head\\\")[0].appendChild(link);\\n\\t}\\n\\n\\n\\t// Find the textarea to use\\n\\tif(options.element) {\\n\\t\\tthis.element = options.element;\\n\\t} else if(options.element === null) {\\n\\t\\t// This means that the element option was specified, but no element was found\\n\\t\\tconsole.log(\\\"SimpleMDE: Error. No element was found.\\\");\\n\\t\\treturn;\\n\\t}\\n\\n\\n\\t// Handle toolbar\\n\\tif(options.toolbar === undefined) {\\n\\t\\t// Initialize\\n\\t\\toptions.toolbar = [];\\n\\n\\n\\t\\t// Loop over the built in buttons, to get the preferred order\\n\\t\\tfor(var key in toolbarBuiltInButtons) {\\n\\t\\t\\tif(toolbarBuiltInButtons.hasOwnProperty(key)) {\\n\\t\\t\\t\\tif(key.indexOf(\\\"separator-\\\") != -1) {\\n\\t\\t\\t\\t\\toptions.toolbar.push(\\\"|\\\");\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif(toolbarBuiltInButtons[key].default === true || (options.showIcons && options.showIcons.constructor === Array && options.showIcons.indexOf(key) != -1)) {\\n\\t\\t\\t\\t\\toptions.toolbar.push(key);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\n\\t// Handle status bar\\n\\tif(!options.hasOwnProperty(\\\"status\\\")) {\\n\\t\\toptions.status = [\\\"autosave\\\", \\\"lines\\\", \\\"words\\\", \\\"cursor\\\"];\\n\\t}\\n\\n\\n\\t// Add default preview rendering function\\n\\tif(!options.previewRender) {\\n\\t\\toptions.previewRender = function(plainText) {\\n\\t\\t\\t// Note: \\\"this\\\" refers to the options object\\n\\t\\t\\treturn this.parent.markdown(plainText);\\n\\t\\t};\\n\\t}\\n\\n\\n\\t// Set default options for parsing config\\n\\toptions.parsingConfig = extend({\\n\\t\\thighlightFormatting: true // needed for toggleCodeBlock to detect types of code\\n\\t}, options.parsingConfig || {});\\n\\n\\n\\t// Merging the insertTexts, with the given options\\n\\toptions.insertTexts = extend({}, insertTexts, options.insertTexts || {});\\n\\n\\n\\t// Merging the promptTexts, with the given options\\n\\toptions.promptTexts = promptTexts;\\n\\n\\n\\t// Merging the blockStyles, with the given options\\n\\toptions.blockStyles = extend({}, blockStyles, options.blockStyles || {});\\n\\n\\n\\t// Merging the shortcuts, with the given options\\n\\toptions.shortcuts = extend({}, shortcuts, options.shortcuts || {});\\n\\n\\n\\t// Change unique_id to uniqueId for backwards compatibility\\n\\tif(options.autosave != undefined && options.autosave.unique_id != undefined && options.autosave.unique_id != \\\"\\\")\\n\\t\\toptions.autosave.uniqueId = options.autosave.unique_id;\\n\\n\\n\\t// Update this options\\n\\tthis.options = options;\\n\\n\\n\\t// Auto render\\n\\tthis.render();\\n\\n\\n\\t// The codemirror component is only available after rendering\\n\\t// so, the setter for the initialValue can only run after\\n\\t// the element has been rendered\\n\\tif(options.initialValue && (!this.options.autosave || this.options.autosave.foundSavedValue !== true)) {\\n\\t\\tthis.value(options.initialValue);\\n\\t}\\n}\\n\\n/**\\n * Default markdown render.\\n */\\nSimpleMDE.prototype.markdown = function(text) {\\n\\tif(marked) {\\n\\t\\t// Initialize\\n\\t\\tvar markedOptions = {};\\n\\n\\n\\t\\t// Update options\\n\\t\\tif(this.options && this.options.renderingConfig && this.options.renderingConfig.singleLineBreaks === false) {\\n\\t\\t\\tmarkedOptions.breaks = false;\\n\\t\\t} else {\\n\\t\\t\\tmarkedOptions.breaks = true;\\n\\t\\t}\\n\\n\\t\\tif(this.options && this.options.renderingConfig && this.options.renderingConfig.codeSyntaxHighlighting === true && window.hljs) {\\n\\t\\t\\tmarkedOptions.highlight = function(code) {\\n\\t\\t\\t\\treturn window.hljs.highlightAuto(code).value;\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\n\\t\\t// Set options\\n\\t\\tmarked.setOptions(markedOptions);\\n\\n\\n\\t\\t// Return\\n\\t\\treturn marked(text);\\n\\t}\\n};\\n\\n/**\\n * Render editor to the given element.\\n */\\nSimpleMDE.prototype.render = function(el) {\\n\\tif(!el) {\\n\\t\\tel = this.element || document.getElementsByTagName(\\\"textarea\\\")[0];\\n\\t}\\n\\n\\tif(this._rendered && this._rendered === el) {\\n\\t\\t// Already rendered.\\n\\t\\treturn;\\n\\t}\\n\\n\\tthis.element = el;\\n\\tvar options = this.options;\\n\\n\\tvar self = this;\\n\\tvar keyMaps = {};\\n\\n\\tfor(var key in options.shortcuts) {\\n\\t\\t// null stands for \\\"do not bind this command\\\"\\n\\t\\tif(options.shortcuts[key] !== null && bindings[key] !== null) {\\n\\t\\t\\t(function(key) {\\n\\t\\t\\t\\tkeyMaps[fixShortcut(options.shortcuts[key])] = function() {\\n\\t\\t\\t\\t\\tbindings[key](self);\\n\\t\\t\\t\\t};\\n\\t\\t\\t})(key);\\n\\t\\t}\\n\\t}\\n\\n\\tkeyMaps[\\\"Enter\\\"] = \\\"newlineAndIndentContinueMarkdownList\\\";\\n\\tkeyMaps[\\\"Tab\\\"] = \\\"tabAndIndentMarkdownList\\\";\\n\\tkeyMaps[\\\"Shift-Tab\\\"] = \\\"shiftTabAndUnindentMarkdownList\\\";\\n\\tkeyMaps[\\\"Esc\\\"] = function(cm) {\\n\\t\\tif(cm.getOption(\\\"fullScreen\\\")) toggleFullScreen(self);\\n\\t};\\n\\n\\tdocument.addEventListener(\\\"keydown\\\", function(e) {\\n\\t\\te = e || window.event;\\n\\n\\t\\tif(e.keyCode == 27) {\\n\\t\\t\\tif(self.codemirror.getOption(\\\"fullScreen\\\")) toggleFullScreen(self);\\n\\t\\t}\\n\\t}, false);\\n\\n\\tvar mode, backdrop;\\n\\tif(options.spellChecker !== false) {\\n\\t\\tmode = \\\"spell-checker\\\";\\n\\t\\tbackdrop = options.parsingConfig;\\n\\t\\tbackdrop.name = \\\"gfm\\\";\\n\\t\\tbackdrop.gitHubSpice = false;\\n\\n\\t\\tCodeMirrorSpellChecker({\\n\\t\\t\\tcodeMirrorInstance: CodeMirror\\n\\t\\t});\\n\\t} else {\\n\\t\\tmode = options.parsingConfig;\\n\\t\\tmode.name = \\\"gfm\\\";\\n\\t\\tmode.gitHubSpice = false;\\n\\t}\\n\\n\\tthis.codemirror = CodeMirror.fromTextArea(el, {\\n\\t\\tmode: mode,\\n\\t\\tbackdrop: backdrop,\\n\\t\\ttheme: \\\"paper\\\",\\n\\t\\ttabSize: (options.tabSize != undefined) ? options.tabSize : 2,\\n\\t\\tindentUnit: (options.tabSize != undefined) ? options.tabSize : 2,\\n\\t\\tindentWithTabs: (options.indentWithTabs === false) ? false : true,\\n\\t\\tlineNumbers: false,\\n\\t\\tautofocus: (options.autofocus === true) ? true : false,\\n\\t\\textraKeys: keyMaps,\\n\\t\\tlineWrapping: (options.lineWrapping === false) ? false : true,\\n\\t\\tallowDropFileTypes: [\\\"text/plain\\\"],\\n\\t\\tplaceholder: options.placeholder || el.getAttribute(\\\"placeholder\\\") || \\\"\\\",\\n\\t\\tstyleSelectedText: (options.styleSelectedText != undefined) ? options.styleSelectedText : true\\n\\t});\\n\\n\\tif(options.forceSync === true) {\\n\\t\\tvar cm = this.codemirror;\\n\\t\\tcm.on(\\\"change\\\", function() {\\n\\t\\t\\tcm.save();\\n\\t\\t});\\n\\t}\\n\\n\\tthis.gui = {};\\n\\n\\tif(options.toolbar !== false) {\\n\\t\\tthis.gui.toolbar = this.createToolbar();\\n\\t}\\n\\tif(options.status !== false) {\\n\\t\\tthis.gui.statusbar = this.createStatusbar();\\n\\t}\\n\\tif(options.autosave != undefined && options.autosave.enabled === true) {\\n\\t\\tthis.autosave();\\n\\t}\\n\\n\\tthis.gui.sideBySide = this.createSideBySide();\\n\\n\\tthis._rendered = this.element;\\n\\n\\n\\t// Fixes CodeMirror bug (#344)\\n\\tvar temp_cm = this.codemirror;\\n\\tsetTimeout(function() {\\n\\t\\ttemp_cm.refresh();\\n\\t}.bind(temp_cm), 0);\\n};\\n\\n// Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem throw QuotaExceededError. We're going to detect this and set a variable accordingly.\\nfunction isLocalStorageAvailable() {\\n\\tif(typeof localStorage === \\\"object\\\") {\\n\\t\\ttry {\\n\\t\\t\\tlocalStorage.setItem(\\\"smde_localStorage\\\", 1);\\n\\t\\t\\tlocalStorage.removeItem(\\\"smde_localStorage\\\");\\n\\t\\t} catch(e) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t} else {\\n\\t\\treturn false;\\n\\t}\\n\\n\\treturn true;\\n}\\n\\nSimpleMDE.prototype.autosave = function() {\\n\\tif(isLocalStorageAvailable()) {\\n\\t\\tvar simplemde = this;\\n\\n\\t\\tif(this.options.autosave.uniqueId == undefined || this.options.autosave.uniqueId == \\\"\\\") {\\n\\t\\t\\tconsole.log(\\\"SimpleMDE: You must set a uniqueId to use the autosave feature\\\");\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif(simplemde.element.form != null && simplemde.element.form != undefined) {\\n\\t\\t\\tsimplemde.element.form.addEventListener(\\\"submit\\\", function() {\\n\\t\\t\\t\\tlocalStorage.removeItem(\\\"smde_\\\" + simplemde.options.autosave.uniqueId);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tif(this.options.autosave.loaded !== true) {\\n\\t\\t\\tif(typeof localStorage.getItem(\\\"smde_\\\" + this.options.autosave.uniqueId) == \\\"string\\\" && localStorage.getItem(\\\"smde_\\\" + this.options.autosave.uniqueId) != \\\"\\\") {\\n\\t\\t\\t\\tthis.codemirror.setValue(localStorage.getItem(\\\"smde_\\\" + this.options.autosave.uniqueId));\\n\\t\\t\\t\\tthis.options.autosave.foundSavedValue = true;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.options.autosave.loaded = true;\\n\\t\\t}\\n\\n\\t\\tlocalStorage.setItem(\\\"smde_\\\" + this.options.autosave.uniqueId, simplemde.value());\\n\\n\\t\\tvar el = document.getElementById(\\\"autosaved\\\");\\n\\t\\tif(el != null && el != undefined && el != \\\"\\\") {\\n\\t\\t\\tvar d = new Date();\\n\\t\\t\\tvar hh = d.getHours();\\n\\t\\t\\tvar m = d.getMinutes();\\n\\t\\t\\tvar dd = \\\"am\\\";\\n\\t\\t\\tvar h = hh;\\n\\t\\t\\tif(h >= 12) {\\n\\t\\t\\t\\th = hh - 12;\\n\\t\\t\\t\\tdd = \\\"pm\\\";\\n\\t\\t\\t}\\n\\t\\t\\tif(h == 0) {\\n\\t\\t\\t\\th = 12;\\n\\t\\t\\t}\\n\\t\\t\\tm = m < 10 ? \\\"0\\\" + m : m;\\n\\n\\t\\t\\tel.innerHTML = \\\"Autosaved: \\\" + h + \\\":\\\" + m + \\\" \\\" + dd;\\n\\t\\t}\\n\\n\\t\\tthis.autosaveTimeoutId = setTimeout(function() {\\n\\t\\t\\tsimplemde.autosave();\\n\\t\\t}, this.options.autosave.delay || 10000);\\n\\t} else {\\n\\t\\tconsole.log(\\\"SimpleMDE: localStorage not available, cannot autosave\\\");\\n\\t}\\n};\\n\\nSimpleMDE.prototype.clearAutosavedValue = function() {\\n\\tif(isLocalStorageAvailable()) {\\n\\t\\tif(this.options.autosave == undefined || this.options.autosave.uniqueId == undefined || this.options.autosave.uniqueId == \\\"\\\") {\\n\\t\\t\\tconsole.log(\\\"SimpleMDE: You must set a uniqueId to clear the autosave value\\\");\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tlocalStorage.removeItem(\\\"smde_\\\" + this.options.autosave.uniqueId);\\n\\t} else {\\n\\t\\tconsole.log(\\\"SimpleMDE: localStorage not available, cannot autosave\\\");\\n\\t}\\n};\\n\\nSimpleMDE.prototype.createSideBySide = function() {\\n\\tvar cm = this.codemirror;\\n\\tvar wrapper = cm.getWrapperElement();\\n\\tvar preview = wrapper.nextSibling;\\n\\n\\tif(!preview || !/editor-preview-side/.test(preview.className)) {\\n\\t\\tpreview = document.createElement(\\\"div\\\");\\n\\t\\tpreview.className = \\\"editor-preview-side\\\";\\n\\t\\twrapper.parentNode.insertBefore(preview, wrapper.nextSibling);\\n\\t}\\n\\n\\t// Syncs scroll  editor -> preview\\n\\tvar cScroll = false;\\n\\tvar pScroll = false;\\n\\tcm.on(\\\"scroll\\\", function(v) {\\n\\t\\tif(cScroll) {\\n\\t\\t\\tcScroll = false;\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tpScroll = true;\\n\\t\\tvar height = v.getScrollInfo().height - v.getScrollInfo().clientHeight;\\n\\t\\tvar ratio = parseFloat(v.getScrollInfo().top) / height;\\n\\t\\tvar move = (preview.scrollHeight - preview.clientHeight) * ratio;\\n\\t\\tpreview.scrollTop = move;\\n\\t});\\n\\n\\t// Syncs scroll  preview -> editor\\n\\tpreview.onscroll = function() {\\n\\t\\tif(pScroll) {\\n\\t\\t\\tpScroll = false;\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tcScroll = true;\\n\\t\\tvar height = preview.scrollHeight - preview.clientHeight;\\n\\t\\tvar ratio = parseFloat(preview.scrollTop) / height;\\n\\t\\tvar move = (cm.getScrollInfo().height - cm.getScrollInfo().clientHeight) * ratio;\\n\\t\\tcm.scrollTo(0, move);\\n\\t};\\n\\treturn preview;\\n};\\n\\nSimpleMDE.prototype.createToolbar = function(items) {\\n\\titems = items || this.options.toolbar;\\n\\n\\tif(!items || items.length === 0) {\\n\\t\\treturn;\\n\\t}\\n\\tvar i;\\n\\tfor(i = 0; i < items.length; i++) {\\n\\t\\tif(toolbarBuiltInButtons[items[i]] != undefined) {\\n\\t\\t\\titems[i] = toolbarBuiltInButtons[items[i]];\\n\\t\\t}\\n\\t}\\n\\n\\tvar bar = document.createElement(\\\"div\\\");\\n\\tbar.className = \\\"editor-toolbar\\\";\\n\\n\\tvar self = this;\\n\\n\\tvar toolbarData = {};\\n\\tself.toolbar = items;\\n\\n\\tfor(i = 0; i < items.length; i++) {\\n\\t\\tif(items[i].name == \\\"guide\\\" && self.options.toolbarGuideIcon === false)\\n\\t\\t\\tcontinue;\\n\\n\\t\\tif(self.options.hideIcons && self.options.hideIcons.indexOf(items[i].name) != -1)\\n\\t\\t\\tcontinue;\\n\\n\\t\\t// Fullscreen does not work well on mobile devices (even tablets)\\n\\t\\t// In the future, hopefully this can be resolved\\n\\t\\tif((items[i].name == \\\"fullscreen\\\" || items[i].name == \\\"side-by-side\\\") && isMobile())\\n\\t\\t\\tcontinue;\\n\\n\\n\\t\\t// Don't include trailing separators\\n\\t\\tif(items[i] === \\\"|\\\") {\\n\\t\\t\\tvar nonSeparatorIconsFollow = false;\\n\\n\\t\\t\\tfor(var x = (i + 1); x < items.length; x++) {\\n\\t\\t\\t\\tif(items[x] !== \\\"|\\\" && (!self.options.hideIcons || self.options.hideIcons.indexOf(items[x].name) == -1)) {\\n\\t\\t\\t\\t\\tnonSeparatorIconsFollow = true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif(!nonSeparatorIconsFollow)\\n\\t\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\n\\t\\t// Create the icon and append to the toolbar\\n\\t\\t(function(item) {\\n\\t\\t\\tvar el;\\n\\t\\t\\tif(item === \\\"|\\\") {\\n\\t\\t\\t\\tel = createSep();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tel = createIcon(item, self.options.toolbarTips, self.options.shortcuts);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// bind events, special for info\\n\\t\\t\\tif(item.action) {\\n\\t\\t\\t\\tif(typeof item.action === \\\"function\\\") {\\n\\t\\t\\t\\t\\tel.onclick = function(e) {\\n\\t\\t\\t\\t\\t\\te.preventDefault();\\n\\t\\t\\t\\t\\t\\titem.action(self);\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t} else if(typeof item.action === \\\"string\\\") {\\n\\t\\t\\t\\t\\tel.href = item.action;\\n\\t\\t\\t\\t\\tel.target = \\\"_blank\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\ttoolbarData[item.name || item] = el;\\n\\t\\t\\tbar.appendChild(el);\\n\\t\\t})(items[i]);\\n\\t}\\n\\n\\tself.toolbarElements = toolbarData;\\n\\n\\tvar cm = this.codemirror;\\n\\tcm.on(\\\"cursorActivity\\\", function() {\\n\\t\\tvar stat = getState(cm);\\n\\n\\t\\tfor(var key in toolbarData) {\\n\\t\\t\\t(function(key) {\\n\\t\\t\\t\\tvar el = toolbarData[key];\\n\\t\\t\\t\\tif(stat[key]) {\\n\\t\\t\\t\\t\\tel.className += \\\" active\\\";\\n\\t\\t\\t\\t} else if(key != \\\"fullscreen\\\" && key != \\\"side-by-side\\\") {\\n\\t\\t\\t\\t\\tel.className = el.className.replace(/\\\\s*active\\\\s*/g, \\\"\\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t})(key);\\n\\t\\t}\\n\\t});\\n\\n\\tvar cmWrapper = cm.getWrapperElement();\\n\\tcmWrapper.parentNode.insertBefore(bar, cmWrapper);\\n\\treturn bar;\\n};\\n\\nSimpleMDE.prototype.createStatusbar = function(status) {\\n\\t// Initialize\\n\\tstatus = status || this.options.status;\\n\\tvar options = this.options;\\n\\tvar cm = this.codemirror;\\n\\n\\n\\t// Make sure the status variable is valid\\n\\tif(!status || status.length === 0)\\n\\t\\treturn;\\n\\n\\n\\t// Set up the built-in items\\n\\tvar items = [];\\n\\tvar i, onUpdate, defaultValue;\\n\\n\\tfor(i = 0; i < status.length; i++) {\\n\\t\\t// Reset some values\\n\\t\\tonUpdate = undefined;\\n\\t\\tdefaultValue = undefined;\\n\\n\\n\\t\\t// Handle if custom or not\\n\\t\\tif(typeof status[i] === \\\"object\\\") {\\n\\t\\t\\titems.push({\\n\\t\\t\\t\\tclassName: status[i].className,\\n\\t\\t\\t\\tdefaultValue: status[i].defaultValue,\\n\\t\\t\\t\\tonUpdate: status[i].onUpdate\\n\\t\\t\\t});\\n\\t\\t} else {\\n\\t\\t\\tvar name = status[i];\\n\\n\\t\\t\\tif(name === \\\"words\\\") {\\n\\t\\t\\t\\tdefaultValue = function(el) {\\n\\t\\t\\t\\t\\tel.innerHTML = wordCount(cm.getValue());\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tonUpdate = function(el) {\\n\\t\\t\\t\\t\\tel.innerHTML = wordCount(cm.getValue());\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else if(name === \\\"lines\\\") {\\n\\t\\t\\t\\tdefaultValue = function(el) {\\n\\t\\t\\t\\t\\tel.innerHTML = cm.lineCount();\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tonUpdate = function(el) {\\n\\t\\t\\t\\t\\tel.innerHTML = cm.lineCount();\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else if(name === \\\"cursor\\\") {\\n\\t\\t\\t\\tdefaultValue = function(el) {\\n\\t\\t\\t\\t\\tel.innerHTML = \\\"0:0\\\";\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tonUpdate = function(el) {\\n\\t\\t\\t\\t\\tvar pos = cm.getCursor();\\n\\t\\t\\t\\t\\tel.innerHTML = pos.line + \\\":\\\" + pos.ch;\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else if(name === \\\"autosave\\\") {\\n\\t\\t\\t\\tdefaultValue = function(el) {\\n\\t\\t\\t\\t\\tif(options.autosave != undefined && options.autosave.enabled === true) {\\n\\t\\t\\t\\t\\t\\tel.setAttribute(\\\"id\\\", \\\"autosaved\\\");\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\n\\t\\t\\titems.push({\\n\\t\\t\\t\\tclassName: name,\\n\\t\\t\\t\\tdefaultValue: defaultValue,\\n\\t\\t\\t\\tonUpdate: onUpdate\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\n\\t// Create element for the status bar\\n\\tvar bar = document.createElement(\\\"div\\\");\\n\\tbar.className = \\\"editor-statusbar\\\";\\n\\n\\n\\t// Create a new span for each item\\n\\tfor(i = 0; i < items.length; i++) {\\n\\t\\t// Store in temporary variable\\n\\t\\tvar item = items[i];\\n\\n\\n\\t\\t// Create span element\\n\\t\\tvar el = document.createElement(\\\"span\\\");\\n\\t\\tel.className = item.className;\\n\\n\\n\\t\\t// Ensure the defaultValue is a function\\n\\t\\tif(typeof item.defaultValue === \\\"function\\\") {\\n\\t\\t\\titem.defaultValue(el);\\n\\t\\t}\\n\\n\\n\\t\\t// Ensure the onUpdate is a function\\n\\t\\tif(typeof item.onUpdate === \\\"function\\\") {\\n\\t\\t\\t// Create a closure around the span of the current action, then execute the onUpdate handler\\n\\t\\t\\tthis.codemirror.on(\\\"update\\\", (function(el, item) {\\n\\t\\t\\t\\treturn function() {\\n\\t\\t\\t\\t\\titem.onUpdate(el);\\n\\t\\t\\t\\t};\\n\\t\\t\\t}(el, item)));\\n\\t\\t}\\n\\n\\n\\t\\t// Append the item to the status bar\\n\\t\\tbar.appendChild(el);\\n\\t}\\n\\n\\n\\t// Insert the status bar into the DOM\\n\\tvar cmWrapper = this.codemirror.getWrapperElement();\\n\\tcmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);\\n\\treturn bar;\\n};\\n\\n/**\\n * Get or set the text content.\\n */\\nSimpleMDE.prototype.value = function(val) {\\n\\tif(val === undefined) {\\n\\t\\treturn this.codemirror.getValue();\\n\\t} else {\\n\\t\\tthis.codemirror.getDoc().setValue(val);\\n\\t\\treturn this;\\n\\t}\\n};\\n\\n\\n/**\\n * Bind static methods for exports.\\n */\\nSimpleMDE.toggleBold = toggleBold;\\nSimpleMDE.toggleItalic = toggleItalic;\\nSimpleMDE.toggleStrikethrough = toggleStrikethrough;\\nSimpleMDE.toggleBlockquote = toggleBlockquote;\\nSimpleMDE.toggleHeadingSmaller = toggleHeadingSmaller;\\nSimpleMDE.toggleHeadingBigger = toggleHeadingBigger;\\nSimpleMDE.toggleHeading1 = toggleHeading1;\\nSimpleMDE.toggleHeading2 = toggleHeading2;\\nSimpleMDE.toggleHeading3 = toggleHeading3;\\nSimpleMDE.toggleCodeBlock = toggleCodeBlock;\\nSimpleMDE.toggleUnorderedList = toggleUnorderedList;\\nSimpleMDE.toggleOrderedList = toggleOrderedList;\\nSimpleMDE.cleanBlock = cleanBlock;\\nSimpleMDE.drawLink = drawLink;\\nSimpleMDE.drawImage = drawImage;\\nSimpleMDE.drawTable = drawTable;\\nSimpleMDE.drawHorizontalRule = drawHorizontalRule;\\nSimpleMDE.undo = undo;\\nSimpleMDE.redo = redo;\\nSimpleMDE.togglePreview = togglePreview;\\nSimpleMDE.toggleSideBySide = toggleSideBySide;\\nSimpleMDE.toggleFullScreen = toggleFullScreen;\\n\\n/**\\n * Bind instance methods for exports.\\n */\\nSimpleMDE.prototype.toggleBold = function() {\\n\\ttoggleBold(this);\\n};\\nSimpleMDE.prototype.toggleItalic = function() {\\n\\ttoggleItalic(this);\\n};\\nSimpleMDE.prototype.toggleStrikethrough = function() {\\n\\ttoggleStrikethrough(this);\\n};\\nSimpleMDE.prototype.toggleBlockquote = function() {\\n\\ttoggleBlockquote(this);\\n};\\nSimpleMDE.prototype.toggleHeadingSmaller = function() {\\n\\ttoggleHeadingSmaller(this);\\n};\\nSimpleMDE.prototype.toggleHeadingBigger = function() {\\n\\ttoggleHeadingBigger(this);\\n};\\nSimpleMDE.prototype.toggleHeading1 = function() {\\n\\ttoggleHeading1(this);\\n};\\nSimpleMDE.prototype.toggleHeading2 = function() {\\n\\ttoggleHeading2(this);\\n};\\nSimpleMDE.prototype.toggleHeading3 = function() {\\n\\ttoggleHeading3(this);\\n};\\nSimpleMDE.prototype.toggleCodeBlock = function() {\\n\\ttoggleCodeBlock(this);\\n};\\nSimpleMDE.prototype.toggleUnorderedList = function() {\\n\\ttoggleUnorderedList(this);\\n};\\nSimpleMDE.prototype.toggleOrderedList = function() {\\n\\ttoggleOrderedList(this);\\n};\\nSimpleMDE.prototype.cleanBlock = function() {\\n\\tcleanBlock(this);\\n};\\nSimpleMDE.prototype.drawLink = function() {\\n\\tdrawLink(this);\\n};\\nSimpleMDE.prototype.drawImage = function() {\\n\\tdrawImage(this);\\n};\\nSimpleMDE.prototype.drawTable = function() {\\n\\tdrawTable(this);\\n};\\nSimpleMDE.prototype.drawHorizontalRule = function() {\\n\\tdrawHorizontalRule(this);\\n};\\nSimpleMDE.prototype.undo = function() {\\n\\tundo(this);\\n};\\nSimpleMDE.prototype.redo = function() {\\n\\tredo(this);\\n};\\nSimpleMDE.prototype.togglePreview = function() {\\n\\ttogglePreview(this);\\n};\\nSimpleMDE.prototype.toggleSideBySide = function() {\\n\\ttoggleSideBySide(this);\\n};\\nSimpleMDE.prototype.toggleFullScreen = function() {\\n\\ttoggleFullScreen(this);\\n};\\n\\nSimpleMDE.prototype.isPreviewActive = function() {\\n\\tvar cm = this.codemirror;\\n\\tvar wrapper = cm.getWrapperElement();\\n\\tvar preview = wrapper.lastChild;\\n\\n\\treturn /editor-preview-active/.test(preview.className);\\n};\\n\\nSimpleMDE.prototype.isSideBySideActive = function() {\\n\\tvar cm = this.codemirror;\\n\\tvar wrapper = cm.getWrapperElement();\\n\\tvar preview = wrapper.nextSibling;\\n\\n\\treturn /editor-preview-active-side/.test(preview.className);\\n};\\n\\nSimpleMDE.prototype.isFullscreenActive = function() {\\n\\tvar cm = this.codemirror;\\n\\n\\treturn cm.getOption(\\\"fullScreen\\\");\\n};\\n\\nSimpleMDE.prototype.getState = function() {\\n\\tvar cm = this.codemirror;\\n\\n\\treturn getState(cm);\\n};\\n\\nSimpleMDE.prototype.toTextArea = function() {\\n\\tvar cm = this.codemirror;\\n\\tvar wrapper = cm.getWrapperElement();\\n\\n\\tif(wrapper.parentNode) {\\n\\t\\tif(this.gui.toolbar) {\\n\\t\\t\\twrapper.parentNode.removeChild(this.gui.toolbar);\\n\\t\\t}\\n\\t\\tif(this.gui.statusbar) {\\n\\t\\t\\twrapper.parentNode.removeChild(this.gui.statusbar);\\n\\t\\t}\\n\\t\\tif(this.gui.sideBySide) {\\n\\t\\t\\twrapper.parentNode.removeChild(this.gui.sideBySide);\\n\\t\\t}\\n\\t}\\n\\n\\tcm.toTextArea();\\n\\n\\tif(this.autosaveTimeoutId) {\\n\\t\\tclearTimeout(this.autosaveTimeoutId);\\n\\t\\tthis.autosaveTimeoutId = undefined;\\n\\t\\tthis.clearAutosavedValue();\\n\\t}\\n};\\n\\nmodule.exports = SimpleMDE;\",\"// CodeMirror, copyright (c) by Marijn Haverbeke and others\\n// Distributed under an MIT license: http://codemirror.net/LICENSE\\n\\n(function(mod) {\\n  if (typeof exports == \\\"object\\\" && typeof module == \\\"object\\\") // CommonJS\\n    mod(require(\\\"../lib/codemirror\\\"));\\n  else if (typeof define == \\\"function\\\" && define.amd) // AMD\\n    define([\\\"../lib/codemirror\\\"], mod);\\n  else // Plain browser env\\n    mod(CodeMirror);\\n})(function(CodeMirror) {\\n  \\\"use strict\\\";\\n\\n  CodeMirror.modeInfo = [\\n    {name: \\\"APL\\\", mime: \\\"text/apl\\\", mode: \\\"apl\\\", ext: [\\\"dyalog\\\", \\\"apl\\\"]},\\n    {name: \\\"PGP\\\", mimes: [\\\"application/pgp\\\", \\\"application/pgp-encrypted\\\", \\\"application/pgp-keys\\\", \\\"application/pgp-signature\\\"], mode: \\\"asciiarmor\\\", ext: [\\\"asc\\\", \\\"pgp\\\", \\\"sig\\\"]},\\n    {name: \\\"ASN.1\\\", mime: \\\"text/x-ttcn-asn\\\", mode: \\\"asn.1\\\", ext: [\\\"asn\\\", \\\"asn1\\\"]},\\n    {name: \\\"Asterisk\\\", mime: \\\"text/x-asterisk\\\", mode: \\\"asterisk\\\", file: /^extensions\\\\.conf$/i},\\n    {name: \\\"Brainfuck\\\", mime: \\\"text/x-brainfuck\\\", mode: \\\"brainfuck\\\", ext: [\\\"b\\\", \\\"bf\\\"]},\\n    {name: \\\"C\\\", mime: \\\"text/x-csrc\\\", mode: \\\"clike\\\", ext: [\\\"c\\\", \\\"h\\\", \\\"ino\\\"]},\\n    {name: \\\"C++\\\", mime: \\\"text/x-c++src\\\", mode: \\\"clike\\\", ext: [\\\"cpp\\\", \\\"c++\\\", \\\"cc\\\", \\\"cxx\\\", \\\"hpp\\\", \\\"h++\\\", \\\"hh\\\", \\\"hxx\\\"], alias: [\\\"cpp\\\"]},\\n    {name: \\\"Cobol\\\", mime: \\\"text/x-cobol\\\", mode: \\\"cobol\\\", ext: [\\\"cob\\\", \\\"cpy\\\"]},\\n    {name: \\\"C#\\\", mime: \\\"text/x-csharp\\\", mode: \\\"clike\\\", ext: [\\\"cs\\\"], alias: [\\\"csharp\\\"]},\\n    {name: \\\"Clojure\\\", mime: \\\"text/x-clojure\\\", mode: \\\"clojure\\\", ext: [\\\"clj\\\", \\\"cljc\\\", \\\"cljx\\\"]},\\n    {name: \\\"ClojureScript\\\", mime: \\\"text/x-clojurescript\\\", mode: \\\"clojure\\\", ext: [\\\"cljs\\\"]},\\n    {name: \\\"Closure Stylesheets (GSS)\\\", mime: \\\"text/x-gss\\\", mode: \\\"css\\\", ext: [\\\"gss\\\"]},\\n    {name: \\\"CMake\\\", mime: \\\"text/x-cmake\\\", mode: \\\"cmake\\\", ext: [\\\"cmake\\\", \\\"cmake.in\\\"], file: /^CMakeLists.txt$/},\\n    {name: \\\"CoffeeScript\\\", mimes: [\\\"application/vnd.coffeescript\\\", \\\"text/coffeescript\\\", \\\"text/x-coffeescript\\\"], mode: \\\"coffeescript\\\", ext: [\\\"coffee\\\"], alias: [\\\"coffee\\\", \\\"coffee-script\\\"]},\\n    {name: \\\"Common Lisp\\\", mime: \\\"text/x-common-lisp\\\", mode: \\\"commonlisp\\\", ext: [\\\"cl\\\", \\\"lisp\\\", \\\"el\\\"], alias: [\\\"lisp\\\"]},\\n    {name: \\\"Cypher\\\", mime: \\\"application/x-cypher-query\\\", mode: \\\"cypher\\\", ext: [\\\"cyp\\\", \\\"cypher\\\"]},\\n    {name: \\\"Cython\\\", mime: \\\"text/x-cython\\\", mode: \\\"python\\\", ext: [\\\"pyx\\\", \\\"pxd\\\", \\\"pxi\\\"]},\\n    {name: \\\"Crystal\\\", mime: \\\"text/x-crystal\\\", mode: \\\"crystal\\\", ext: [\\\"cr\\\"]},\\n    {name: \\\"CSS\\\", mime: \\\"text/css\\\", mode: \\\"css\\\", ext: [\\\"css\\\"]},\\n    {name: \\\"CQL\\\", mime: \\\"text/x-cassandra\\\", mode: \\\"sql\\\", ext: [\\\"cql\\\"]},\\n    {name: \\\"D\\\", mime: \\\"text/x-d\\\", mode: \\\"d\\\", ext: [\\\"d\\\"]},\\n    {name: \\\"Dart\\\", mimes: [\\\"application/dart\\\", \\\"text/x-dart\\\"], mode: \\\"dart\\\", ext: [\\\"dart\\\"]},\\n    {name: \\\"diff\\\", mime: \\\"text/x-diff\\\", mode: \\\"diff\\\", ext: [\\\"diff\\\", \\\"patch\\\"]},\\n    {name: \\\"Django\\\", mime: \\\"text/x-django\\\", mode: \\\"django\\\"},\\n    {name: \\\"Dockerfile\\\", mime: \\\"text/x-dockerfile\\\", mode: \\\"dockerfile\\\", file: /^Dockerfile$/},\\n    {name: \\\"DTD\\\", mime: \\\"application/xml-dtd\\\", mode: \\\"dtd\\\", ext: [\\\"dtd\\\"]},\\n    {name: \\\"Dylan\\\", mime: \\\"text/x-dylan\\\", mode: \\\"dylan\\\", ext: [\\\"dylan\\\", \\\"dyl\\\", \\\"intr\\\"]},\\n    {name: \\\"EBNF\\\", mime: \\\"text/x-ebnf\\\", mode: \\\"ebnf\\\"},\\n    {name: \\\"ECL\\\", mime: \\\"text/x-ecl\\\", mode: \\\"ecl\\\", ext: [\\\"ecl\\\"]},\\n    {name: \\\"edn\\\", mime: \\\"application/edn\\\", mode: \\\"clojure\\\", ext: [\\\"edn\\\"]},\\n    {name: \\\"Eiffel\\\", mime: \\\"text/x-eiffel\\\", mode: \\\"eiffel\\\", ext: [\\\"e\\\"]},\\n    {name: \\\"Elm\\\", mime: \\\"text/x-elm\\\", mode: \\\"elm\\\", ext: [\\\"elm\\\"]},\\n    {name: \\\"Embedded Javascript\\\", mime: \\\"application/x-ejs\\\", mode: \\\"htmlembedded\\\", ext: [\\\"ejs\\\"]},\\n    {name: \\\"Embedded Ruby\\\", mime: \\\"application/x-erb\\\", mode: \\\"htmlembedded\\\", ext: [\\\"erb\\\"]},\\n    {name: \\\"Erlang\\\", mime: \\\"text/x-erlang\\\", mode: \\\"erlang\\\", ext: [\\\"erl\\\"]},\\n    {name: \\\"Esper\\\", mime: \\\"text/x-esper\\\", mode: \\\"sql\\\"},\\n    {name: \\\"Factor\\\", mime: \\\"text/x-factor\\\", mode: \\\"factor\\\", ext: [\\\"factor\\\"]},\\n    {name: \\\"FCL\\\", mime: \\\"text/x-fcl\\\", mode: \\\"fcl\\\"},\\n    {name: \\\"Forth\\\", mime: \\\"text/x-forth\\\", mode: \\\"forth\\\", ext: [\\\"forth\\\", \\\"fth\\\", \\\"4th\\\"]},\\n    {name: \\\"Fortran\\\", mime: \\\"text/x-fortran\\\", mode: \\\"fortran\\\", ext: [\\\"f\\\", \\\"for\\\", \\\"f77\\\", \\\"f90\\\"]},\\n    {name: \\\"F#\\\", mime: \\\"text/x-fsharp\\\", mode: \\\"mllike\\\", ext: [\\\"fs\\\"], alias: [\\\"fsharp\\\"]},\\n    {name: \\\"Gas\\\", mime: \\\"text/x-gas\\\", mode: \\\"gas\\\", ext: [\\\"s\\\"]},\\n    {name: \\\"Gherkin\\\", mime: \\\"text/x-feature\\\", mode: \\\"gherkin\\\", ext: [\\\"feature\\\"]},\\n    {name: \\\"GitHub Flavored Markdown\\\", mime: \\\"text/x-gfm\\\", mode: \\\"gfm\\\", file: /^(readme|contributing|history).md$/i},\\n    {name: \\\"Go\\\", mime: \\\"text/x-go\\\", mode: \\\"go\\\", ext: [\\\"go\\\"]},\\n    {name: \\\"Groovy\\\", mime: \\\"text/x-groovy\\\", mode: \\\"groovy\\\", ext: [\\\"groovy\\\", \\\"gradle\\\"], file: /^Jenkinsfile$/},\\n    {name: \\\"HAML\\\", mime: \\\"text/x-haml\\\", mode: \\\"haml\\\", ext: [\\\"haml\\\"]},\\n    {name: \\\"Haskell\\\", mime: \\\"text/x-haskell\\\", mode: \\\"haskell\\\", ext: [\\\"hs\\\"]},\\n    {name: \\\"Haskell (Literate)\\\", mime: \\\"text/x-literate-haskell\\\", mode: \\\"haskell-literate\\\", ext: [\\\"lhs\\\"]},\\n    {name: \\\"Haxe\\\", mime: \\\"text/x-haxe\\\", mode: \\\"haxe\\\", ext: [\\\"hx\\\"]},\\n    {name: \\\"HXML\\\", mime: \\\"text/x-hxml\\\", mode: \\\"haxe\\\", ext: [\\\"hxml\\\"]},\\n    {name: \\\"ASP.NET\\\", mime: \\\"application/x-aspx\\\", mode: \\\"htmlembedded\\\", ext: [\\\"aspx\\\"], alias: [\\\"asp\\\", \\\"aspx\\\"]},\\n    {name: \\\"HTML\\\", mime: \\\"text/html\\\", mode: \\\"htmlmixed\\\", ext: [\\\"html\\\", \\\"htm\\\", \\\"handlebars\\\", \\\"hbs\\\"], alias: [\\\"xhtml\\\"]},\\n    {name: \\\"HTTP\\\", mime: \\\"message/http\\\", mode: \\\"http\\\"},\\n    {name: \\\"IDL\\\", mime: \\\"text/x-idl\\\", mode: \\\"idl\\\", ext: [\\\"pro\\\"]},\\n    {name: \\\"Pug\\\", mime: \\\"text/x-pug\\\", mode: \\\"pug\\\", ext: [\\\"jade\\\", \\\"pug\\\"], alias: [\\\"jade\\\"]},\\n    {name: \\\"Java\\\", mime: \\\"text/x-java\\\", mode: \\\"clike\\\", ext: [\\\"java\\\"]},\\n    {name: \\\"Java Server Pages\\\", mime: \\\"application/x-jsp\\\", mode: \\\"htmlembedded\\\", ext: [\\\"jsp\\\"], alias: [\\\"jsp\\\"]},\\n    {name: \\\"JavaScript\\\", mimes: [\\\"text/javascript\\\", \\\"text/ecmascript\\\", \\\"application/javascript\\\", \\\"application/x-javascript\\\", \\\"application/ecmascript\\\"],\\n     mode: \\\"javascript\\\", ext: [\\\"js\\\"], alias: [\\\"ecmascript\\\", \\\"js\\\", \\\"node\\\"]},\\n    {name: \\\"JSON\\\", mimes: [\\\"application/json\\\", \\\"application/x-json\\\"], mode: \\\"javascript\\\", ext: [\\\"json\\\", \\\"map\\\"], alias: [\\\"json5\\\"]},\\n    {name: \\\"JSON-LD\\\", mime: \\\"application/ld+json\\\", mode: \\\"javascript\\\", ext: [\\\"jsonld\\\"], alias: [\\\"jsonld\\\"]},\\n    {name: \\\"JSX\\\", mime: \\\"text/jsx\\\", mode: \\\"jsx\\\", ext: [\\\"jsx\\\"]},\\n    {name: \\\"Jinja2\\\", mime: \\\"null\\\", mode: \\\"jinja2\\\"},\\n    {name: \\\"Julia\\\", mime: \\\"text/x-julia\\\", mode: \\\"julia\\\", ext: [\\\"jl\\\"]},\\n    {name: \\\"Kotlin\\\", mime: \\\"text/x-kotlin\\\", mode: \\\"clike\\\", ext: [\\\"kt\\\"]},\\n    {name: \\\"LESS\\\", mime: \\\"text/x-less\\\", mode: \\\"css\\\", ext: [\\\"less\\\"]},\\n    {name: \\\"LiveScript\\\", mime: \\\"text/x-livescript\\\", mode: \\\"livescript\\\", ext: [\\\"ls\\\"], alias: [\\\"ls\\\"]},\\n    {name: \\\"Lua\\\", mime: \\\"text/x-lua\\\", mode: \\\"lua\\\", ext: [\\\"lua\\\"]},\\n    {name: \\\"Markdown\\\", mime: \\\"text/x-markdown\\\", mode: \\\"markdown\\\", ext: [\\\"markdown\\\", \\\"md\\\", \\\"mkd\\\"]},\\n    {name: \\\"mIRC\\\", mime: \\\"text/mirc\\\", mode: \\\"mirc\\\"},\\n    {name: \\\"MariaDB SQL\\\", mime: \\\"text/x-mariadb\\\", mode: \\\"sql\\\"},\\n    {name: \\\"Mathematica\\\", mime: \\\"text/x-mathematica\\\", mode: \\\"mathematica\\\", ext: [\\\"m\\\", \\\"nb\\\"]},\\n    {name: \\\"Modelica\\\", mime: \\\"text/x-modelica\\\", mode: \\\"modelica\\\", ext: [\\\"mo\\\"]},\\n    {name: \\\"MUMPS\\\", mime: \\\"text/x-mumps\\\", mode: \\\"mumps\\\", ext: [\\\"mps\\\"]},\\n    {name: \\\"MS SQL\\\", mime: \\\"text/x-mssql\\\", mode: \\\"sql\\\"},\\n    {name: \\\"mbox\\\", mime: \\\"application/mbox\\\", mode: \\\"mbox\\\", ext: [\\\"mbox\\\"]},\\n    {name: \\\"MySQL\\\", mime: \\\"text/x-mysql\\\", mode: \\\"sql\\\"},\\n    {name: \\\"Nginx\\\", mime: \\\"text/x-nginx-conf\\\", mode: \\\"nginx\\\", file: /nginx.*\\\\.conf$/i},\\n    {name: \\\"NSIS\\\", mime: \\\"text/x-nsis\\\", mode: \\\"nsis\\\", ext: [\\\"nsh\\\", \\\"nsi\\\"]},\\n    {name: \\\"NTriples\\\", mimes: [\\\"application/n-triples\\\", \\\"application/n-quads\\\", \\\"text/n-triples\\\"],\\n     mode: \\\"ntriples\\\", ext: [\\\"nt\\\", \\\"nq\\\"]},\\n    {name: \\\"Objective-C\\\", mime: \\\"text/x-objectivec\\\", mode: \\\"clike\\\", ext: [\\\"m\\\", \\\"mm\\\"], alias: [\\\"objective-c\\\", \\\"objc\\\"]},\\n    {name: \\\"OCaml\\\", mime: \\\"text/x-ocaml\\\", mode: \\\"mllike\\\", ext: [\\\"ml\\\", \\\"mli\\\", \\\"mll\\\", \\\"mly\\\"]},\\n    {name: \\\"Octave\\\", mime: \\\"text/x-octave\\\", mode: \\\"octave\\\", ext: [\\\"m\\\"]},\\n    {name: \\\"Oz\\\", mime: \\\"text/x-oz\\\", mode: \\\"oz\\\", ext: [\\\"oz\\\"]},\\n    {name: \\\"Pascal\\\", mime: \\\"text/x-pascal\\\", mode: \\\"pascal\\\", ext: [\\\"p\\\", \\\"pas\\\"]},\\n    {name: \\\"PEG.js\\\", mime: \\\"null\\\", mode: \\\"pegjs\\\", ext: [\\\"jsonld\\\"]},\\n    {name: \\\"Perl\\\", mime: \\\"text/x-perl\\\", mode: \\\"perl\\\", ext: [\\\"pl\\\", \\\"pm\\\"]},\\n    {name: \\\"PHP\\\", mimes: [\\\"text/x-php\\\", \\\"application/x-httpd-php\\\", \\\"application/x-httpd-php-open\\\"], mode: \\\"php\\\", ext: [\\\"php\\\", \\\"php3\\\", \\\"php4\\\", \\\"php5\\\", \\\"php7\\\", \\\"phtml\\\"]},\\n    {name: \\\"Pig\\\", mime: \\\"text/x-pig\\\", mode: \\\"pig\\\", ext: [\\\"pig\\\"]},\\n    {name: \\\"Plain Text\\\", mime: \\\"text/plain\\\", mode: \\\"null\\\", ext: [\\\"txt\\\", \\\"text\\\", \\\"conf\\\", \\\"def\\\", \\\"list\\\", \\\"log\\\"]},\\n    {name: \\\"PLSQL\\\", mime: \\\"text/x-plsql\\\", mode: \\\"sql\\\", ext: [\\\"pls\\\"]},\\n    {name: \\\"PowerShell\\\", mime: \\\"application/x-powershell\\\", mode: \\\"powershell\\\", ext: [\\\"ps1\\\", \\\"psd1\\\", \\\"psm1\\\"]},\\n    {name: \\\"Properties files\\\", mime: \\\"text/x-properties\\\", mode: \\\"properties\\\", ext: [\\\"properties\\\", \\\"ini\\\", \\\"in\\\"], alias: [\\\"ini\\\", \\\"properties\\\"]},\\n    {name: \\\"ProtoBuf\\\", mime: \\\"text/x-protobuf\\\", mode: \\\"protobuf\\\", ext: [\\\"proto\\\"]},\\n    {name: \\\"Python\\\", mime: \\\"text/x-python\\\", mode: \\\"python\\\", ext: [\\\"BUILD\\\", \\\"bzl\\\", \\\"py\\\", \\\"pyw\\\"], file: /^(BUCK|BUILD)$/},\\n    {name: \\\"Puppet\\\", mime: \\\"text/x-puppet\\\", mode: \\\"puppet\\\", ext: [\\\"pp\\\"]},\\n    {name: \\\"Q\\\", mime: \\\"text/x-q\\\", mode: \\\"q\\\", ext: [\\\"q\\\"]},\\n    {name: \\\"R\\\", mime: \\\"text/x-rsrc\\\", mode: \\\"r\\\", ext: [\\\"r\\\", \\\"R\\\"], alias: [\\\"rscript\\\"]},\\n    {name: \\\"reStructuredText\\\", mime: \\\"text/x-rst\\\", mode: \\\"rst\\\", ext: [\\\"rst\\\"], alias: [\\\"rst\\\"]},\\n    {name: \\\"RPM Changes\\\", mime: \\\"text/x-rpm-changes\\\", mode: \\\"rpm\\\"},\\n    {name: \\\"RPM Spec\\\", mime: \\\"text/x-rpm-spec\\\", mode: \\\"rpm\\\", ext: [\\\"spec\\\"]},\\n    {name: \\\"Ruby\\\", mime: \\\"text/x-ruby\\\", mode: \\\"ruby\\\", ext: [\\\"rb\\\"], alias: [\\\"jruby\\\", \\\"macruby\\\", \\\"rake\\\", \\\"rb\\\", \\\"rbx\\\"]},\\n    {name: \\\"Rust\\\", mime: \\\"text/x-rustsrc\\\", mode: \\\"rust\\\", ext: [\\\"rs\\\"]},\\n    {name: \\\"SAS\\\", mime: \\\"text/x-sas\\\", mode: \\\"sas\\\", ext: [\\\"sas\\\"]},\\n    {name: \\\"Sass\\\", mime: \\\"text/x-sass\\\", mode: \\\"sass\\\", ext: [\\\"sass\\\"]},\\n    {name: \\\"Scala\\\", mime: \\\"text/x-scala\\\", mode: \\\"clike\\\", ext: [\\\"scala\\\"]},\\n    {name: \\\"Scheme\\\", mime: \\\"text/x-scheme\\\", mode: \\\"scheme\\\", ext: [\\\"scm\\\", \\\"ss\\\"]},\\n    {name: \\\"SCSS\\\", mime: \\\"text/x-scss\\\", mode: \\\"css\\\", ext: [\\\"scss\\\"]},\\n    {name: \\\"Shell\\\", mimes: [\\\"text/x-sh\\\", \\\"application/x-sh\\\"], mode: \\\"shell\\\", ext: [\\\"sh\\\", \\\"ksh\\\", \\\"bash\\\"], alias: [\\\"bash\\\", \\\"sh\\\", \\\"zsh\\\"], file: /^PKGBUILD$/},\\n    {name: \\\"Sieve\\\", mime: \\\"application/sieve\\\", mode: \\\"sieve\\\", ext: [\\\"siv\\\", \\\"sieve\\\"]},\\n    {name: \\\"Slim\\\", mimes: [\\\"text/x-slim\\\", \\\"application/x-slim\\\"], mode: \\\"slim\\\", ext: [\\\"slim\\\"]},\\n    {name: \\\"Smalltalk\\\", mime: \\\"text/x-stsrc\\\", mode: \\\"smalltalk\\\", ext: [\\\"st\\\"]},\\n    {name: \\\"Smarty\\\", mime: \\\"text/x-smarty\\\", mode: \\\"smarty\\\", ext: [\\\"tpl\\\"]},\\n    {name: \\\"Solr\\\", mime: \\\"text/x-solr\\\", mode: \\\"solr\\\"},\\n    {name: \\\"SML\\\", mime: \\\"text/x-sml\\\", mode: \\\"mllike\\\", ext: [\\\"sml\\\", \\\"sig\\\", \\\"fun\\\", \\\"smackspec\\\"]},\\n    {name: \\\"Soy\\\", mime: \\\"text/x-soy\\\", mode: \\\"soy\\\", ext: [\\\"soy\\\"], alias: [\\\"closure template\\\"]},\\n    {name: \\\"SPARQL\\\", mime: \\\"application/sparql-query\\\", mode: \\\"sparql\\\", ext: [\\\"rq\\\", \\\"sparql\\\"], alias: [\\\"sparul\\\"]},\\n    {name: \\\"Spreadsheet\\\", mime: \\\"text/x-spreadsheet\\\", mode: \\\"spreadsheet\\\", alias: [\\\"excel\\\", \\\"formula\\\"]},\\n    {name: \\\"SQL\\\", mime: \\\"text/x-sql\\\", mode: \\\"sql\\\", ext: [\\\"sql\\\"]},\\n    {name: \\\"SQLite\\\", mime: \\\"text/x-sqlite\\\", mode: \\\"sql\\\"},\\n    {name: \\\"Squirrel\\\", mime: \\\"text/x-squirrel\\\", mode: \\\"clike\\\", ext: [\\\"nut\\\"]},\\n    {name: \\\"Stylus\\\", mime: \\\"text/x-styl\\\", mode: \\\"stylus\\\", ext: [\\\"styl\\\"]},\\n    {name: \\\"Swift\\\", mime: \\\"text/x-swift\\\", mode: \\\"swift\\\", ext: [\\\"swift\\\"]},\\n    {name: \\\"sTeX\\\", mime: \\\"text/x-stex\\\", mode: \\\"stex\\\"},\\n    {name: \\\"LaTeX\\\", mime: \\\"text/x-latex\\\", mode: \\\"stex\\\", ext: [\\\"text\\\", \\\"ltx\\\", \\\"tex\\\"], alias: [\\\"tex\\\"]},\\n    {name: \\\"SystemVerilog\\\", mime: \\\"text/x-systemverilog\\\", mode: \\\"verilog\\\", ext: [\\\"v\\\", \\\"sv\\\", \\\"svh\\\"]},\\n    {name: \\\"Tcl\\\", mime: \\\"text/x-tcl\\\", mode: \\\"tcl\\\", ext: [\\\"tcl\\\"]},\\n    {name: \\\"Textile\\\", mime: \\\"text/x-textile\\\", mode: \\\"textile\\\", ext: [\\\"textile\\\"]},\\n    {name: \\\"TiddlyWiki \\\", mime: \\\"text/x-tiddlywiki\\\", mode: \\\"tiddlywiki\\\"},\\n    {name: \\\"Tiki wiki\\\", mime: \\\"text/tiki\\\", mode: \\\"tiki\\\"},\\n    {name: \\\"TOML\\\", mime: \\\"text/x-toml\\\", mode: \\\"toml\\\", ext: [\\\"toml\\\"]},\\n    {name: \\\"Tornado\\\", mime: \\\"text/x-tornado\\\", mode: \\\"tornado\\\"},\\n    {name: \\\"troff\\\", mime: \\\"text/troff\\\", mode: \\\"troff\\\", ext: [\\\"1\\\", \\\"2\\\", \\\"3\\\", \\\"4\\\", \\\"5\\\", \\\"6\\\", \\\"7\\\", \\\"8\\\", \\\"9\\\"]},\\n    {name: \\\"TTCN\\\", mime: \\\"text/x-ttcn\\\", mode: \\\"ttcn\\\", ext: [\\\"ttcn\\\", \\\"ttcn3\\\", \\\"ttcnpp\\\"]},\\n    {name: \\\"TTCN_CFG\\\", mime: \\\"text/x-ttcn-cfg\\\", mode: \\\"ttcn-cfg\\\", ext: [\\\"cfg\\\"]},\\n    {name: \\\"Turtle\\\", mime: \\\"text/turtle\\\", mode: \\\"turtle\\\", ext: [\\\"ttl\\\"]},\\n    {name: \\\"TypeScript\\\", mime: \\\"application/typescript\\\", mode: \\\"javascript\\\", ext: [\\\"ts\\\"], alias: [\\\"ts\\\"]},\\n    {name: \\\"TypeScript-JSX\\\", mime: \\\"text/typescript-jsx\\\", mode: \\\"jsx\\\", ext: [\\\"tsx\\\"], alias: [\\\"tsx\\\"]},\\n    {name: \\\"Twig\\\", mime: \\\"text/x-twig\\\", mode: \\\"twig\\\"},\\n    {name: \\\"Web IDL\\\", mime: \\\"text/x-webidl\\\", mode: \\\"webidl\\\", ext: [\\\"webidl\\\"]},\\n    {name: \\\"VB.NET\\\", mime: \\\"text/x-vb\\\", mode: \\\"vb\\\", ext: [\\\"vb\\\"]},\\n    {name: \\\"VBScript\\\", mime: \\\"text/vbscript\\\", mode: \\\"vbscript\\\", ext: [\\\"vbs\\\"]},\\n    {name: \\\"Velocity\\\", mime: \\\"text/velocity\\\", mode: \\\"velocity\\\", ext: [\\\"vtl\\\"]},\\n    {name: \\\"Verilog\\\", mime: \\\"text/x-verilog\\\", mode: \\\"verilog\\\", ext: [\\\"v\\\"]},\\n    {name: \\\"VHDL\\\", mime: \\\"text/x-vhdl\\\", mode: \\\"vhdl\\\", ext: [\\\"vhd\\\", \\\"vhdl\\\"]},\\n    {name: \\\"Vue.js Component\\\", mimes: [\\\"script/x-vue\\\", \\\"text/x-vue\\\"], mode: \\\"vue\\\", ext: [\\\"vue\\\"]},\\n    {name: \\\"XML\\\", mimes: [\\\"application/xml\\\", \\\"text/xml\\\"], mode: \\\"xml\\\", ext: [\\\"xml\\\", \\\"xsl\\\", \\\"xsd\\\", \\\"svg\\\"], alias: [\\\"rss\\\", \\\"wsdl\\\", \\\"xsd\\\"]},\\n    {name: \\\"XQuery\\\", mime: \\\"application/xquery\\\", mode: \\\"xquery\\\", ext: [\\\"xy\\\", \\\"xquery\\\"]},\\n    {name: \\\"Yacas\\\", mime: \\\"text/x-yacas\\\", mode: \\\"yacas\\\", ext: [\\\"ys\\\"]},\\n    {name: \\\"YAML\\\", mimes: [\\\"text/x-yaml\\\", \\\"text/yaml\\\"], mode: \\\"yaml\\\", ext: [\\\"yaml\\\", \\\"yml\\\"], alias: [\\\"yml\\\"]},\\n    {name: \\\"Z80\\\", mime: \\\"text/x-z80\\\", mode: \\\"z80\\\", ext: [\\\"z80\\\"]},\\n    {name: \\\"mscgen\\\", mime: \\\"text/x-mscgen\\\", mode: \\\"mscgen\\\", ext: [\\\"mscgen\\\", \\\"mscin\\\", \\\"msc\\\"]},\\n    {name: \\\"xu\\\", mime: \\\"text/x-xu\\\", mode: \\\"mscgen\\\", ext: [\\\"xu\\\"]},\\n    {name: \\\"msgenny\\\", mime: \\\"text/x-msgenny\\\", mode: \\\"mscgen\\\", ext: [\\\"msgenny\\\"]}\\n  ];\\n  // Ensure all modes have a mime property for backwards compatibility\\n  for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\\n    var info = CodeMirror.modeInfo[i];\\n    if (info.mimes) info.mime = info.mimes[0];\\n  }\\n\\n  CodeMirror.findModeByMIME = function(mime) {\\n    mime = mime.toLowerCase();\\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\\n      var info = CodeMirror.modeInfo[i];\\n      if (info.mime == mime) return info;\\n      if (info.mimes) for (var j = 0; j < info.mimes.length; j++)\\n        if (info.mimes[j] == mime) return info;\\n    }\\n    if (/\\\\+xml$/.test(mime)) return CodeMirror.findModeByMIME(\\\"application/xml\\\")\\n    if (/\\\\+json$/.test(mime)) return CodeMirror.findModeByMIME(\\\"application/json\\\")\\n  };\\n\\n  CodeMirror.findModeByExtension = function(ext) {\\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\\n      var info = CodeMirror.modeInfo[i];\\n      if (info.ext) for (var j = 0; j < info.ext.length; j++)\\n        if (info.ext[j] == ext) return info;\\n    }\\n  };\\n\\n  CodeMirror.findModeByFileName = function(filename) {\\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\\n      var info = CodeMirror.modeInfo[i];\\n      if (info.file && info.file.test(filename)) return info;\\n    }\\n    var dot = filename.lastIndexOf(\\\".\\\");\\n    var ext = dot > -1 && filename.substring(dot + 1, filename.length);\\n    if (ext) return CodeMirror.findModeByExtension(ext);\\n  };\\n\\n  CodeMirror.findModeByName = function(name) {\\n    name = name.toLowerCase();\\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\\n      var info = CodeMirror.modeInfo[i];\\n      if (info.name.toLowerCase() == name) return info;\\n      if (info.alias) for (var j = 0; j < info.alias.length; j++)\\n        if (info.alias[j].toLowerCase() == name) return info;\\n    }\\n  };\\n});\\n\"]}","code":"(window[\"webpackJsonp\"]=window[\"webpackJsonp\"]||[]).push([[\"chunk-2985c7b1\"],{\"0e54\":function(e,t,n){(function(t){(function(t){\"use strict\";var n={newline:/^\\n+/,code:/^( {4}[^\\n]+\\n*)+/,fences:x,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,heading:/^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,nptable:x,blockquote:/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,list:/^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,html:\"^ {0,3}(?:<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)|comment[^\\\\n]*(\\\\n+|$)|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*|<![A-Z][\\\\s\\\\S]*?>\\\\n*|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$))\",def:/^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,table:x,lheading:/^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,paragraph:/^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,text:/^[^\\n]+/};function i(e){this.tokens=[],this.tokens.links=Object.create(null),this.options=e||w.defaults,this.rules=n.normal,this.options.pedantic?this.rules=n.pedantic:this.options.gfm&&(this.options.tables?this.rules=n.tables:this.rules=n.gfm)}n._label=/(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/,n._title=/(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/,n.def=u(n.def).replace(\"label\",n._label).replace(\"title\",n._title).getRegex(),n.bullet=/(?:[*+-]|\\d{1,9}\\.)/,n.item=/^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/,n.item=u(n.item,\"gm\").replace(/bull/g,n.bullet).getRegex(),n.list=u(n.list).replace(/bull/g,n.bullet).replace(\"hr\",\"\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))\").replace(\"def\",\"\\\\n+(?=\"+n.def.source+\")\").getRegex(),n._tag=\"address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul\",n._comment=/<!--(?!-?>)[\\s\\S]*?-->/,n.html=u(n.html,\"i\").replace(\"comment\",n._comment).replace(\"tag\",n._tag).replace(\"attribute\",/ +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex(),n.paragraph=u(n.paragraph).replace(\"hr\",n.hr).replace(\"heading\",n.heading).replace(\"lheading\",n.lheading).replace(\"tag\",n._tag).getRegex(),n.blockquote=u(n.blockquote).replace(\"paragraph\",n.paragraph).getRegex(),n.normal=v({},n),n.gfm=v({},n.normal,{fences:/^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/}),n.gfm.paragraph=u(n.paragraph).replace(\"(?!\",\"(?!\"+n.gfm.fences.source.replace(\"\\\\1\",\"\\\\2\")+\"|\"+n.list.source.replace(\"\\\\1\",\"\\\\3\")+\"|\").getRegex(),n.tables=v({},n.gfm,{nptable:/^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,table:/^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/}),n.pedantic=v({},n.normal,{html:u(\"^ *(?:comment *(?:\\\\n|\\\\s*$)|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)|<tag(?:\\\"[^\\\"]*\\\"|'[^']*'|\\\\s[^'\\\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))\").replace(\"comment\",n._comment).replace(/tag/g,\"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b\").getRegex(),def:/^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/}),i.rules=n,i.lex=function(e,t){var n=new i(t);return n.lex(e)},i.prototype.lex=function(e){return e=e.replace(/\\r\\n|\\r/g,\"\\n\").replace(/\\t/g,\"    \").replace(/\\u00a0/g,\" \").replace(/\\u2424/g,\"\\n\"),this.token(e,!0)},i.prototype.token=function(e,t){var i,r,a,o,s,l,c,m,d,u,p,h,f,g,x,v;e=e.replace(/^ +$/gm,\"\");while(e)if((a=this.rules.newline.exec(e))&&(e=e.substring(a[0].length),a[0].length>1&&this.tokens.push({type:\"space\"})),a=this.rules.code.exec(e))e=e.substring(a[0].length),a=a[0].replace(/^ {4}/gm,\"\"),this.tokens.push({type:\"code\",text:this.options.pedantic?a:b(a,\"\\n\")});else if(a=this.rules.fences.exec(e))e=e.substring(a[0].length),this.tokens.push({type:\"code\",lang:a[2]?a[2].trim():a[2],text:a[3]||\"\"});else if(a=this.rules.heading.exec(e))e=e.substring(a[0].length),this.tokens.push({type:\"heading\",depth:a[1].length,text:a[2]});else if((a=this.rules.nptable.exec(e))&&(l={type:\"table\",header:k(a[1].replace(/^ *| *\\| *$/g,\"\")),align:a[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:a[3]?a[3].replace(/\\n$/,\"\").split(\"\\n\"):[]},l.header.length===l.align.length)){for(e=e.substring(a[0].length),p=0;p<l.align.length;p++)/^ *-+: *$/.test(l.align[p])?l.align[p]=\"right\":/^ *:-+: *$/.test(l.align[p])?l.align[p]=\"center\":/^ *:-+ *$/.test(l.align[p])?l.align[p]=\"left\":l.align[p]=null;for(p=0;p<l.cells.length;p++)l.cells[p]=k(l.cells[p],l.header.length);this.tokens.push(l)}else if(a=this.rules.hr.exec(e))e=e.substring(a[0].length),this.tokens.push({type:\"hr\"});else if(a=this.rules.blockquote.exec(e))e=e.substring(a[0].length),this.tokens.push({type:\"blockquote_start\"}),a=a[0].replace(/^ *> ?/gm,\"\"),this.token(a,t),this.tokens.push({type:\"blockquote_end\"});else if(a=this.rules.list.exec(e)){for(e=e.substring(a[0].length),o=a[2],g=o.length>1,c={type:\"list_start\",ordered:g,start:g?+o:\"\",loose:!1},this.tokens.push(c),a=a[0].match(this.rules.item),m=[],i=!1,f=a.length,p=0;p<f;p++)l=a[p],u=l.length,l=l.replace(/^ *([*+-]|\\d+\\.) */,\"\"),~l.indexOf(\"\\n \")&&(u-=l.length,l=this.options.pedantic?l.replace(/^ {1,4}/gm,\"\"):l.replace(new RegExp(\"^ {1,\"+u+\"}\",\"gm\"),\"\")),p!==f-1&&(s=n.bullet.exec(a[p+1])[0],(o.length>1?1===s.length:s.length>1||this.options.smartLists&&s!==o)&&(e=a.slice(p+1).join(\"\\n\")+e,p=f-1)),r=i||/\\n\\n(?!\\s*$)/.test(l),p!==f-1&&(i=\"\\n\"===l.charAt(l.length-1),r||(r=i)),r&&(c.loose=!0),x=/^\\[[ xX]\\] /.test(l),v=void 0,x&&(v=\" \"!==l[1],l=l.replace(/^\\[[ xX]\\] +/,\"\")),d={type:\"list_item_start\",task:x,checked:v,loose:r},m.push(d),this.tokens.push(d),this.token(l,!1),this.tokens.push({type:\"list_item_end\"});if(c.loose)for(f=m.length,p=0;p<f;p++)m[p].loose=!0;this.tokens.push({type:\"list_end\"})}else if(a=this.rules.html.exec(e))e=e.substring(a[0].length),this.tokens.push({type:this.options.sanitize?\"paragraph\":\"html\",pre:!this.options.sanitizer&&(\"pre\"===a[1]||\"script\"===a[1]||\"style\"===a[1]),text:a[0]});else if(t&&(a=this.rules.def.exec(e)))e=e.substring(a[0].length),a[3]&&(a[3]=a[3].substring(1,a[3].length-1)),h=a[1].toLowerCase().replace(/\\s+/g,\" \"),this.tokens.links[h]||(this.tokens.links[h]={href:a[2],title:a[3]});else if((a=this.rules.table.exec(e))&&(l={type:\"table\",header:k(a[1].replace(/^ *| *\\| *$/g,\"\")),align:a[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:a[3]?a[3].replace(/\\n$/,\"\").split(\"\\n\"):[]},l.header.length===l.align.length)){for(e=e.substring(a[0].length),p=0;p<l.align.length;p++)/^ *-+: *$/.test(l.align[p])?l.align[p]=\"right\":/^ *:-+: *$/.test(l.align[p])?l.align[p]=\"center\":/^ *:-+ *$/.test(l.align[p])?l.align[p]=\"left\":l.align[p]=null;for(p=0;p<l.cells.length;p++)l.cells[p]=k(l.cells[p].replace(/^ *\\| *| *\\| *$/g,\"\"),l.header.length);this.tokens.push(l)}else if(a=this.rules.lheading.exec(e))e=e.substring(a[0].length),this.tokens.push({type:\"heading\",depth:\"=\"===a[2]?1:2,text:a[1]});else if(t&&(a=this.rules.paragraph.exec(e)))e=e.substring(a[0].length),this.tokens.push({type:\"paragraph\",text:\"\\n\"===a[1].charAt(a[1].length-1)?a[1].slice(0,-1):a[1]});else if(a=this.rules.text.exec(e))e=e.substring(a[0].length),this.tokens.push({type:\"text\",text:a[0]});else if(e)throw new Error(\"Infinite loop on byte: \"+e.charCodeAt(0));return this.tokens};var r={escape:/^\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\]\\\\^_`{|}~])/,autolink:/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,url:x,tag:\"^comment|^</[a-zA-Z][\\\\w:-]*\\\\s*>|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>|^<\\\\?[\\\\s\\\\S]*?\\\\?>|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\",link:/^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,reflink:/^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,nolink:/^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,strong:/^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,em:/^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,code:/^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,br:/^( {2,}|\\\\)\\n(?!\\s*$)/,del:x,text:/^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/};function a(e,t){if(this.options=t||w.defaults,this.links=e,this.rules=r.normal,this.renderer=this.options.renderer||new o,this.renderer.options=this.options,!this.links)throw new Error(\"Tokens array requires a `links` property.\");this.options.pedantic?this.rules=r.pedantic:this.options.gfm&&(this.options.breaks?this.rules=r.breaks:this.rules=r.gfm)}function o(e){this.options=e||w.defaults}function s(){}function l(e){this.tokens=[],this.token=null,this.options=e||w.defaults,this.options.renderer=this.options.renderer||new o,this.renderer=this.options.renderer,this.renderer.options=this.options,this.slugger=new c}function c(){this.seen={}}function m(e,t){if(t){if(m.escapeTest.test(e))return e.replace(m.escapeReplace,function(e){return m.replacements[e]})}else if(m.escapeTestNoEncode.test(e))return e.replace(m.escapeReplaceNoEncode,function(e){return m.replacements[e]});return e}function d(e){return e.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/gi,function(e,t){return t=t.toLowerCase(),\"colon\"===t?\":\":\"#\"===t.charAt(0)?\"x\"===t.charAt(1)?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1)):\"\"})}function u(e,t){return e=e.source||e,t=t||\"\",{replace:function(t,n){return n=n.source||n,n=n.replace(/(^|[^\\[])\\^/g,\"$1\"),e=e.replace(t,n),this},getRegex:function(){return new RegExp(e,t)}}}function p(e,t,n){if(e){try{var i=decodeURIComponent(d(n)).replace(/[^\\w:]/g,\"\").toLowerCase()}catch(r){return null}if(0===i.indexOf(\"javascript:\")||0===i.indexOf(\"vbscript:\")||0===i.indexOf(\"data:\"))return null}t&&!g.test(n)&&(n=h(t,n));try{n=encodeURI(n).replace(/%25/g,\"%\")}catch(r){return null}return n}function h(e,t){return f[\" \"+e]||(/^[^:]+:\\/*[^\\/]*$/.test(e)?f[\" \"+e]=e+\"/\":f[\" \"+e]=b(e,\"/\",!0)),e=f[\" \"+e],\"//\"===t.slice(0,2)?e.replace(/:[\\s\\S]*/,\":\")+t:\"/\"===t.charAt(0)?e.replace(/(:\\/*[^\\/]*)[\\s\\S]*/,\"$1\")+t:e+t}r._punctuation=\"!\\\"#$%&'()*+,\\\\-./:;<=>?@\\\\[^_{|}~\",r.em=u(r.em).replace(/punctuation/g,r._punctuation).getRegex(),r._escapes=/\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\]\\\\^_`{|}~])/g,r._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,r._email=/[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,r.autolink=u(r.autolink).replace(\"scheme\",r._scheme).replace(\"email\",r._email).getRegex(),r._attribute=/\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/,r.tag=u(r.tag).replace(\"comment\",n._comment).replace(\"attribute\",r._attribute).getRegex(),r._label=/(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|`(?!`)|[^\\[\\]\\\\`])*?/,r._href=/\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*)/,r._title=/\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/,r.link=u(r.link).replace(\"label\",r._label).replace(\"href\",r._href).replace(\"title\",r._title).getRegex(),r.reflink=u(r.reflink).replace(\"label\",r._label).getRegex(),r.normal=v({},r),r.pedantic=v({},r.normal,{strong:/^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,em:/^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,link:u(/^!?\\[(label)\\]\\((.*?)\\)/).replace(\"label\",r._label).getRegex(),reflink:u(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace(\"label\",r._label).getRegex()}),r.gfm=v({},r.normal,{escape:u(r.escape).replace(\"])\",\"~|])\").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~+(?=\\S)([\\s\\S]*?\\S)~+/,text:/^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/}),r.gfm.url=u(r.gfm.url,\"i\").replace(\"email\",r.gfm._extended_email).getRegex(),r.breaks=v({},r.gfm,{br:u(r.br).replace(\"{2,}\",\"*\").getRegex(),text:u(r.gfm.text).replace(/\\{2,\\}/g,\"*\").getRegex()}),a.rules=r,a.output=function(e,t,n){var i=new a(t,n);return i.output(e)},a.prototype.output=function(e){var t,n,i,r,o,s,l=\"\";while(e)if(o=this.rules.escape.exec(e))e=e.substring(o[0].length),l+=m(o[1]);else if(o=this.rules.tag.exec(e))!this.inLink&&/^<a /i.test(o[0])?this.inLink=!0:this.inLink&&/^<\\/a>/i.test(o[0])&&(this.inLink=!1),!this.inRawBlock&&/^<(pre|code|kbd|script)(\\s|>)/i.test(o[0])?this.inRawBlock=!0:this.inRawBlock&&/^<\\/(pre|code|kbd|script)(\\s|>)/i.test(o[0])&&(this.inRawBlock=!1),e=e.substring(o[0].length),l+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(o[0]):m(o[0]):o[0];else if(o=this.rules.link.exec(e)){var c=y(o[2],\"()\");if(c>-1){var d=o[0].length-(o[2].length-c)-(o[3]||\"\").length;o[2]=o[2].substring(0,c),o[0]=o[0].substring(0,d).trim(),o[3]=\"\"}e=e.substring(o[0].length),this.inLink=!0,i=o[2],this.options.pedantic?(t=/^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(i),t?(i=t[1],r=t[3]):r=\"\"):r=o[3]?o[3].slice(1,-1):\"\",i=i.trim().replace(/^<([\\s\\S]*)>$/,\"$1\"),l+=this.outputLink(o,{href:a.escapes(i),title:a.escapes(r)}),this.inLink=!1}else if((o=this.rules.reflink.exec(e))||(o=this.rules.nolink.exec(e))){if(e=e.substring(o[0].length),t=(o[2]||o[1]).replace(/\\s+/g,\" \"),t=this.links[t.toLowerCase()],!t||!t.href){l+=o[0].charAt(0),e=o[0].substring(1)+e;continue}this.inLink=!0,l+=this.outputLink(o,t),this.inLink=!1}else if(o=this.rules.strong.exec(e))e=e.substring(o[0].length),l+=this.renderer.strong(this.output(o[4]||o[3]||o[2]||o[1]));else if(o=this.rules.em.exec(e))e=e.substring(o[0].length),l+=this.renderer.em(this.output(o[6]||o[5]||o[4]||o[3]||o[2]||o[1]));else if(o=this.rules.code.exec(e))e=e.substring(o[0].length),l+=this.renderer.codespan(m(o[2].trim(),!0));else if(o=this.rules.br.exec(e))e=e.substring(o[0].length),l+=this.renderer.br();else if(o=this.rules.del.exec(e))e=e.substring(o[0].length),l+=this.renderer.del(this.output(o[1]));else if(o=this.rules.autolink.exec(e))e=e.substring(o[0].length),\"@\"===o[2]?(n=m(this.mangle(o[1])),i=\"mailto:\"+n):(n=m(o[1]),i=n),l+=this.renderer.link(i,null,n);else if(this.inLink||!(o=this.rules.url.exec(e))){if(o=this.rules.text.exec(e))e=e.substring(o[0].length),this.inRawBlock?l+=this.renderer.text(o[0]):l+=this.renderer.text(m(this.smartypants(o[0])));else if(e)throw new Error(\"Infinite loop on byte: \"+e.charCodeAt(0))}else{if(\"@\"===o[2])n=m(o[0]),i=\"mailto:\"+n;else{do{s=o[0],o[0]=this.rules._backpedal.exec(o[0])[0]}while(s!==o[0]);n=m(o[0]),i=\"www.\"===o[1]?\"http://\"+n:n}e=e.substring(o[0].length),l+=this.renderer.link(i,null,n)}return l},a.escapes=function(e){return e?e.replace(a.rules._escapes,\"$1\"):e},a.prototype.outputLink=function(e,t){var n=t.href,i=t.title?m(t.title):null;return\"!\"!==e[0].charAt(0)?this.renderer.link(n,i,this.output(e[1])):this.renderer.image(n,i,m(e[1]))},a.prototype.smartypants=function(e){return this.options.smartypants?e.replace(/---/g,\"—\").replace(/--/g,\"–\").replace(/(^|[-\\u2014\\/(\\[{\"\\s])'/g,\"$1‘\").replace(/'/g,\"’\").replace(/(^|[-\\u2014\\/(\\[{\\u2018\\s])\"/g,\"$1“\").replace(/\"/g,\"”\").replace(/\\.{3}/g,\"…\"):e},a.prototype.mangle=function(e){if(!this.options.mangle)return e;for(var t,n=\"\",i=e.length,r=0;r<i;r++)t=e.charCodeAt(r),Math.random()>.5&&(t=\"x\"+t.toString(16)),n+=\"&#\"+t+\";\";return n},o.prototype.code=function(e,t,n){var i=(t||\"\").match(/\\S*/)[0];if(this.options.highlight){var r=this.options.highlight(e,i);null!=r&&r!==e&&(n=!0,e=r)}return i?'<pre><code class=\"'+this.options.langPrefix+m(i,!0)+'\">'+(n?e:m(e,!0))+\"</code></pre>\\n\":\"<pre><code>\"+(n?e:m(e,!0))+\"</code></pre>\"},o.prototype.blockquote=function(e){return\"<blockquote>\\n\"+e+\"</blockquote>\\n\"},o.prototype.html=function(e){return e},o.prototype.heading=function(e,t,n,i){return this.options.headerIds?\"<h\"+t+' id=\"'+this.options.headerPrefix+i.slug(n)+'\">'+e+\"</h\"+t+\">\\n\":\"<h\"+t+\">\"+e+\"</h\"+t+\">\\n\"},o.prototype.hr=function(){return this.options.xhtml?\"<hr/>\\n\":\"<hr>\\n\"},o.prototype.list=function(e,t,n){var i=t?\"ol\":\"ul\",r=t&&1!==n?' start=\"'+n+'\"':\"\";return\"<\"+i+r+\">\\n\"+e+\"</\"+i+\">\\n\"},o.prototype.listitem=function(e){return\"<li>\"+e+\"</li>\\n\"},o.prototype.checkbox=function(e){return\"<input \"+(e?'checked=\"\" ':\"\")+'disabled=\"\" type=\"checkbox\"'+(this.options.xhtml?\" /\":\"\")+\"> \"},o.prototype.paragraph=function(e){return\"<p>\"+e+\"</p>\\n\"},o.prototype.table=function(e,t){return t&&(t=\"<tbody>\"+t+\"</tbody>\"),\"<table>\\n<thead>\\n\"+e+\"</thead>\\n\"+t+\"</table>\\n\"},o.prototype.tablerow=function(e){return\"<tr>\\n\"+e+\"</tr>\\n\"},o.prototype.tablecell=function(e,t){var n=t.header?\"th\":\"td\",i=t.align?\"<\"+n+' align=\"'+t.align+'\">':\"<\"+n+\">\";return i+e+\"</\"+n+\">\\n\"},o.prototype.strong=function(e){return\"<strong>\"+e+\"</strong>\"},o.prototype.em=function(e){return\"<em>\"+e+\"</em>\"},o.prototype.codespan=function(e){return\"<code>\"+e+\"</code>\"},o.prototype.br=function(){return this.options.xhtml?\"<br/>\":\"<br>\"},o.prototype.del=function(e){return\"<del>\"+e+\"</del>\"},o.prototype.link=function(e,t,n){if(e=p(this.options.sanitize,this.options.baseUrl,e),null===e)return n;var i='<a href=\"'+m(e)+'\"';return t&&(i+=' title=\"'+t+'\"'),i+=\">\"+n+\"</a>\",i},o.prototype.image=function(e,t,n){if(e=p(this.options.sanitize,this.options.baseUrl,e),null===e)return n;var i='<img src=\"'+e+'\" alt=\"'+n+'\"';return t&&(i+=' title=\"'+t+'\"'),i+=this.options.xhtml?\"/>\":\">\",i},o.prototype.text=function(e){return e},s.prototype.strong=s.prototype.em=s.prototype.codespan=s.prototype.del=s.prototype.text=function(e){return e},s.prototype.link=s.prototype.image=function(e,t,n){return\"\"+n},s.prototype.br=function(){return\"\"},l.parse=function(e,t){var n=new l(t);return n.parse(e)},l.prototype.parse=function(e){this.inline=new a(e.links,this.options),this.inlineText=new a(e.links,v({},this.options,{renderer:new s})),this.tokens=e.reverse();var t=\"\";while(this.next())t+=this.tok();return t},l.prototype.next=function(){return this.token=this.tokens.pop()},l.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},l.prototype.parseText=function(){var e=this.token.text;while(\"text\"===this.peek().type)e+=\"\\n\"+this.next().text;return this.inline.output(e)},l.prototype.tok=function(){switch(this.token.type){case\"space\":return\"\";case\"hr\":return this.renderer.hr();case\"heading\":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,d(this.inlineText.output(this.token.text)),this.slugger);case\"code\":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case\"table\":var e,t,n,i,r=\"\",a=\"\";for(n=\"\",e=0;e<this.token.header.length;e++)n+=this.renderer.tablecell(this.inline.output(this.token.header[e]),{header:!0,align:this.token.align[e]});for(r+=this.renderer.tablerow(n),e=0;e<this.token.cells.length;e++){for(t=this.token.cells[e],n=\"\",i=0;i<t.length;i++)n+=this.renderer.tablecell(this.inline.output(t[i]),{header:!1,align:this.token.align[i]});a+=this.renderer.tablerow(n)}return this.renderer.table(r,a);case\"blockquote_start\":a=\"\";while(\"blockquote_end\"!==this.next().type)a+=this.tok();return this.renderer.blockquote(a);case\"list_start\":a=\"\";var o=this.token.ordered,s=this.token.start;while(\"list_end\"!==this.next().type)a+=this.tok();return this.renderer.list(a,o,s);case\"list_item_start\":a=\"\";var l=this.token.loose,c=this.token.checked,m=this.token.task;this.token.task&&(a+=this.renderer.checkbox(c));while(\"list_item_end\"!==this.next().type)a+=l||\"text\"!==this.token.type?this.tok():this.parseText();return this.renderer.listitem(a,m,c);case\"html\":return this.renderer.html(this.token.text);case\"paragraph\":return this.renderer.paragraph(this.inline.output(this.token.text));case\"text\":return this.renderer.paragraph(this.parseText());default:var u='Token with \"'+this.token.type+'\" type was not found.';if(!this.options.silent)throw new Error(u);console.log(u)}},c.prototype.slug=function(e){var t=e.toLowerCase().trim().replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,.\\/:;<=>?@[\\]^`{|}~]/g,\"\").replace(/\\s/g,\"-\");if(this.seen.hasOwnProperty(t)){var n=t;do{this.seen[n]++,t=n+\"-\"+this.seen[n]}while(this.seen.hasOwnProperty(t))}return this.seen[t]=0,t},m.escapeTest=/[&<>\"']/,m.escapeReplace=/[&<>\"']/g,m.replacements={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},m.escapeTestNoEncode=/[<>\"']|&(?!#?\\w+;)/,m.escapeReplaceNoEncode=/[<>\"']|&(?!#?\\w+;)/g;var f={},g=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;function x(){}function v(e){for(var t,n,i=1;i<arguments.length;i++)for(n in t=arguments[i],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}function k(e,t){var n=e.replace(/\\|/g,function(e,t,n){var i=!1,r=t;while(--r>=0&&\"\\\\\"===n[r])i=!i;return i?\"|\":\" |\"}),i=n.split(/ \\|/),r=0;if(i.length>t)i.splice(t);else while(i.length<t)i.push(\"\");for(;r<i.length;r++)i[r]=i[r].trim().replace(/\\\\\\|/g,\"|\");return i}function b(e,t,n){if(0===e.length)return\"\";var i=0;while(i<e.length){var r=e.charAt(e.length-i-1);if(r!==t||n){if(r===t||!n)break;i++}else i++}return e.substr(0,e.length-i)}function y(e,t){if(-1===e.indexOf(t[1]))return-1;for(var n=0,i=0;i<e.length;i++)if(\"\\\\\"===e[i])i++;else if(e[i]===t[0])n++;else if(e[i]===t[1]&&(n--,n<0))return i;return-1}function w(e,t,n){if(\"undefined\"===typeof e||null===e)throw new Error(\"marked(): input parameter is undefined or null\");if(\"string\"!==typeof e)throw new Error(\"marked(): input parameter is of type \"+Object.prototype.toString.call(e)+\", string expected\");if(n||\"function\"===typeof t){n||(n=t,t=null),t=v({},w.defaults,t||{});var r,a,o=t.highlight,s=0;try{r=i.lex(e,t)}catch(d){return n(d)}a=r.length;var c=function(e){if(e)return t.highlight=o,n(e);var i;try{i=l.parse(r,t)}catch(d){e=d}return t.highlight=o,e?n(e):n(null,i)};if(!o||o.length<3)return c();if(delete t.highlight,!a)return c();for(;s<r.length;s++)(function(e){\"code\"!==e.type?--a||c():o(e.text,e.lang,function(t,n){return t?c(t):null==n||n===e.text?--a||c():(e.text=n,e.escaped=!0,void(--a||c()))})})(r[s])}else try{return t&&(t=v({},w.defaults,t)),l.parse(i.lex(e,t),t)}catch(d){if(d.message+=\"\\nPlease report this to https://github.com/markedjs/marked.\",(t||w.defaults).silent)return\"<p>An error occurred:</p><pre>\"+m(d.message+\"\",!0)+\"</pre>\";throw d}}x.exec=x,w.options=w.setOptions=function(e){return v(w.defaults,e),w},w.getDefaults=function(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:\"\",highlight:null,langPrefix:\"language-\",mangle:!0,pedantic:!1,renderer:new o,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tables:!0,xhtml:!1}},w.defaults=w.getDefaults(),w.Parser=l,w.parser=l.parse,w.Renderer=o,w.TextRenderer=s,w.Lexer=i,w.lexer=i.lex,w.InlineLexer=a,w.inlineLexer=a.output,w.Slugger=c,w.parse=w,e.exports=w})(this||\"undefined\"!==typeof window&&window)}).call(this,n(\"c8ba\"))},\"1ef7\":function(e,t,n){(function(e){e(n(\"56b3\"))})(function(e){\"use strict\";var t=/^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]\\s|[*+-]\\s|(\\d+)([.)]))(\\s*)/,n=/^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]|[*+-]|(\\d+)[.)])(\\s*)$/,i=/[*+-]\\s/;function r(e,n){var i=n.line,r=0,a=0,o=t.exec(e.getLine(i)),s=o[1];do{r+=1;var l=i+r,c=e.getLine(l),m=t.exec(c);if(m){var d=m[1],u=parseInt(o[3],10)+r-a,p=parseInt(m[3],10),h=p;if(s!==d||isNaN(p)){if(s.length>d.length)return;if(s.length<d.length&&1===r)return;a+=1}else u===p&&(h=p+1),u>p&&(h=u+1),e.replaceRange(c.replace(t,d+h+m[4]+m[5]),{line:l,ch:0},{line:l,ch:c.length})}}while(m)}e.commands.newlineAndIndentContinueMarkdownList=function(a){if(a.getOption(\"disableInput\"))return e.Pass;for(var o=a.listSelections(),s=[],l=0;l<o.length;l++){var c=o[l].head,m=a.getStateAfter(c.line),d=!1!==m.list,u=0!==m.quote,p=a.getLine(c.line),h=t.exec(p),f=/^\\s*$/.test(p.slice(0,c.ch));if(!o[l].empty()||!d&&!u||!h||f)return void a.execCommand(\"newlineAndIndent\");if(n.test(p))/>\\s*$/.test(p)||a.replaceRange(\"\",{line:c.line,ch:0},{line:c.line,ch:c.ch+1}),s[l]=\"\\n\";else{var g=h[1],x=h[5],v=!(i.test(h[2])||h[2].indexOf(\">\")>=0),k=v?parseInt(h[3],10)+1+h[4]:h[2].replace(\"x\",\" \");s[l]=\"\\n\"+g+k+x,v&&r(a,c)}}a.replaceSelections(s)}})},2:function(e,t){},\"44a0\":function(e,t,n){(function(e){e(n(\"56b3\"),n(\"959b\"),n(\"9eb9\"))})(function(e){\"use strict\";var t=/^((?:(?:aaas?|about|acap|adiumxtra|af[ps]|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|cap|chrome(?:-extension)?|cid|coap|com-eventbrite-attendee|content|crid|cvs|data|dav|dict|dlna-(?:playcontainer|playsingle)|dns|doi|dtn|dvb|ed2k|facetime|feed|file|finger|fish|ftp|geo|gg|git|gizmoproject|go|gopher|gtalk|h323|hcp|https?|iax|icap|icon|im|imap|info|ipn|ipp|irc[6s]?|iris(?:\\.beep|\\.lwz|\\.xpc|\\.xpcs)?|itms|jar|javascript|jms|keyparc|lastfm|ldaps?|magnet|mailto|maps|market|message|mid|mms|ms-help|msnim|msrps?|mtqp|mumble|mupdate|mvn|news|nfs|nih?|nntp|notes|oid|opaquelocktoken|palm|paparazzi|platform|pop|pres|proxy|psyc|query|res(?:ource)?|rmi|rsync|rtmp|rtsp|secondlife|service|session|sftp|sgn|shttp|sieve|sips?|skype|sm[bs]|snmp|soap\\.beeps?|soldat|spotify|ssh|steam|svn|tag|teamspeak|tel(?:net)?|tftp|things|thismessage|tip|tn3270|tv|udp|unreal|urn|ut2004|vemmi|ventrilo|view-source|webcal|wss?|wtai|wyciwyg|xcon(?:-userid)?|xfire|xmlrpc\\.beeps?|xmpp|xri|ymsgr|z39\\.50[rs]?):(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`*!()\\[\\]{};:'\".,<>?«»“”‘’]))/i;e.defineMode(\"gfm\",function(n,i){var r=0;function a(e){return e.code=!1,null}var o={startState:function(){return{code:!1,codeBlock:!1,ateSpace:!1}},copyState:function(e){return{code:e.code,codeBlock:e.codeBlock,ateSpace:e.ateSpace}},token:function(e,n){if(n.combineTokens=null,n.codeBlock)return e.match(/^```+/)?(n.codeBlock=!1,null):(e.skipToEnd(),null);if(e.sol()&&(n.code=!1),e.sol()&&e.match(/^```+/))return e.skipToEnd(),n.codeBlock=!0,null;if(\"`\"===e.peek()){e.next();var a=e.pos;e.eatWhile(\"`\");var o=1+e.pos-a;return n.code?o===r&&(n.code=!1):(r=o,n.code=!0),null}if(n.code)return e.next(),null;if(e.eatSpace())return n.ateSpace=!0,null;if((e.sol()||n.ateSpace)&&(n.ateSpace=!1,!1!==i.gitHubSpice)){if(e.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+@)?(?=.{0,6}\\d)(?:[a-f0-9]{7,40}\\b)/))return n.combineTokens=!0,\"link\";if(e.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+)?#[0-9]+\\b/))return n.combineTokens=!0,\"link\"}return e.match(t)&&\"](\"!=e.string.slice(e.start-2,e.start)&&(0==e.start||/\\W/.test(e.string.charAt(e.start-1)))?(n.combineTokens=!0,\"link\"):(e.next(),null)},blankLine:a},s={taskLists:!0,strikethrough:!0,emoji:!0};for(var l in i)s[l]=i[l];return s.name=\"markdown\",e.overlayMode(e.getMode(n,s),o)},\"markdown\"),e.defineMIME(\"text/x-gfm\",\"gfm\")})},\"4a5d\":function(e,t,n){(function(t,i){var r;(function(){\"use strict\";r=function(e,n,i,r){r=r||{},this.dictionary=null,this.rules={},this.dictionaryTable={},this.compoundRules=[],this.compoundRuleCodes={},this.replacementTable=[],this.flags=r.flags||{},this.memoized={},this.loaded=!1;var a,o,s,l,c,m=this;function d(e,t){var n=m._readFile(e,null,r.asyncLoad);r.asyncLoad?n.then(function(e){t(e)}):t(n)}function u(e){n=e,i&&h()}function p(e){i=e,n&&h()}function h(){for(m.rules=m._parseAFF(n),m.compoundRuleCodes={},o=0,l=m.compoundRules.length;o<l;o++){var e=m.compoundRules[o];for(s=0,c=e.length;s<c;s++)m.compoundRuleCodes[e[s]]=[]}for(o in\"ONLYINCOMPOUND\"in m.flags&&(m.compoundRuleCodes[m.flags.ONLYINCOMPOUND]=[]),m.dictionaryTable=m._parseDIC(i),m.compoundRuleCodes)0===m.compoundRuleCodes[o].length&&delete m.compoundRuleCodes[o];for(o=0,l=m.compoundRules.length;o<l;o++){var t=m.compoundRules[o],a=\"\";for(s=0,c=t.length;s<c;s++){var d=t[s];d in m.compoundRuleCodes?a+=\"(\"+m.compoundRuleCodes[d].join(\"|\")+\")\":a+=d}m.compoundRules[o]=new RegExp(a,\"i\")}m.loaded=!0,r.asyncLoad&&r.loadedCallback&&r.loadedCallback(m)}return e&&(m.dictionary=e,n&&i?h():\"undefined\"!==typeof window&&\"chrome\"in window&&\"extension\"in window.chrome&&\"getURL\"in window.chrome.extension?(a=r.dictionaryPath?r.dictionaryPath:\"typo/dictionaries\",n||d(chrome.extension.getURL(a+\"/\"+e+\"/\"+e+\".aff\"),u),i||d(chrome.extension.getURL(a+\"/\"+e+\"/\"+e+\".dic\"),p)):(a=r.dictionaryPath?r.dictionaryPath:t+\"/dictionaries\",n||d(a+\"/\"+e+\"/\"+e+\".aff\",u),i||d(a+\"/\"+e+\"/\"+e+\".dic\",p))),this},r.prototype={load:function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);return this},_readFile:function(e,t,r){if(t=t||\"utf8\",\"undefined\"!==typeof XMLHttpRequest){var a,o=new XMLHttpRequest;return o.open(\"GET\",e,r),r&&(a=new Promise(function(e,t){o.onload=function(){200===o.status?e(o.responseText):t(o.statusText)},o.onerror=function(){t(o.statusText)}})),o.overrideMimeType&&o.overrideMimeType(\"text/plain; charset=\"+t),o.send(null),r?a:o.responseText}var s=n(2);try{if(s.existsSync(e)){var l=s.statSync(e),c=s.openSync(e,\"r\"),m=new i(l.size);return s.readSync(c,m,0,m.length,null),m.toString(t,0,m.length)}console.log(\"Path \"+e+\" does not exist.\")}catch(d){return console.log(d),\"\"}},_parseAFF:function(e){var t,n,i,r,a,o,s,l,c={};e=this._removeAffixComments(e);var m=e.split(\"\\n\");for(a=0,s=m.length;a<s;a++){t=m[a];var d=t.split(/\\s+/),u=d[0];if(\"PFX\"==u||\"SFX\"==u){var p=d[1],h=d[2];i=parseInt(d[3],10);var f=[];for(o=a+1,l=a+1+i;o<l;o++){n=m[o],r=n.split(/\\s+/);var g=r[2],x=r[3].split(\"/\"),v=x[0];\"0\"===v&&(v=\"\");var k=this.parseRuleCodes(x[1]),b=r[4],y={};y.add=v,k.length>0&&(y.continuationClasses=k),\".\"!==b&&(y.match=\"SFX\"===u?new RegExp(b+\"$\"):new RegExp(\"^\"+b)),\"0\"!=g&&(y.remove=\"SFX\"===u?new RegExp(g+\"$\"):g),f.push(y)}c[p]={type:u,combineable:\"Y\"==h,entries:f},a+=i}else if(\"COMPOUNDRULE\"===u){for(i=parseInt(d[1],10),o=a+1,l=a+1+i;o<l;o++)t=m[o],r=t.split(/\\s+/),this.compoundRules.push(r[1]);a+=i}else\"REP\"===u?(r=t.split(/\\s+/),3===r.length&&this.replacementTable.push([r[1],r[2]])):this.flags[u]=d[1]}return c},_removeAffixComments:function(e){return e=e.replace(/^\\s*#.*$/gm,\"\"),e=e.replace(/^\\s\\s*/m,\"\").replace(/\\s\\s*$/m,\"\"),e=e.replace(/\\n{2,}/g,\"\\n\"),e=e.replace(/^\\s\\s*/,\"\").replace(/\\s\\s*$/,\"\"),e},_parseDIC:function(e){e=this._removeDicComments(e);var t=e.split(\"\\n\"),n={};function i(e,t){n.hasOwnProperty(e)||(n[e]=null),t.length>0&&(null===n[e]&&(n[e]=[]),n[e].push(t))}for(var r=1,a=t.length;r<a;r++){var o=t[r],s=o.split(\"/\",2),l=s[0];if(s.length>1){var c=this.parseRuleCodes(s[1]);\"NEEDAFFIX\"in this.flags&&-1!=c.indexOf(this.flags.NEEDAFFIX)||i(l,c);for(var m=0,d=c.length;m<d;m++){var u=c[m],p=this.rules[u];if(p)for(var h=this._applyRule(l,p),f=0,g=h.length;f<g;f++){var x=h[f];if(i(x,[]),p.combineable)for(var v=m+1;v<d;v++){var k=c[v],b=this.rules[k];if(b&&b.combineable&&p.type!=b.type)for(var y=this._applyRule(x,b),w=0,S=y.length;w<S;w++){var C=y[w];i(C,[])}}}u in this.compoundRuleCodes&&this.compoundRuleCodes[u].push(l)}}else i(l.trim(),[])}return n},_removeDicComments:function(e){return e=e.replace(/^\\t.*$/gm,\"\"),e},parseRuleCodes:function(e){if(!e)return[];if(!(\"FLAG\"in this.flags))return e.split(\"\");if(\"long\"===this.flags.FLAG){for(var t=[],n=0,i=e.length;n<i;n+=2)t.push(e.substr(n,2));return t}return\"num\"===this.flags.FLAG?e.split(\",\"):void 0},_applyRule:function(e,t){for(var n=t.entries,i=[],r=0,a=n.length;r<a;r++){var o=n[r];if(!o.match||e.match(o.match)){var s=e;if(o.remove&&(s=s.replace(o.remove,\"\")),\"SFX\"===t.type?s+=o.add:s=o.add+s,i.push(s),\"continuationClasses\"in o)for(var l=0,c=o.continuationClasses.length;l<c;l++){var m=this.rules[o.continuationClasses[l]];m&&(i=i.concat(this._applyRule(s,m)))}}}return i},check:function(e){if(!this.loaded)throw\"Dictionary not loaded.\";var t=e.replace(/^\\s\\s*/,\"\").replace(/\\s\\s*$/,\"\");if(this.checkExact(t))return!0;if(t.toUpperCase()===t){var n=t[0]+t.substring(1).toLowerCase();if(this.hasFlag(n,\"KEEPCASE\"))return!1;if(this.checkExact(n))return!0}var i=t.toLowerCase();if(i!==t){if(this.hasFlag(i,\"KEEPCASE\"))return!1;if(this.checkExact(i))return!0}return!1},checkExact:function(e){if(!this.loaded)throw\"Dictionary not loaded.\";var t,n,i=this.dictionaryTable[e];if(\"undefined\"===typeof i){if(\"COMPOUNDMIN\"in this.flags&&e.length>=this.flags.COMPOUNDMIN)for(t=0,n=this.compoundRules.length;t<n;t++)if(e.match(this.compoundRules[t]))return!0}else{if(null===i)return!0;if(\"object\"===typeof i)for(t=0,n=i.length;t<n;t++)if(!this.hasFlag(e,\"ONLYINCOMPOUND\",i[t]))return!0}return!1},hasFlag:function(e,t,n){if(!this.loaded)throw\"Dictionary not loaded.\";return!!(t in this.flags&&(\"undefined\"===typeof n&&(n=Array.prototype.concat.apply([],this.dictionaryTable[e])),n&&-1!==n.indexOf(this.flags[t])))},alphabet:\"\",suggest:function(e,t){if(!this.loaded)throw\"Dictionary not loaded.\";if(t=t||5,this.memoized.hasOwnProperty(e)){var n=this.memoized[e][\"limit\"];if(t<=n||this.memoized[e][\"suggestions\"].length<n)return this.memoized[e][\"suggestions\"].slice(0,t)}if(this.check(e))return[];for(var i=0,r=this.replacementTable.length;i<r;i++){var a=this.replacementTable[i];if(-1!==e.indexOf(a[0])){var o=e.replace(a[0],a[1]);if(this.check(o))return[o]}}var s=this;function l(e){var t,n,i,r,a,o,l=[];for(t=0,r=e.length;t<r;t++){var c=e[t];for(n=0,a=c.length+1;n<a;n++){var m=[c.substring(0,n),c.substring(n)];if(m[1]&&l.push(m[0]+m[1].substring(1)),m[1].length>1&&m[1][1]!==m[1][0]&&l.push(m[0]+m[1][1]+m[1][0]+m[1].substring(2)),m[1])for(i=0,o=s.alphabet.length;i<o;i++)s.alphabet[i]!=m[1].substring(0,1)&&l.push(m[0]+s.alphabet[i]+m[1].substring(1));if(m[1])for(i=0,o=s.alphabet.length;i<o;i++)l.push(m[0]+s.alphabet[i]+m[1])}}return l}function c(e){for(var t=[],n=0,i=e.length;n<i;n++)s.check(e[n])&&t.push(e[n]);return t}function m(e){var n,i,r=l([e]),a=l(r),o=c(r.concat(a)),m={};for(n=0,i=o.length;n<i;n++)o[n]in m?m[o[n]]+=1:m[o[n]]=1;var d=[];for(n in m)m.hasOwnProperty(n)&&d.push([n,m[n]]);function u(e,t){return e[1]<t[1]?-1:1}d.sort(u).reverse();var p=[],h=\"lowercase\";for(e.toUpperCase()===e?h=\"uppercase\":e.substr(0,1).toUpperCase()+e.substr(1).toLowerCase()===e&&(h=\"capitalized\"),n=0,i=Math.min(t,d.length);n<i;n++)\"uppercase\"===h?d[n][0]=d[n][0].toUpperCase():\"capitalized\"===h&&(d[n][0]=d[n][0].substr(0,1).toUpperCase()+d[n][0].substr(1)),s.hasFlag(d[n][0],\"NOSUGGEST\")||p.push(d[n][0]);return p}return s.alphabet=\"abcdefghijklmnopqrstuvwxyz\",this.memoized[e]={suggestions:m(e),limit:t},this.memoized[e][\"suggestions\"]}}})(),e.exports=r}).call(this,\"/\",n(\"b639\").Buffer)},\"6d78\":function(e,t,n){(function(e){e(n(\"56b3\"))})(function(e){\"use strict\";function t(e){var t=e.getWrapperElement();e.state.fullScreenRestore={scrollTop:window.pageYOffset,scrollLeft:window.pageXOffset,width:t.style.width,height:t.style.height},t.style.width=\"\",t.style.height=\"auto\",t.className+=\" CodeMirror-fullscreen\",document.documentElement.style.overflow=\"hidden\",e.refresh()}function n(e){var t=e.getWrapperElement();t.className=t.className.replace(/\\s*CodeMirror-fullscreen\\b/,\"\"),document.documentElement.style.overflow=\"\";var n=e.state.fullScreenRestore;t.style.width=n.width,t.style.height=n.height,window.scrollTo(n.scrollLeft,n.scrollTop),e.refresh()}e.defineOption(\"fullScreen\",!1,function(i,r,a){a==e.Init&&(a=!1),!a!=!r&&(r?t(i):n(i))})})},7964:function(e,t,n){\"use strict\";n.r(t);var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"div\",[n(\"markdown-editor\",{model:{value:e.content,callback:function(t){e.content=t},expression:\"content\"}})],1)},r=[],a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"div\",{staticClass:\"markdown-wrapper\"},[n(\"textarea\",{ref:\"editor\"})])},o=[],s=n(\"ebfb\"),l=n.n(s),c=(n(\"b116\"),{naem:\"MarkdownEditor\",props:{value:{type:String,default:\"\"},options:{type:Object,default:function(){return{}}},localCache:{type:Boolean,default:!0}},data:function(){return{editor:null}},methods:{addEvents:function(){var e=this;this.editor.codemirror.on(\"change\",function(){var t=e.editor.value();e.localCache&&(localStorage.markdownContent=t),e.$emit(\"input\",t),e.$emit(\"on-change\",t)}),this.editor.codemirror.on(\"focus\",function(){e.$emit(\"on-focus\",e.editor.value())}),this.editor.codemirror.on(\"blur\",function(){e.$emit(\"on-blur\",e.editor.value())})}},mounted:function(){this.editor=new l.a(Object.assign(this.options,{element:this.$refs.editor})),this.addEvents();var e=localStorage.markdownContent;e&&this.editor.value(e)}}),m=c,d=(n(\"7f24\"),n(\"2877\")),u=Object(d[\"a\"])(m,a,o,!1,null,null,null),p=u.exports,h=p,f={name:\"markdown_page\",components:{MarkdownEditor:h},data:function(){return{content:\"\"}}},g=f,x=Object(d[\"a\"])(g,i,r,!1,null,null,null);t[\"default\"]=x.exports},\"7f24\":function(e,t,n){\"use strict\";var i=n(\"a023\"),r=n.n(i);r.a},\"959b\":function(e,t,n){(function(e){e(n(\"56b3\"),n(\"d5e0\"),n(\"f040\"))})(function(e){\"use strict\";e.defineMode(\"markdown\",function(t,n){var i=e.getMode(t,\"text/html\"),r=\"null\"==i.name;function a(n){if(e.findModeByName){var i=e.findModeByName(n);i&&(n=i.mime||i.mimes[0])}var r=e.getMode(t,n);return\"null\"==r.name?null:r}void 0===n.highlightFormatting&&(n.highlightFormatting=!1),void 0===n.maxBlockquoteDepth&&(n.maxBlockquoteDepth=0),void 0===n.taskLists&&(n.taskLists=!1),void 0===n.strikethrough&&(n.strikethrough=!1),void 0===n.emoji&&(n.emoji=!1),void 0===n.fencedCodeBlockHighlighting&&(n.fencedCodeBlockHighlighting=!0),void 0===n.xml&&(n.xml=!0),void 0===n.tokenTypeOverrides&&(n.tokenTypeOverrides={});var o={header:\"header\",code:\"comment\",quote:\"quote\",list1:\"variable-2\",list2:\"variable-3\",list3:\"keyword\",hr:\"hr\",image:\"image\",imageAltText:\"image-alt-text\",imageMarker:\"image-marker\",formatting:\"formatting\",linkInline:\"link\",linkEmail:\"link\",linkText:\"link\",linkHref:\"string\",em:\"em\",strong:\"strong\",strikethrough:\"strikethrough\",emoji:\"builtin\"};for(var s in o)o.hasOwnProperty(s)&&n.tokenTypeOverrides[s]&&(o[s]=n.tokenTypeOverrides[s]);var l=/^([*\\-_])(?:\\s*\\1){2,}\\s*$/,c=/^(?:[*\\-+]|^[0-9]+([.)]))\\s+/,m=/^\\[(x| )\\](?=\\s)/i,d=n.allowAtxHeaderWithoutSpace?/^(#+)/:/^(#+)(?: |$)/,u=/^ *(?:\\={1,}|-{1,})\\s*$/,p=/^[^#!\\[\\]*_\\\\<>` \"'(~:]+/,h=/^(~~~+|```+)[ \\t]*([\\w+#-]*)[^\\n`]*$/,f=/^\\s*\\[[^\\]]+?\\]:.*$/,g=/[!\\\"#$%&\\'()*+,\\-\\.\\/:;<=>?@\\[\\\\\\]^_`{|}~—]/,x=\"    \";function v(e,t,n){return t.f=t.inline=n,n(e,t)}function k(e,t,n){return t.f=t.block=n,n(e,t)}function b(e){return!e||!/\\S/.test(e.string)}function y(e){return e.linkTitle=!1,e.linkHref=!1,e.linkText=!1,e.em=!1,e.strong=!1,e.strikethrough=!1,e.quote=0,e.indentedCode=!1,e.f==S&&(e.f=_,e.block=w),e.trailingSpace=0,e.trailingSpaceNewLine=!1,e.prevLine=e.thisLine,e.thisLine={stream:null},null}function w(t,i){var r=t.column()===i.indentation,s=b(i.prevLine.stream),p=i.indentedCode,g=i.prevLine.hr,x=!1!==i.list,k=(i.listStack[i.listStack.length-1]||0)+3;i.indentedCode=!1;var y=i.indentation;if(null===i.indentationDiff&&(i.indentationDiff=i.indentation,x)){i.em=!1,i.strong=!1,i.code=!1,i.strikethrough=!1,i.list=null;while(y<i.listStack[i.listStack.length-1])i.listStack.pop(),i.listStack.length?i.indentation=i.listStack[i.listStack.length-1]:i.list=!1;!1!==i.list&&(i.indentationDiff=y-i.listStack[i.listStack.length-1])}var w=!s&&!g&&!i.prevLine.header&&(!x||!p)&&!i.prevLine.fencedCodeEnd,S=(!1===i.list||g||s)&&i.indentation<=k&&t.match(l),L=null;if(i.indentationDiff>=4&&(p||i.prevLine.fencedCodeEnd||i.prevLine.header||s))return t.skipToEnd(),i.indentedCode=!0,o.code;if(t.eatSpace())return null;if(r&&i.indentation<=k&&(L=t.match(d))&&L[1].length<=6)return i.quote=0,i.header=L[1].length,i.thisLine.header=!0,n.highlightFormatting&&(i.formatting=\"header\"),i.f=i.inline,T(i);if(i.indentation<=k&&t.eat(\">\"))return i.quote=r?1:i.quote+1,n.highlightFormatting&&(i.formatting=\"quote\"),t.eatSpace(),T(i);if(!S&&!i.setext&&r&&i.indentation<=k&&(L=t.match(c))){var _=L[1]?\"ol\":\"ul\";return i.indentation=y+t.current().length,i.list=!0,i.quote=0,i.listStack.push(i.indentation),n.taskLists&&t.match(m,!1)&&(i.taskList=!0),i.f=i.inline,n.highlightFormatting&&(i.formatting=[\"list\",\"list-\"+_]),T(i)}return r&&i.indentation<=k&&(L=t.match(h,!0))?(i.quote=0,i.fencedEndRE=new RegExp(L[1]+\"+ *$\"),i.localMode=n.fencedCodeBlockHighlighting&&a(L[2]),i.localMode&&(i.localState=e.startState(i.localMode)),i.f=i.block=C,n.highlightFormatting&&(i.formatting=\"code-block\"),i.code=-1,T(i)):i.setext||!(w&&x||i.quote||!1!==i.list||i.code||S||f.test(t.string))&&(L=t.lookAhead(1))&&(L=L.match(u))?(i.setext?(i.header=i.setext,i.setext=0,t.skipToEnd(),n.highlightFormatting&&(i.formatting=\"header\")):(i.header=\"=\"==L[0].charAt(0)?1:2,i.setext=i.header),i.thisLine.header=!0,i.f=i.inline,T(i)):S?(t.skipToEnd(),i.hr=!0,i.thisLine.hr=!0,o.hr):\"[\"===t.peek()?v(t,i,A):v(t,i,i.inline)}function S(t,n){var a=i.token(t,n.htmlState);if(!r){var o=e.innerMode(i,n.htmlState);(\"xml\"==o.mode.name&&null===o.state.tagStart&&!o.state.context&&o.state.tokenize.isInText||n.md_inside&&t.current().indexOf(\">\")>-1)&&(n.f=_,n.block=w,n.htmlState=null)}return a}function C(e,t){var i,r=t.listStack[t.listStack.length-1]||0,a=t.indentation<r,s=r+3;return t.fencedEndRE&&t.indentation<=s&&(a||e.match(t.fencedEndRE))?(n.highlightFormatting&&(t.formatting=\"code-block\"),a||(i=T(t)),t.localMode=t.localState=null,t.block=w,t.f=_,t.fencedEndRE=null,t.code=0,t.thisLine.fencedCodeEnd=!0,a?k(e,t,t.block):i):t.localMode?t.localMode.token(e,t.localState):(e.skipToEnd(),o.code)}function T(e){var t=[];if(e.formatting){t.push(o.formatting),\"string\"===typeof e.formatting&&(e.formatting=[e.formatting]);for(var i=0;i<e.formatting.length;i++)t.push(o.formatting+\"-\"+e.formatting[i]),\"header\"===e.formatting[i]&&t.push(o.formatting+\"-\"+e.formatting[i]+\"-\"+e.header),\"quote\"===e.formatting[i]&&(!n.maxBlockquoteDepth||n.maxBlockquoteDepth>=e.quote?t.push(o.formatting+\"-\"+e.formatting[i]+\"-\"+e.quote):t.push(\"error\"))}if(e.taskOpen)return t.push(\"meta\"),t.length?t.join(\" \"):null;if(e.taskClosed)return t.push(\"property\"),t.length?t.join(\" \"):null;if(e.linkHref?t.push(o.linkHref,\"url\"):(e.strong&&t.push(o.strong),e.em&&t.push(o.em),e.strikethrough&&t.push(o.strikethrough),e.emoji&&t.push(o.emoji),e.linkText&&t.push(o.linkText),e.code&&t.push(o.code),e.image&&t.push(o.image),e.imageAltText&&t.push(o.imageAltText,\"link\"),e.imageMarker&&t.push(o.imageMarker)),e.header&&t.push(o.header,o.header+\"-\"+e.header),e.quote&&(t.push(o.quote),!n.maxBlockquoteDepth||n.maxBlockquoteDepth>=e.quote?t.push(o.quote+\"-\"+e.quote):t.push(o.quote+\"-\"+n.maxBlockquoteDepth)),!1!==e.list){var r=(e.listStack.length-1)%3;r?1===r?t.push(o.list2):t.push(o.list3):t.push(o.list1)}return e.trailingSpaceNewLine?t.push(\"trailing-space-new-line\"):e.trailingSpace&&t.push(\"trailing-space-\"+(e.trailingSpace%2?\"a\":\"b\")),t.length?t.join(\" \"):null}function L(e,t){if(e.match(p,!0))return T(t)}function _(t,r){var a=r.text(t,r);if(\"undefined\"!==typeof a)return a;if(r.list)return r.list=null,T(r);if(r.taskList){var s=\" \"===t.match(m,!0)[1];return s?r.taskOpen=!0:r.taskClosed=!0,n.highlightFormatting&&(r.formatting=\"task\"),r.taskList=!1,T(r)}if(r.taskOpen=!1,r.taskClosed=!1,r.header&&t.match(/^#+$/,!0))return n.highlightFormatting&&(r.formatting=\"header\"),T(r);var l=t.next();if(r.linkTitle){r.linkTitle=!1;var c=l;\"(\"===l&&(c=\")\"),c=(c+\"\").replace(/([.?*+^\\[\\]\\\\(){}|-])/g,\"\\\\$1\");var d=\"^\\\\s*(?:[^\"+c+\"\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)\"+c;if(t.match(new RegExp(d),!0))return o.linkHref}if(\"`\"===l){var u=r.formatting;n.highlightFormatting&&(r.formatting=\"code\"),t.eatWhile(\"`\");var p=t.current().length;if(0!=r.code||r.quote&&1!=p){if(p==r.code){var h=T(r);return r.code=0,h}return r.formatting=u,T(r)}return r.code=p,T(r)}if(r.code)return T(r);if(\"\\\\\"===l&&(t.next(),n.highlightFormatting)){var f=T(r),x=o.formatting+\"-escape\";return f?f+\" \"+x:x}if(\"!\"===l&&t.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/,!1))return r.imageMarker=!0,r.image=!0,n.highlightFormatting&&(r.formatting=\"image\"),T(r);if(\"[\"===l&&r.imageMarker&&t.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/,!1))return r.imageMarker=!1,r.imageAltText=!0,n.highlightFormatting&&(r.formatting=\"image\"),T(r);if(\"]\"===l&&r.imageAltText){n.highlightFormatting&&(r.formatting=\"image\");f=T(r);return r.imageAltText=!1,r.image=!1,r.inline=r.f=M,f}if(\"[\"===l&&!r.image)return r.linkText=!0,n.highlightFormatting&&(r.formatting=\"link\"),T(r);if(\"]\"===l&&r.linkText){n.highlightFormatting&&(r.formatting=\"link\");f=T(r);return r.linkText=!1,r.inline=r.f=t.match(/\\(.*?\\)| ?\\[.*?\\]/,!1)?M:_,f}if(\"<\"===l&&t.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/,!1)){r.f=r.inline=N,n.highlightFormatting&&(r.formatting=\"link\");f=T(r);return f?f+=\" \":f=\"\",f+o.linkInline}if(\"<\"===l&&t.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/,!1)){r.f=r.inline=N,n.highlightFormatting&&(r.formatting=\"link\");f=T(r);return f?f+=\" \":f=\"\",f+o.linkEmail}if(n.xml&&\"<\"===l&&t.match(/^(!--|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*>)/i,!1)){var v=t.string.indexOf(\">\",t.pos);if(-1!=v){var b=t.string.substring(t.start,v);/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(b)&&(r.md_inside=!0)}return t.backUp(1),r.htmlState=e.startState(i),k(t,r,S)}if(n.xml&&\"<\"===l&&t.match(/^\\/\\w*?>/))return r.md_inside=!1,\"tag\";if(\"*\"===l||\"_\"===l){var y=1,w=1==t.pos?\" \":t.string.charAt(t.pos-2);while(y<3&&t.eat(l))y++;var C=t.peek()||\" \",L=!/\\s/.test(C)&&(!g.test(C)||/\\s/.test(w)||g.test(w)),E=!/\\s/.test(w)&&(!g.test(w)||/\\s/.test(C)||g.test(C)),I=null,A=null;if(y%2&&(r.em||!L||\"*\"!==l&&E&&!g.test(w)?r.em!=l||!E||\"*\"!==l&&L&&!g.test(C)||(I=!1):I=!0),y>1&&(r.strong||!L||\"*\"!==l&&E&&!g.test(w)?r.strong!=l||!E||\"*\"!==l&&L&&!g.test(C)||(A=!1):A=!0),null!=A||null!=I){n.highlightFormatting&&(r.formatting=null==I?\"strong\":null==A?\"em\":\"strong em\"),!0===I&&(r.em=l),!0===A&&(r.strong=l);h=T(r);return!1===I&&(r.em=!1),!1===A&&(r.strong=!1),h}}else if(\" \"===l&&(t.eat(\"*\")||t.eat(\"_\"))){if(\" \"===t.peek())return T(r);t.backUp(1)}if(n.strikethrough)if(\"~\"===l&&t.eatWhile(l)){if(r.strikethrough){n.highlightFormatting&&(r.formatting=\"strikethrough\");h=T(r);return r.strikethrough=!1,h}if(t.match(/^[^\\s]/,!1))return r.strikethrough=!0,n.highlightFormatting&&(r.formatting=\"strikethrough\"),T(r)}else if(\" \"===l&&t.match(/^~~/,!0)){if(\" \"===t.peek())return T(r);t.backUp(2)}if(n.emoji&&\":\"===l&&t.match(/^[a-z_\\d+-]+:/)){r.emoji=!0,n.highlightFormatting&&(r.formatting=\"emoji\");var q=T(r);return r.emoji=!1,q}return\" \"===l&&(t.match(/^ +$/,!1)?r.trailingSpace++:r.trailingSpace&&(r.trailingSpaceNewLine=!0)),T(r)}function N(e,t){var i=e.next();if(\">\"===i){t.f=t.inline=_,n.highlightFormatting&&(t.formatting=\"link\");var r=T(t);return r?r+=\" \":r=\"\",r+o.linkInline}return e.match(/^[^>]+/,!0),o.linkInline}function M(e,t){if(e.eatSpace())return null;var i=e.next();return\"(\"===i||\"[\"===i?(t.f=t.inline=I(\"(\"===i?\")\":\"]\"),n.highlightFormatting&&(t.formatting=\"link-string\"),t.linkHref=!0,T(t)):\"error\"}var E={\")\":/^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\"]\":/^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/};function I(e){return function(t,i){var r=t.next();if(r===e){i.f=i.inline=_,n.highlightFormatting&&(i.formatting=\"link-string\");var a=T(i);return i.linkHref=!1,a}return t.match(E[e]),i.linkHref=!0,T(i)}}function A(e,t){return e.match(/^([^\\]\\\\]|\\\\.)*\\]:/,!1)?(t.f=q,e.next(),n.highlightFormatting&&(t.formatting=\"link\"),t.linkText=!0,T(t)):v(e,t,_)}function q(e,t){if(e.match(/^\\]:/,!0)){t.f=t.inline=R,n.highlightFormatting&&(t.formatting=\"link\");var i=T(t);return t.linkText=!1,i}return e.match(/^([^\\]\\\\]|\\\\.)+/,!0),o.linkText}function R(e,t){return e.eatSpace()?null:(e.match(/^[^\\s]+/,!0),void 0===e.peek()?t.linkTitle=!0:e.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?/,!0),t.f=t.inline=_,o.linkHref+\" url\")}var z={startState:function(){return{f:w,prevLine:{stream:null},thisLine:{stream:null},block:w,htmlState:null,indentation:0,inline:_,text:L,formatting:!1,linkText:!1,linkHref:!1,linkTitle:!1,code:0,em:!1,strong:!1,header:0,setext:0,hr:!1,taskList:!1,list:!1,listStack:[],quote:0,trailingSpace:0,trailingSpaceNewLine:!1,strikethrough:!1,emoji:!1,fencedEndRE:null}},copyState:function(t){return{f:t.f,prevLine:t.prevLine,thisLine:t.thisLine,block:t.block,htmlState:t.htmlState&&e.copyState(i,t.htmlState),indentation:t.indentation,localMode:t.localMode,localState:t.localMode?e.copyState(t.localMode,t.localState):null,inline:t.inline,text:t.text,formatting:!1,linkText:t.linkText,linkTitle:t.linkTitle,linkHref:t.linkHref,code:t.code,em:t.em,strong:t.strong,strikethrough:t.strikethrough,emoji:t.emoji,header:t.header,setext:t.setext,hr:t.hr,taskList:t.taskList,list:t.list,listStack:t.listStack.slice(0),quote:t.quote,indentedCode:t.indentedCode,trailingSpace:t.trailingSpace,trailingSpaceNewLine:t.trailingSpaceNewLine,md_inside:t.md_inside,fencedEndRE:t.fencedEndRE}},token:function(e,t){if(t.formatting=!1,e!=t.thisLine.stream){if(t.header=0,t.hr=!1,e.match(/^\\s*$/,!0))return y(t),null;if(t.prevLine=t.thisLine,t.thisLine={stream:e},t.taskList=!1,t.trailingSpace=0,t.trailingSpaceNewLine=!1,!t.localState&&(t.f=t.block,t.f!=S)){var n=e.match(/^\\s*/,!0)[0].replace(/\\t/g,x).length;if(t.indentation=n,t.indentationDiff=null,n>0)return null}}return t.f(e,t)},innerMode:function(e){return e.block==S?{state:e.htmlState,mode:i}:e.localState?{state:e.localState,mode:e.localMode}:{state:e,mode:z}},indent:function(t,n,r){return t.block==S&&i.indent?i.indent(t.htmlState,n,r):t.localState&&t.localMode.indent?t.localMode.indent(t.localState,n,r):e.Pass},blankLine:y,getType:T,closeBrackets:\"()[]{}''\\\"\\\"``\",fold:\"markdown\"};return z},\"xml\"),e.defineMIME(\"text/markdown\",\"markdown\"),e.defineMIME(\"text/x-markdown\",\"markdown\")})},9948:function(e,t,n){(function(e){e(n(\"56b3\"))})(function(e){\"use strict\";function t(e){e.state.markedSelection&&e.operation(function(){c(e)})}function n(e){e.state.markedSelection&&e.state.markedSelection.length&&e.operation(function(){s(e)})}e.defineOption(\"styleSelectedText\",!1,function(i,r,a){var o=a&&a!=e.Init;r&&!o?(i.state.markedSelection=[],i.state.markedSelectionStyle=\"string\"==typeof r?r:\"CodeMirror-selectedtext\",l(i),i.on(\"cursorActivity\",t),i.on(\"change\",n)):!r&&o&&(i.off(\"cursorActivity\",t),i.off(\"change\",n),s(i),i.state.markedSelection=i.state.markedSelectionStyle=null)});var i=8,r=e.Pos,a=e.cmpPos;function o(e,t,n,o){if(0!=a(t,n))for(var s=e.state.markedSelection,l=e.state.markedSelectionStyle,c=t.line;;){var m=c==t.line?t:r(c,0),d=c+i,u=d>=n.line,p=u?n:r(d,0),h=e.markText(m,p,{className:l});if(null==o?s.push(h):s.splice(o++,0,h),u)break;c=d}}function s(e){for(var t=e.state.markedSelection,n=0;n<t.length;++n)t[n].clear();t.length=0}function l(e){s(e);for(var t=e.listSelections(),n=0;n<t.length;n++)o(e,t[n].from(),t[n].to())}function c(e){if(!e.somethingSelected())return s(e);if(e.listSelections().length>1)return l(e);var t=e.getCursor(\"start\"),n=e.getCursor(\"end\"),r=e.state.markedSelection;if(!r.length)return o(e,t,n);var c=r[0].find(),m=r[r.length-1].find();if(!c||!m||n.line-t.line<=i||a(t,m.to)>=0||a(n,c.from)<=0)return l(e);while(a(t,c.from)>0)r.shift().clear(),c=r[0].find();a(t,c.from)<0&&(c.to.line-t.line<i?(r.shift().clear(),o(e,t,c.to,0)):o(e,t,c.from,0));while(a(n,m.to)<0)r.pop().clear(),m=r[r.length-1].find();a(n,m.to)>0&&(n.line-m.from.line<i?(r.pop().clear(),o(e,m.from,n)):o(e,m.to,n))}})},\"9eb9\":function(e,t,n){(function(e){e(n(\"56b3\"))})(function(e){\"use strict\";e.overlayMode=function(t,n,i){return{startState:function(){return{base:e.startState(t),overlay:e.startState(n),basePos:0,baseCur:null,overlayPos:0,overlayCur:null,streamSeen:null}},copyState:function(i){return{base:e.copyState(t,i.base),overlay:e.copyState(n,i.overlay),basePos:i.basePos,baseCur:null,overlayPos:i.overlayPos,overlayCur:null}},token:function(e,r){return(e!=r.streamSeen||Math.min(r.basePos,r.overlayPos)<e.start)&&(r.streamSeen=e,r.basePos=r.overlayPos=e.start),e.start==r.basePos&&(r.baseCur=t.token(e,r.base),r.basePos=e.pos),e.start==r.overlayPos&&(e.pos=e.start,r.overlayCur=n.token(e,r.overlay),r.overlayPos=e.pos),e.pos=Math.min(r.basePos,r.overlayPos),null==r.overlayCur?r.baseCur:null!=r.baseCur&&r.overlay.combineTokens||i&&null==r.overlay.combineTokens?r.baseCur+\" \"+r.overlayCur:r.overlayCur},indent:t.indent&&function(e,n){return t.indent(e.base,n)},electricChars:t.electricChars,innerMode:function(e){return{state:e.base,mode:t}},blankLine:function(e){var r,a;return t.blankLine&&(r=t.blankLine(e.base)),n.blankLine&&(a=n.blankLine(e.overlay)),null==a?r:i&&null!=r?r+\" \"+a:a}}}})},a023:function(e,t,n){},b116:function(e,t,n){},bf7d:function(e,t,n){var i=n(\"56b3\");i.commands.tabAndIndentMarkdownList=function(e){var t=e.listSelections(),n=t[0].head,i=e.getStateAfter(n.line),r=!1!==i.list;if(r)e.execCommand(\"indentMore\");else if(e.options.indentWithTabs)e.execCommand(\"insertTab\");else{var a=Array(e.options.tabSize+1).join(\" \");e.replaceSelection(a)}},i.commands.shiftTabAndUnindentMarkdownList=function(e){var t=e.listSelections(),n=t[0].head,i=e.getStateAfter(n.line),r=!1!==i.list;if(r)e.execCommand(\"indentLess\");else if(e.options.indentWithTabs)e.execCommand(\"insertTab\");else{var a=Array(e.options.tabSize+1).join(\" \");e.replaceSelection(a)}}},d5e0:function(e,t,n){(function(e){e(n(\"56b3\"))})(function(e){\"use strict\";var t={autoSelfClosers:{area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,frame:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0,menuitem:!0},implicitlyClosed:{dd:!0,li:!0,optgroup:!0,option:!0,p:!0,rp:!0,rt:!0,tbody:!0,td:!0,tfoot:!0,th:!0,tr:!0},contextGrabbers:{dd:{dd:!0,dt:!0},dt:{dd:!0,dt:!0},li:{li:!0},option:{option:!0,optgroup:!0},optgroup:{optgroup:!0},p:{address:!0,article:!0,aside:!0,blockquote:!0,dir:!0,div:!0,dl:!0,fieldset:!0,footer:!0,form:!0,h1:!0,h2:!0,h3:!0,h4:!0,h5:!0,h6:!0,header:!0,hgroup:!0,hr:!0,menu:!0,nav:!0,ol:!0,p:!0,pre:!0,section:!0,table:!0,ul:!0},rp:{rp:!0,rt:!0},rt:{rp:!0,rt:!0},tbody:{tbody:!0,tfoot:!0},td:{td:!0,th:!0},tfoot:{tbody:!0},th:{td:!0,th:!0},thead:{tbody:!0,tfoot:!0},tr:{tr:!0}},doNotIndent:{pre:!0},allowUnquoted:!0,allowMissing:!0,caseFold:!0},n={autoSelfClosers:{},implicitlyClosed:{},contextGrabbers:{},doNotIndent:{},allowUnquoted:!1,allowMissing:!1,allowMissingTagName:!1,caseFold:!1};e.defineMode(\"xml\",function(i,r){var a,o,s=i.indentUnit,l={},c=r.htmlMode?t:n;for(var m in c)l[m]=c[m];for(var m in r)l[m]=r[m];function d(e,t){function n(n){return t.tokenize=n,n(e,t)}var i,r=e.next();return\"<\"==r?e.eat(\"!\")?e.eat(\"[\")?e.match(\"CDATA[\")?n(h(\"atom\",\"]]>\")):null:e.match(\"--\")?n(h(\"comment\",\"--\\x3e\")):e.match(\"DOCTYPE\",!0,!0)?(e.eatWhile(/[\\w\\._\\-]/),n(f(1))):null:e.eat(\"?\")?(e.eatWhile(/[\\w\\._\\-]/),t.tokenize=h(\"meta\",\"?>\"),\"meta\"):(a=e.eat(\"/\")?\"closeTag\":\"openTag\",t.tokenize=u,\"tag bracket\"):\"&\"==r?(i=e.eat(\"#\")?e.eat(\"x\")?e.eatWhile(/[a-fA-F\\d]/)&&e.eat(\";\"):e.eatWhile(/[\\d]/)&&e.eat(\";\"):e.eatWhile(/[\\w\\.\\-:]/)&&e.eat(\";\"),i?\"atom\":\"error\"):(e.eatWhile(/[^&<]/),null)}function u(e,t){var n=e.next();if(\">\"==n||\"/\"==n&&e.eat(\">\"))return t.tokenize=d,a=\">\"==n?\"endTag\":\"selfcloseTag\",\"tag bracket\";if(\"=\"==n)return a=\"equals\",null;if(\"<\"==n){t.tokenize=d,t.state=k,t.tagName=t.tagStart=null;var i=t.tokenize(e,t);return i?i+\" tag error\":\"tag error\"}return/[\\'\\\"]/.test(n)?(t.tokenize=p(n),t.stringStartCol=e.column(),t.tokenize(e,t)):(e.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/),\"word\")}function p(e){var t=function(t,n){while(!t.eol())if(t.next()==e){n.tokenize=u;break}return\"string\"};return t.isInAttribute=!0,t}function h(e,t){return function(n,i){while(!n.eol()){if(n.match(t)){i.tokenize=d;break}n.next()}return e}}function f(e){return function(t,n){var i;while(null!=(i=t.next())){if(\"<\"==i)return n.tokenize=f(e+1),n.tokenize(t,n);if(\">\"==i){if(1==e){n.tokenize=d;break}return n.tokenize=f(e-1),n.tokenize(t,n)}}return\"meta\"}}function g(e,t,n){this.prev=e.context,this.tagName=t,this.indent=e.indented,this.startOfLine=n,(l.doNotIndent.hasOwnProperty(t)||e.context&&e.context.noIndent)&&(this.noIndent=!0)}function x(e){e.context&&(e.context=e.context.prev)}function v(e,t){var n;while(1){if(!e.context)return;if(n=e.context.tagName,!l.contextGrabbers.hasOwnProperty(n)||!l.contextGrabbers[n].hasOwnProperty(t))return;x(e)}}function k(e,t,n){return\"openTag\"==e?(n.tagStart=t.column(),b):\"closeTag\"==e?y:k}function b(e,t,n){return\"word\"==e?(n.tagName=t.current(),o=\"tag\",C):l.allowMissingTagName&&\"endTag\"==e?(o=\"tag bracket\",C(e,t,n)):(o=\"error\",b)}function y(e,t,n){if(\"word\"==e){var i=t.current();return n.context&&n.context.tagName!=i&&l.implicitlyClosed.hasOwnProperty(n.context.tagName)&&x(n),n.context&&n.context.tagName==i||!1===l.matchClosing?(o=\"tag\",w):(o=\"tag error\",S)}return l.allowMissingTagName&&\"endTag\"==e?(o=\"tag bracket\",w(e,t,n)):(o=\"error\",S)}function w(e,t,n){return\"endTag\"!=e?(o=\"error\",w):(x(n),k)}function S(e,t,n){return o=\"error\",w(e,t,n)}function C(e,t,n){if(\"word\"==e)return o=\"attribute\",T;if(\"endTag\"==e||\"selfcloseTag\"==e){var i=n.tagName,r=n.tagStart;return n.tagName=n.tagStart=null,\"selfcloseTag\"==e||l.autoSelfClosers.hasOwnProperty(i)?v(n,i):(v(n,i),n.context=new g(n,i,r==n.indented)),k}return o=\"error\",C}function T(e,t,n){return\"equals\"==e?L:(l.allowMissing||(o=\"error\"),C(e,t,n))}function L(e,t,n){return\"string\"==e?_:\"word\"==e&&l.allowUnquoted?(o=\"string\",C):(o=\"error\",C(e,t,n))}function _(e,t,n){return\"string\"==e?_:C(e,t,n)}return d.isInText=!0,{startState:function(e){var t={tokenize:d,state:k,indented:e||0,tagName:null,tagStart:null,context:null};return null!=e&&(t.baseIndent=e),t},token:function(e,t){if(!t.tagName&&e.sol()&&(t.indented=e.indentation()),e.eatSpace())return null;a=null;var n=t.tokenize(e,t);return(n||a)&&\"comment\"!=n&&(o=null,t.state=t.state(a||n,e,t),o&&(n=\"error\"==o?n+\" error\":o)),n},indent:function(t,n,i){var r=t.context;if(t.tokenize.isInAttribute)return t.tagStart==t.indented?t.stringStartCol+1:t.indented+s;if(r&&r.noIndent)return e.Pass;if(t.tokenize!=u&&t.tokenize!=d)return i?i.match(/^(\\s*)/)[0].length:0;if(t.tagName)return!1!==l.multilineTagIndentPastTag?t.tagStart+t.tagName.length+2:t.tagStart+s*(l.multilineTagIndentFactor||1);if(l.alignCDATA&&/<!\\[CDATA\\[/.test(n))return 0;var a=n&&/^<(\\/)?([\\w_:\\.-]*)/.exec(n);if(a&&a[1])while(r){if(r.tagName==a[2]){r=r.prev;break}if(!l.implicitlyClosed.hasOwnProperty(r.tagName))break;r=r.prev}else if(a)while(r){var o=l.contextGrabbers[r.tagName];if(!o||!o.hasOwnProperty(a[2]))break;r=r.prev}while(r&&r.prev&&!r.startOfLine)r=r.prev;return r?r.indent+s:t.baseIndent||0},electricInput:/<\\/[\\s\\w:]+>$/,blockCommentStart:\"\\x3c!--\",blockCommentEnd:\"--\\x3e\",configuration:l.htmlMode?\"html\":\"xml\",helperType:l.htmlMode?\"html\":\"xml\",skipAttribute:function(e){e.state==L&&(e.state=C)}}}),e.defineMIME(\"text/xml\",\"xml\"),e.defineMIME(\"application/xml\",\"xml\"),e.mimeModes.hasOwnProperty(\"text/html\")||e.defineMIME(\"text/html\",{name:\"xml\",htmlMode:!0})})},d7d5:function(e,t,n){(function(e){e(n(\"56b3\"))})(function(e){function t(e){e.state.placeholder&&(e.state.placeholder.parentNode.removeChild(e.state.placeholder),e.state.placeholder=null)}function n(e){t(e);var n=e.state.placeholder=document.createElement(\"pre\");n.style.cssText=\"height: 0; overflow: visible\",n.style.direction=e.getOption(\"direction\"),n.className=\"CodeMirror-placeholder\";var i=e.getOption(\"placeholder\");\"string\"==typeof i&&(i=document.createTextNode(i)),n.appendChild(i),e.display.lineSpace.insertBefore(n,e.display.lineSpace.firstChild)}function i(e){a(e)&&n(e)}function r(e){var i=e.getWrapperElement(),r=a(e);i.className=i.className.replace(\" CodeMirror-empty\",\"\")+(r?\" CodeMirror-empty\":\"\"),r?n(e):t(e)}function a(e){return 1===e.lineCount()&&\"\"===e.getLine(0)}e.defineOption(\"placeholder\",\"\",function(n,a,o){var s=o&&o!=e.Init;if(a&&!s)n.on(\"blur\",i),n.on(\"change\",r),n.on(\"swapDoc\",r),r(n);else if(!a&&s){n.off(\"blur\",i),n.off(\"change\",r),n.off(\"swapDoc\",r),t(n);var l=n.getWrapperElement();l.className=l.className.replace(\" CodeMirror-empty\",\"\")}a&&!n.hasFocus()&&i(n)})})},ea65:function(e,t,n){\"use strict\";var i=n(\"4a5d\");function r(e){e=e||{},\"function\"===typeof e.codeMirrorInstance&&\"function\"===typeof e.codeMirrorInstance.defineMode?(String.prototype.includes||(String.prototype.includes=function(){return-1!==String.prototype.indexOf.apply(this,arguments)}),e.codeMirrorInstance.defineMode(\"spell-checker\",function(t){if(!r.aff_loading){r.aff_loading=!0;var n=new XMLHttpRequest;n.open(\"GET\",\"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.aff\",!0),n.onload=function(){4===n.readyState&&200===n.status&&(r.aff_data=n.responseText,r.num_loaded++,2==r.num_loaded&&(r.typo=new i(\"en_US\",r.aff_data,r.dic_data,{platform:\"any\"})))},n.send(null)}if(!r.dic_loading){r.dic_loading=!0;var a=new XMLHttpRequest;a.open(\"GET\",\"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.dic\",!0),a.onload=function(){4===a.readyState&&200===a.status&&(r.dic_data=a.responseText,r.num_loaded++,2==r.num_loaded&&(r.typo=new i(\"en_US\",r.aff_data,r.dic_data,{platform:\"any\"})))},a.send(null)}var o='!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~ ',s={token:function(e){var t=e.peek(),n=\"\";if(o.includes(t))return e.next(),null;while(null!=(t=e.peek())&&!o.includes(t))n+=t,e.next();return r.typo&&!r.typo.check(n)?\"spell-error\":null}},l=e.codeMirrorInstance.getMode(t,t.backdrop||\"text/plain\");return e.codeMirrorInstance.overlayMode(l,s,!0)})):console.log(\"CodeMirror Spell Checker: You must provide an instance of CodeMirror via the option `codeMirrorInstance`\")}r.num_loaded=0,r.aff_loading=!1,r.dic_loading=!1,r.aff_data=\"\",r.dic_data=\"\",r.typo,e.exports=r},ebfb:function(e,t,n){\"use strict\";var i=n(\"56b3\");n(\"1ef7\"),n(\"bf7d\"),n(\"6d78\"),n(\"959b\"),n(\"9eb9\"),n(\"d7d5\"),n(\"9948\"),n(\"44a0\"),n(\"d5e0\");var r=n(\"ea65\"),a=n(\"0e54\"),o=/Mac/.test(navigator.platform),s={toggleBold:v,toggleItalic:k,drawLink:I,toggleHeadingSmaller:S,toggleHeadingBigger:C,drawImage:A,toggleBlockquote:w,toggleOrderedList:M,toggleUnorderedList:N,toggleCodeBlock:y,togglePreview:O,toggleStrikethrough:b,toggleHeading1:T,toggleHeading2:L,toggleHeading3:_,cleanBlock:E,drawTable:q,drawHorizontalRule:R,undo:z,redo:j,toggleSideBySide:$,toggleFullScreen:x},l={toggleBold:\"Cmd-B\",toggleItalic:\"Cmd-I\",drawLink:\"Cmd-K\",toggleHeadingSmaller:\"Cmd-H\",toggleHeadingBigger:\"Shift-Cmd-H\",cleanBlock:\"Cmd-E\",drawImage:\"Cmd-Alt-I\",toggleBlockquote:\"Cmd-'\",toggleOrderedList:\"Cmd-Alt-L\",toggleUnorderedList:\"Cmd-L\",toggleCodeBlock:\"Cmd-Alt-C\",togglePreview:\"Cmd-P\",toggleSideBySide:\"F9\",toggleFullScreen:\"F11\"},c=function(e){for(var t in s)if(s[t]===e)return t;return null},m=function(){var e=!1;return function(t){(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(t.substr(0,4)))&&(e=!0)}(navigator.userAgent||navigator.vendor||window.opera),e};function d(e){return e=o?e.replace(\"Ctrl\",\"Cmd\"):e.replace(\"Cmd\",\"Ctrl\"),e}function u(e,t,n){e=e||{};var i=document.createElement(\"a\");return t=void 0==t||t,e.title&&t&&(i.title=h(e.title,e.action,n),o&&(i.title=i.title.replace(\"Ctrl\",\"⌘\"),i.title=i.title.replace(\"Alt\",\"⌥\"))),i.tabIndex=-1,i.className=e.className,i}function p(){var e=document.createElement(\"i\");return e.className=\"separator\",e.innerHTML=\"|\",e}function h(e,t,n){var i,r=e;return t&&(i=c(t),n[i]&&(r+=\" (\"+d(n[i])+\")\")),r}function f(e,t){t=t||e.getCursor(\"start\");var n=e.getTokenAt(t);if(!n.type)return{};for(var i,r,a=n.type.split(\" \"),o={},s=0;s<a.length;s++)i=a[s],\"strong\"===i?o.bold=!0:\"variable-2\"===i?(r=e.getLine(t.line),/^\\s*\\d+\\.\\s/.test(r)?o[\"ordered-list\"]=!0:o[\"unordered-list\"]=!0):\"atom\"===i?o.quote=!0:\"em\"===i?o.italic=!0:\"quote\"===i?o.quote=!0:\"strikethrough\"===i?o.strikethrough=!0:\"comment\"===i?o.code=!0:\"link\"===i?o.link=!0:\"tag\"===i?o.image=!0:i.match(/^header(\\-[1-6])?$/)&&(o[i.replace(\"header\",\"heading\")]=!0);return o}var g=\"\";function x(e){var t=e.codemirror;t.setOption(\"fullScreen\",!t.getOption(\"fullScreen\")),t.getOption(\"fullScreen\")?(g=document.body.style.overflow,document.body.style.overflow=\"hidden\"):document.body.style.overflow=g;var n=t.getWrapperElement();/fullscreen/.test(n.previousSibling.className)?n.previousSibling.className=n.previousSibling.className.replace(/\\s*fullscreen\\b/,\"\"):n.previousSibling.className+=\" fullscreen\";var i=e.toolbarElements.fullscreen;/active/.test(i.className)?i.className=i.className.replace(/\\s*active\\s*/g,\"\"):i.className+=\" active\";var r=t.getWrapperElement().nextSibling;/editor-preview-active-side/.test(r.className)&&$(e)}function v(e){B(e,\"bold\",e.options.blockStyles.bold)}function k(e){B(e,\"italic\",e.options.blockStyles.italic)}function b(e){B(e,\"strikethrough\",\"~~\")}function y(e){var t=e.options.blockStyles.code;function n(e){if(\"object\"!==typeof e)throw\"fencing_line() takes a 'line' object (not a line number, or line text).  Got: \"+typeof e+\": \"+e;return e.styles&&e.styles[2]&&-1!==e.styles[2].indexOf(\"formatting-code-block\")}function i(e){return e.state.base.base||e.state.base}function r(e,t,r,a,o){r=r||e.getLineHandle(t),a=a||e.getTokenAt({line:t,ch:1}),o=o||!!r.text&&e.getTokenAt({line:t,ch:r.text.length-1});var s=a.type?a.type.split(\" \"):[];return o&&i(o).indentedCode?\"indented\":-1!==s.indexOf(\"comment\")&&(i(a).fencedChars||i(o).fencedChars||n(r)?\"fenced\":\"single\")}function a(e,t,n,i){var r=t.line+1,a=n.line+1,o=t.line!==n.line,s=i+\"\\n\",l=\"\\n\"+i;o&&a++,o&&0===n.ch&&(l=i+\"\\n\",a--),P(e,!1,[s,l]),e.setSelection({line:r,ch:0},{line:a,ch:0})}var o,s,l,c=e.codemirror,m=c.getCursor(\"start\"),d=c.getCursor(\"end\"),u=c.getTokenAt({line:m.line,ch:m.ch||1}),p=c.getLineHandle(m.line),h=r(c,m.line,p,u);if(\"single\"===h){var f=p.text.slice(0,m.ch).replace(\"`\",\"\"),g=p.text.slice(m.ch).replace(\"`\",\"\");c.replaceRange(f+g,{line:m.line,ch:0},{line:m.line,ch:99999999999999}),m.ch--,m!==d&&d.ch--,c.setSelection(m,d),c.focus()}else if(\"fenced\"===h)if(m.line!==d.line||m.ch!==d.ch){for(o=m.line;o>=0;o--)if(p=c.getLineHandle(o),n(p))break;var x,v,k,b,y=c.getTokenAt({line:o,ch:1}),w=i(y).fencedChars;n(c.getLineHandle(m.line))?(x=\"\",v=m.line):n(c.getLineHandle(m.line-1))?(x=\"\",v=m.line-1):(x=w+\"\\n\",v=m.line),n(c.getLineHandle(d.line))?(k=\"\",b=d.line,0===d.ch&&(b+=1)):0!==d.ch&&n(c.getLineHandle(d.line+1))?(k=\"\",b=d.line+1):(k=w+\"\\n\",b=d.line+1),0===d.ch&&(b-=1),c.operation(function(){c.replaceRange(k,{line:b,ch:0},{line:b+(k?0:1),ch:0}),c.replaceRange(x,{line:v,ch:0},{line:v+(x?0:1),ch:0})}),c.setSelection({line:v+(x?1:0),ch:0},{line:b+(x?1:-1),ch:0}),c.focus()}else{var S=m.line;if(n(c.getLineHandle(m.line))&&(\"fenced\"===r(c,m.line+1)?(o=m.line,S=m.line+1):(s=m.line,S=m.line-1)),void 0===o)for(o=S;o>=0;o--)if(p=c.getLineHandle(o),n(p))break;if(void 0===s)for(l=c.lineCount(),s=S;s<l;s++)if(p=c.getLineHandle(s),n(p))break;c.operation(function(){c.replaceRange(\"\",{line:o,ch:0},{line:o+1,ch:0}),c.replaceRange(\"\",{line:s-1,ch:0},{line:s,ch:0})}),c.focus()}else if(\"indented\"===h){if(m.line!==d.line||m.ch!==d.ch)o=m.line,s=d.line,0===d.ch&&s--;else{for(o=m.line;o>=0;o--)if(p=c.getLineHandle(o),!p.text.match(/^\\s*$/)&&\"indented\"!==r(c,o,p)){o+=1;break}for(l=c.lineCount(),s=m.line;s<l;s++)if(p=c.getLineHandle(s),!p.text.match(/^\\s*$/)&&\"indented\"!==r(c,s,p)){s-=1;break}}var C=c.getLineHandle(s+1),T=C&&c.getTokenAt({line:s+1,ch:C.text.length-1}),L=T&&i(T).indentedCode;L&&c.replaceRange(\"\\n\",{line:s+1,ch:0});for(var _=o;_<=s;_++)c.indentLine(_,\"subtract\");c.focus()}else{var N=m.line===d.line&&m.ch===d.ch&&0===m.ch,M=m.line!==d.line;N||M?a(c,m,d,t):P(c,!1,[\"`\",\"`\"])}}function w(e){var t=e.codemirror;F(t,\"quote\")}function S(e){var t=e.codemirror;H(t,\"smaller\")}function C(e){var t=e.codemirror;H(t,\"bigger\")}function T(e){var t=e.codemirror;H(t,void 0,1)}function L(e){var t=e.codemirror;H(t,void 0,2)}function _(e){var t=e.codemirror;H(t,void 0,3)}function N(e){var t=e.codemirror;F(t,\"unordered-list\")}function M(e){var t=e.codemirror;F(t,\"ordered-list\")}function E(e){var t=e.codemirror;D(t)}function I(e){var t=e.codemirror,n=f(t),i=e.options,r=\"http://\";if(i.promptURLs&&(r=prompt(i.promptTexts.link),!r))return!1;P(t,n.link,i.insertTexts.link,r)}function A(e){var t=e.codemirror,n=f(t),i=e.options,r=\"http://\";if(i.promptURLs&&(r=prompt(i.promptTexts.image),!r))return!1;P(t,n.image,i.insertTexts.image,r)}function q(e){var t=e.codemirror,n=f(t),i=e.options;P(t,n.table,i.insertTexts.table)}function R(e){var t=e.codemirror,n=f(t),i=e.options;P(t,n.image,i.insertTexts.horizontalRule)}function z(e){var t=e.codemirror;t.undo(),t.focus()}function j(e){var t=e.codemirror;t.redo(),t.focus()}function $(e){var t=e.codemirror,n=t.getWrapperElement(),i=n.nextSibling,r=e.toolbarElements[\"side-by-side\"],a=!1;/editor-preview-active-side/.test(i.className)?(i.className=i.className.replace(/\\s*editor-preview-active-side\\s*/g,\"\"),r.className=r.className.replace(/\\s*active\\s*/g,\"\"),n.className=n.className.replace(/\\s*CodeMirror-sided\\s*/g,\" \")):(setTimeout(function(){t.getOption(\"fullScreen\")||x(e),i.className+=\" editor-preview-active-side\"},1),r.className+=\" active\",n.className+=\" CodeMirror-sided\",a=!0);var o=n.lastChild;if(/editor-preview-active/.test(o.className)){o.className=o.className.replace(/\\s*editor-preview-active\\s*/g,\"\");var s=e.toolbarElements.preview,l=n.previousSibling;s.className=s.className.replace(/\\s*active\\s*/g,\"\"),l.className=l.className.replace(/\\s*disabled-for-preview*/g,\"\")}var c=function(){i.innerHTML=e.options.previewRender(e.value(),i)};t.sideBySideRenderingFunction||(t.sideBySideRenderingFunction=c),a?(i.innerHTML=e.options.previewRender(e.value(),i),t.on(\"update\",t.sideBySideRenderingFunction)):t.off(\"update\",t.sideBySideRenderingFunction),t.refresh()}function O(e){var t=e.codemirror,n=t.getWrapperElement(),i=n.previousSibling,r=!!e.options.toolbar&&e.toolbarElements.preview,a=n.lastChild;a&&/editor-preview/.test(a.className)||(a=document.createElement(\"div\"),a.className=\"editor-preview\",n.appendChild(a)),/editor-preview-active/.test(a.className)?(a.className=a.className.replace(/\\s*editor-preview-active\\s*/g,\"\"),r&&(r.className=r.className.replace(/\\s*active\\s*/g,\"\"),i.className=i.className.replace(/\\s*disabled-for-preview*/g,\"\"))):(setTimeout(function(){a.className+=\" editor-preview-active\"},1),r&&(r.className+=\" active\",i.className+=\" disabled-for-preview\")),a.innerHTML=e.options.previewRender(e.value(),a);var o=t.getWrapperElement().nextSibling;/editor-preview-active-side/.test(o.className)&&$(e)}function P(e,t,n,i){if(!/editor-preview-active/.test(e.getWrapperElement().lastChild.className)){var r,a=n[0],o=n[1],s=e.getCursor(\"start\"),l=e.getCursor(\"end\");i&&(o=o.replace(\"#url#\",i)),t?(r=e.getLine(s.line),a=r.slice(0,s.ch),o=r.slice(s.ch),e.replaceRange(a+o,{line:s.line,ch:0})):(r=e.getSelection(),e.replaceSelection(a+r+o),s.ch+=a.length,s!==l&&(l.ch+=a.length)),e.setSelection(s,l),e.focus()}}function H(e,t,n){if(!/editor-preview-active/.test(e.getWrapperElement().lastChild.className)){for(var i=e.getCursor(\"start\"),r=e.getCursor(\"end\"),a=i.line;a<=r.line;a++)(function(i){var r=e.getLine(i),a=r.search(/[^#]/);r=void 0!==t?a<=0?\"bigger\"==t?\"###### \"+r:\"# \"+r:6==a&&\"smaller\"==t?r.substr(7):1==a&&\"bigger\"==t?r.substr(2):\"bigger\"==t?r.substr(1):\"#\"+r:1==n?a<=0?\"# \"+r:a==n?r.substr(a+1):\"# \"+r.substr(a+1):2==n?a<=0?\"## \"+r:a==n?r.substr(a+1):\"## \"+r.substr(a+1):a<=0?\"### \"+r:a==n?r.substr(a+1):\"### \"+r.substr(a+1),e.replaceRange(r,{line:i,ch:0},{line:i,ch:99999999999999})})(a);e.focus()}}function F(e,t){if(!/editor-preview-active/.test(e.getWrapperElement().lastChild.className)){for(var n=f(e),i=e.getCursor(\"start\"),r=e.getCursor(\"end\"),a={quote:/^(\\s*)\\>\\s+/,\"unordered-list\":/^(\\s*)(\\*|\\-|\\+)\\s+/,\"ordered-list\":/^(\\s*)\\d+\\.\\s+/},o={quote:\"> \",\"unordered-list\":\"* \",\"ordered-list\":\"1. \"},s=i.line;s<=r.line;s++)(function(i){var r=e.getLine(i);r=n[t]?r.replace(a[t],\"$1\"):o[t]+r,e.replaceRange(r,{line:i,ch:0},{line:i,ch:99999999999999})})(s);e.focus()}}function B(e,t,n,i){if(!/editor-preview-active/.test(e.codemirror.getWrapperElement().lastChild.className)){i=\"undefined\"===typeof i?n:i;var r,a=e.codemirror,o=f(a),s=n,l=i,c=a.getCursor(\"start\"),m=a.getCursor(\"end\");o[t]?(r=a.getLine(c.line),s=r.slice(0,c.ch),l=r.slice(c.ch),\"bold\"==t?(s=s.replace(/(\\*\\*|__)(?![\\s\\S]*(\\*\\*|__))/,\"\"),l=l.replace(/(\\*\\*|__)/,\"\")):\"italic\"==t?(s=s.replace(/(\\*|_)(?![\\s\\S]*(\\*|_))/,\"\"),l=l.replace(/(\\*|_)/,\"\")):\"strikethrough\"==t&&(s=s.replace(/(\\*\\*|~~)(?![\\s\\S]*(\\*\\*|~~))/,\"\"),l=l.replace(/(\\*\\*|~~)/,\"\")),a.replaceRange(s+l,{line:c.line,ch:0},{line:c.line,ch:99999999999999}),\"bold\"==t||\"strikethrough\"==t?(c.ch-=2,c!==m&&(m.ch-=2)):\"italic\"==t&&(c.ch-=1,c!==m&&(m.ch-=1))):(r=a.getSelection(),\"bold\"==t?(r=r.split(\"**\").join(\"\"),r=r.split(\"__\").join(\"\")):\"italic\"==t?(r=r.split(\"*\").join(\"\"),r=r.split(\"_\").join(\"\")):\"strikethrough\"==t&&(r=r.split(\"~~\").join(\"\")),a.replaceSelection(s+r+l),c.ch+=n.length,m.ch=c.ch+r.length),a.setSelection(c,m),a.focus()}}function D(e){if(!/editor-preview-active/.test(e.getWrapperElement().lastChild.className))for(var t,n=e.getCursor(\"start\"),i=e.getCursor(\"end\"),r=n.line;r<=i.line;r++)t=e.getLine(r),t=t.replace(/^[ ]*([# ]+|\\*|\\-|[> ]+|[0-9]+(.|\\)))[ ]*/,\"\"),e.replaceRange(t,{line:r,ch:0},{line:r,ch:99999999999999})}function U(e,t){for(var n in t)t.hasOwnProperty(n)&&(t[n]instanceof Array?e[n]=t[n].concat(e[n]instanceof Array?e[n]:[]):null!==t[n]&&\"object\"===typeof t[n]&&t[n].constructor===Object?e[n]=U(e[n]||{},t[n]):e[n]=t[n]);return e}function W(e){for(var t=1;t<arguments.length;t++)e=U(e,arguments[t]);return e}function Z(e){var t=/[a-zA-Z0-9_\\u0392-\\u03c9\\u0410-\\u04F9]+|[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af]+/g,n=e.match(t),i=0;if(null===n)return i;for(var r=0;r<n.length;r++)n[r].charCodeAt(0)>=19968?i+=n[r].length:i+=1;return i}var G={bold:{name:\"bold\",action:v,className:\"fa fa-bold\",title:\"Bold\",default:!0},italic:{name:\"italic\",action:k,className:\"fa fa-italic\",title:\"Italic\",default:!0},strikethrough:{name:\"strikethrough\",action:b,className:\"fa fa-strikethrough\",title:\"Strikethrough\"},heading:{name:\"heading\",action:S,className:\"fa fa-header\",title:\"Heading\",default:!0},\"heading-smaller\":{name:\"heading-smaller\",action:S,className:\"fa fa-header fa-header-x fa-header-smaller\",title:\"Smaller Heading\"},\"heading-bigger\":{name:\"heading-bigger\",action:C,className:\"fa fa-header fa-header-x fa-header-bigger\",title:\"Bigger Heading\"},\"heading-1\":{name:\"heading-1\",action:T,className:\"fa fa-header fa-header-x fa-header-1\",title:\"Big Heading\"},\"heading-2\":{name:\"heading-2\",action:L,className:\"fa fa-header fa-header-x fa-header-2\",title:\"Medium Heading\"},\"heading-3\":{name:\"heading-3\",action:_,className:\"fa fa-header fa-header-x fa-header-3\",title:\"Small Heading\"},\"separator-1\":{name:\"separator-1\"},code:{name:\"code\",action:y,className:\"fa fa-code\",title:\"Code\"},quote:{name:\"quote\",action:w,className:\"fa fa-quote-left\",title:\"Quote\",default:!0},\"unordered-list\":{name:\"unordered-list\",action:N,className:\"fa fa-list-ul\",title:\"Generic List\",default:!0},\"ordered-list\":{name:\"ordered-list\",action:M,className:\"fa fa-list-ol\",title:\"Numbered List\",default:!0},\"clean-block\":{name:\"clean-block\",action:E,className:\"fa fa-eraser fa-clean-block\",title:\"Clean block\"},\"separator-2\":{name:\"separator-2\"},link:{name:\"link\",action:I,className:\"fa fa-link\",title:\"Create Link\",default:!0},image:{name:\"image\",action:A,className:\"fa fa-picture-o\",title:\"Insert Image\",default:!0},table:{name:\"table\",action:q,className:\"fa fa-table\",title:\"Insert Table\"},\"horizontal-rule\":{name:\"horizontal-rule\",action:R,className:\"fa fa-minus\",title:\"Insert Horizontal Line\"},\"separator-3\":{name:\"separator-3\"},preview:{name:\"preview\",action:O,className:\"fa fa-eye no-disable\",title:\"Toggle Preview\",default:!0},\"side-by-side\":{name:\"side-by-side\",action:$,className:\"fa fa-columns no-disable no-mobile\",title:\"Toggle Side by Side\",default:!0},fullscreen:{name:\"fullscreen\",action:x,className:\"fa fa-arrows-alt no-disable no-mobile\",title:\"Toggle Fullscreen\",default:!0},\"separator-4\":{name:\"separator-4\"},guide:{name:\"guide\",action:\"https://simplemde.com/markdown-guide\",className:\"fa fa-question-circle\",title:\"Markdown Guide\",default:!0},\"separator-5\":{name:\"separator-5\"},undo:{name:\"undo\",action:z,className:\"fa fa-undo no-disable\",title:\"Undo\"},redo:{name:\"redo\",action:j,className:\"fa fa-repeat no-disable\",title:\"Redo\"}},V={link:[\"[\",\"](#url#)\"],image:[\"![](\",\"#url#)\"],table:[\"\",\"\\n\\n| Column 1 | Column 2 | Column 3 |\\n| -------- | -------- | -------- |\\n| Text     | Text     | Text     |\\n\\n\"],horizontalRule:[\"\",\"\\n\\n-----\\n\\n\"]},X={link:\"URL for the link:\",image:\"URL of the image:\"},J={bold:\"**\",code:\"```\",italic:\"*\"};function Q(e){e=e||{},e.parent=this;var t=!0;if(!1===e.autoDownloadFontAwesome&&(t=!1),!0!==e.autoDownloadFontAwesome)for(var n=document.styleSheets,i=0;i<n.length;i++)n[i].href&&n[i].href.indexOf(\"//maxcdn.bootstrapcdn.com/font-awesome/\")>-1&&(t=!1);if(t){var r=document.createElement(\"link\");r.rel=\"stylesheet\",r.href=\"https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css\",document.getElementsByTagName(\"head\")[0].appendChild(r)}if(e.element)this.element=e.element;else if(null===e.element)return void console.log(\"SimpleMDE: Error. No element was found.\");if(void 0===e.toolbar)for(var a in e.toolbar=[],G)G.hasOwnProperty(a)&&(-1!=a.indexOf(\"separator-\")&&e.toolbar.push(\"|\"),(!0===G[a].default||e.showIcons&&e.showIcons.constructor===Array&&-1!=e.showIcons.indexOf(a))&&e.toolbar.push(a));e.hasOwnProperty(\"status\")||(e.status=[\"autosave\",\"lines\",\"words\",\"cursor\"]),e.previewRender||(e.previewRender=function(e){return this.parent.markdown(e)}),e.parsingConfig=W({highlightFormatting:!0},e.parsingConfig||{}),e.insertTexts=W({},V,e.insertTexts||{}),e.promptTexts=X,e.blockStyles=W({},J,e.blockStyles||{}),e.shortcuts=W({},l,e.shortcuts||{}),void 0!=e.autosave&&void 0!=e.autosave.unique_id&&\"\"!=e.autosave.unique_id&&(e.autosave.uniqueId=e.autosave.unique_id),this.options=e,this.render(),!e.initialValue||this.options.autosave&&!0===this.options.autosave.foundSavedValue||this.value(e.initialValue)}function Y(){if(\"object\"!==typeof localStorage)return!1;try{localStorage.setItem(\"smde_localStorage\",1),localStorage.removeItem(\"smde_localStorage\")}catch(e){return!1}return!0}Q.prototype.markdown=function(e){if(a){var t={};return this.options&&this.options.renderingConfig&&!1===this.options.renderingConfig.singleLineBreaks?t.breaks=!1:t.breaks=!0,this.options&&this.options.renderingConfig&&!0===this.options.renderingConfig.codeSyntaxHighlighting&&window.hljs&&(t.highlight=function(e){return window.hljs.highlightAuto(e).value}),a.setOptions(t),a(e)}},Q.prototype.render=function(e){if(e||(e=this.element||document.getElementsByTagName(\"textarea\")[0]),!this._rendered||this._rendered!==e){this.element=e;var t,n,a=this.options,o=this,l={};for(var c in a.shortcuts)null!==a.shortcuts[c]&&null!==s[c]&&function(e){l[d(a.shortcuts[e])]=function(){s[e](o)}}(c);if(l[\"Enter\"]=\"newlineAndIndentContinueMarkdownList\",l[\"Tab\"]=\"tabAndIndentMarkdownList\",l[\"Shift-Tab\"]=\"shiftTabAndUnindentMarkdownList\",l[\"Esc\"]=function(e){e.getOption(\"fullScreen\")&&x(o)},document.addEventListener(\"keydown\",function(e){e=e||window.event,27==e.keyCode&&o.codemirror.getOption(\"fullScreen\")&&x(o)},!1),!1!==a.spellChecker?(t=\"spell-checker\",n=a.parsingConfig,n.name=\"gfm\",n.gitHubSpice=!1,r({codeMirrorInstance:i})):(t=a.parsingConfig,t.name=\"gfm\",t.gitHubSpice=!1),this.codemirror=i.fromTextArea(e,{mode:t,backdrop:n,theme:\"paper\",tabSize:void 0!=a.tabSize?a.tabSize:2,indentUnit:void 0!=a.tabSize?a.tabSize:2,indentWithTabs:!1!==a.indentWithTabs,lineNumbers:!1,autofocus:!0===a.autofocus,extraKeys:l,lineWrapping:!1!==a.lineWrapping,allowDropFileTypes:[\"text/plain\"],placeholder:a.placeholder||e.getAttribute(\"placeholder\")||\"\",styleSelectedText:void 0==a.styleSelectedText||a.styleSelectedText}),!0===a.forceSync){var m=this.codemirror;m.on(\"change\",function(){m.save()})}this.gui={},!1!==a.toolbar&&(this.gui.toolbar=this.createToolbar()),!1!==a.status&&(this.gui.statusbar=this.createStatusbar()),void 0!=a.autosave&&!0===a.autosave.enabled&&this.autosave(),this.gui.sideBySide=this.createSideBySide(),this._rendered=this.element;var u=this.codemirror;setTimeout(function(){u.refresh()}.bind(u),0)}},Q.prototype.autosave=function(){if(Y()){var e=this;if(void 0==this.options.autosave.uniqueId||\"\"==this.options.autosave.uniqueId)return void console.log(\"SimpleMDE: You must set a uniqueId to use the autosave feature\");null!=e.element.form&&void 0!=e.element.form&&e.element.form.addEventListener(\"submit\",function(){localStorage.removeItem(\"smde_\"+e.options.autosave.uniqueId)}),!0!==this.options.autosave.loaded&&(\"string\"==typeof localStorage.getItem(\"smde_\"+this.options.autosave.uniqueId)&&\"\"!=localStorage.getItem(\"smde_\"+this.options.autosave.uniqueId)&&(this.codemirror.setValue(localStorage.getItem(\"smde_\"+this.options.autosave.uniqueId)),this.options.autosave.foundSavedValue=!0),this.options.autosave.loaded=!0),localStorage.setItem(\"smde_\"+this.options.autosave.uniqueId,e.value());var t=document.getElementById(\"autosaved\");if(null!=t&&void 0!=t&&\"\"!=t){var n=new Date,i=n.getHours(),r=n.getMinutes(),a=\"am\",o=i;o>=12&&(o=i-12,a=\"pm\"),0==o&&(o=12),r=r<10?\"0\"+r:r,t.innerHTML=\"Autosaved: \"+o+\":\"+r+\" \"+a}this.autosaveTimeoutId=setTimeout(function(){e.autosave()},this.options.autosave.delay||1e4)}else console.log(\"SimpleMDE: localStorage not available, cannot autosave\")},Q.prototype.clearAutosavedValue=function(){if(Y()){if(void 0==this.options.autosave||void 0==this.options.autosave.uniqueId||\"\"==this.options.autosave.uniqueId)return void console.log(\"SimpleMDE: You must set a uniqueId to clear the autosave value\");localStorage.removeItem(\"smde_\"+this.options.autosave.uniqueId)}else console.log(\"SimpleMDE: localStorage not available, cannot autosave\")},Q.prototype.createSideBySide=function(){var e=this.codemirror,t=e.getWrapperElement(),n=t.nextSibling;n&&/editor-preview-side/.test(n.className)||(n=document.createElement(\"div\"),n.className=\"editor-preview-side\",t.parentNode.insertBefore(n,t.nextSibling));var i=!1,r=!1;return e.on(\"scroll\",function(e){if(i)i=!1;else{r=!0;var t=e.getScrollInfo().height-e.getScrollInfo().clientHeight,a=parseFloat(e.getScrollInfo().top)/t,o=(n.scrollHeight-n.clientHeight)*a;n.scrollTop=o}}),n.onscroll=function(){if(r)r=!1;else{i=!0;var t=n.scrollHeight-n.clientHeight,a=parseFloat(n.scrollTop)/t,o=(e.getScrollInfo().height-e.getScrollInfo().clientHeight)*a;e.scrollTo(0,o)}},n},Q.prototype.createToolbar=function(e){if(e=e||this.options.toolbar,e&&0!==e.length){var t;for(t=0;t<e.length;t++)void 0!=G[e[t]]&&(e[t]=G[e[t]]);var n=document.createElement(\"div\");n.className=\"editor-toolbar\";var i=this,r={};for(i.toolbar=e,t=0;t<e.length;t++)if((\"guide\"!=e[t].name||!1!==i.options.toolbarGuideIcon)&&(!i.options.hideIcons||-1==i.options.hideIcons.indexOf(e[t].name))&&(\"fullscreen\"!=e[t].name&&\"side-by-side\"!=e[t].name||!m())){if(\"|\"===e[t]){for(var a=!1,o=t+1;o<e.length;o++)\"|\"===e[o]||i.options.hideIcons&&-1!=i.options.hideIcons.indexOf(e[o].name)||(a=!0);if(!a)continue}(function(e){var t;t=\"|\"===e?p():u(e,i.options.toolbarTips,i.options.shortcuts),e.action&&(\"function\"===typeof e.action?t.onclick=function(t){t.preventDefault(),e.action(i)}:\"string\"===typeof e.action&&(t.href=e.action,t.target=\"_blank\")),r[e.name||e]=t,n.appendChild(t)})(e[t])}i.toolbarElements=r;var s=this.codemirror;s.on(\"cursorActivity\",function(){var e=f(s);for(var t in r)(function(t){var n=r[t];e[t]?n.className+=\" active\":\"fullscreen\"!=t&&\"side-by-side\"!=t&&(n.className=n.className.replace(/\\s*active\\s*/g,\"\"))})(t)});var l=s.getWrapperElement();return l.parentNode.insertBefore(n,l),n}},Q.prototype.createStatusbar=function(e){e=e||this.options.status;var t=this.options,n=this.codemirror;if(e&&0!==e.length){var i,r,a,o=[];for(i=0;i<e.length;i++)if(r=void 0,a=void 0,\"object\"===typeof e[i])o.push({className:e[i].className,defaultValue:e[i].defaultValue,onUpdate:e[i].onUpdate});else{var s=e[i];\"words\"===s?(a=function(e){e.innerHTML=Z(n.getValue())},r=function(e){e.innerHTML=Z(n.getValue())}):\"lines\"===s?(a=function(e){e.innerHTML=n.lineCount()},r=function(e){e.innerHTML=n.lineCount()}):\"cursor\"===s?(a=function(e){e.innerHTML=\"0:0\"},r=function(e){var t=n.getCursor();e.innerHTML=t.line+\":\"+t.ch}):\"autosave\"===s&&(a=function(e){void 0!=t.autosave&&!0===t.autosave.enabled&&e.setAttribute(\"id\",\"autosaved\")}),o.push({className:s,defaultValue:a,onUpdate:r})}var l=document.createElement(\"div\");for(l.className=\"editor-statusbar\",i=0;i<o.length;i++){var c=o[i],m=document.createElement(\"span\");m.className=c.className,\"function\"===typeof c.defaultValue&&c.defaultValue(m),\"function\"===typeof c.onUpdate&&this.codemirror.on(\"update\",function(e,t){return function(){t.onUpdate(e)}}(m,c)),l.appendChild(m)}var d=this.codemirror.getWrapperElement();return d.parentNode.insertBefore(l,d.nextSibling),l}},Q.prototype.value=function(e){return void 0===e?this.codemirror.getValue():(this.codemirror.getDoc().setValue(e),this)},Q.toggleBold=v,Q.toggleItalic=k,Q.toggleStrikethrough=b,Q.toggleBlockquote=w,Q.toggleHeadingSmaller=S,Q.toggleHeadingBigger=C,Q.toggleHeading1=T,Q.toggleHeading2=L,Q.toggleHeading3=_,Q.toggleCodeBlock=y,Q.toggleUnorderedList=N,Q.toggleOrderedList=M,Q.cleanBlock=E,Q.drawLink=I,Q.drawImage=A,Q.drawTable=q,Q.drawHorizontalRule=R,Q.undo=z,Q.redo=j,Q.togglePreview=O,Q.toggleSideBySide=$,Q.toggleFullScreen=x,Q.prototype.toggleBold=function(){v(this)},Q.prototype.toggleItalic=function(){k(this)},Q.prototype.toggleStrikethrough=function(){b(this)},Q.prototype.toggleBlockquote=function(){w(this)},Q.prototype.toggleHeadingSmaller=function(){S(this)},Q.prototype.toggleHeadingBigger=function(){C(this)},Q.prototype.toggleHeading1=function(){T(this)},Q.prototype.toggleHeading2=function(){L(this)},Q.prototype.toggleHeading3=function(){_(this)},Q.prototype.toggleCodeBlock=function(){y(this)},Q.prototype.toggleUnorderedList=function(){N(this)},Q.prototype.toggleOrderedList=function(){M(this)},Q.prototype.cleanBlock=function(){E(this)},Q.prototype.drawLink=function(){I(this)},Q.prototype.drawImage=function(){A(this)},Q.prototype.drawTable=function(){q(this)},Q.prototype.drawHorizontalRule=function(){R(this)},Q.prototype.undo=function(){z(this)},Q.prototype.redo=function(){j(this)},Q.prototype.togglePreview=function(){O(this)},Q.prototype.toggleSideBySide=function(){$(this)},Q.prototype.toggleFullScreen=function(){x(this)},Q.prototype.isPreviewActive=function(){var e=this.codemirror,t=e.getWrapperElement(),n=t.lastChild;return/editor-preview-active/.test(n.className)},Q.prototype.isSideBySideActive=function(){var e=this.codemirror,t=e.getWrapperElement(),n=t.nextSibling;return/editor-preview-active-side/.test(n.className)},Q.prototype.isFullscreenActive=function(){var e=this.codemirror;return e.getOption(\"fullScreen\")},Q.prototype.getState=function(){var e=this.codemirror;return f(e)},Q.prototype.toTextArea=function(){var e=this.codemirror,t=e.getWrapperElement();t.parentNode&&(this.gui.toolbar&&t.parentNode.removeChild(this.gui.toolbar),this.gui.statusbar&&t.parentNode.removeChild(this.gui.statusbar),this.gui.sideBySide&&t.parentNode.removeChild(this.gui.sideBySide)),e.toTextArea(),this.autosaveTimeoutId&&(clearTimeout(this.autosaveTimeoutId),this.autosaveTimeoutId=void 0,this.clearAutosavedValue())},e.exports=Q},f040:function(e,t,n){(function(e){e(n(\"56b3\"))})(function(e){\"use strict\";e.modeInfo=[{name:\"APL\",mime:\"text/apl\",mode:\"apl\",ext:[\"dyalog\",\"apl\"]},{name:\"PGP\",mimes:[\"application/pgp\",\"application/pgp-encrypted\",\"application/pgp-keys\",\"application/pgp-signature\"],mode:\"asciiarmor\",ext:[\"asc\",\"pgp\",\"sig\"]},{name:\"ASN.1\",mime:\"text/x-ttcn-asn\",mode:\"asn.1\",ext:[\"asn\",\"asn1\"]},{name:\"Asterisk\",mime:\"text/x-asterisk\",mode:\"asterisk\",file:/^extensions\\.conf$/i},{name:\"Brainfuck\",mime:\"text/x-brainfuck\",mode:\"brainfuck\",ext:[\"b\",\"bf\"]},{name:\"C\",mime:\"text/x-csrc\",mode:\"clike\",ext:[\"c\",\"h\",\"ino\"]},{name:\"C++\",mime:\"text/x-c++src\",mode:\"clike\",ext:[\"cpp\",\"c++\",\"cc\",\"cxx\",\"hpp\",\"h++\",\"hh\",\"hxx\"],alias:[\"cpp\"]},{name:\"Cobol\",mime:\"text/x-cobol\",mode:\"cobol\",ext:[\"cob\",\"cpy\"]},{name:\"C#\",mime:\"text/x-csharp\",mode:\"clike\",ext:[\"cs\"],alias:[\"csharp\"]},{name:\"Clojure\",mime:\"text/x-clojure\",mode:\"clojure\",ext:[\"clj\",\"cljc\",\"cljx\"]},{name:\"ClojureScript\",mime:\"text/x-clojurescript\",mode:\"clojure\",ext:[\"cljs\"]},{name:\"Closure Stylesheets (GSS)\",mime:\"text/x-gss\",mode:\"css\",ext:[\"gss\"]},{name:\"CMake\",mime:\"text/x-cmake\",mode:\"cmake\",ext:[\"cmake\",\"cmake.in\"],file:/^CMakeLists.txt$/},{name:\"CoffeeScript\",mimes:[\"application/vnd.coffeescript\",\"text/coffeescript\",\"text/x-coffeescript\"],mode:\"coffeescript\",ext:[\"coffee\"],alias:[\"coffee\",\"coffee-script\"]},{name:\"Common Lisp\",mime:\"text/x-common-lisp\",mode:\"commonlisp\",ext:[\"cl\",\"lisp\",\"el\"],alias:[\"lisp\"]},{name:\"Cypher\",mime:\"application/x-cypher-query\",mode:\"cypher\",ext:[\"cyp\",\"cypher\"]},{name:\"Cython\",mime:\"text/x-cython\",mode:\"python\",ext:[\"pyx\",\"pxd\",\"pxi\"]},{name:\"Crystal\",mime:\"text/x-crystal\",mode:\"crystal\",ext:[\"cr\"]},{name:\"CSS\",mime:\"text/css\",mode:\"css\",ext:[\"css\"]},{name:\"CQL\",mime:\"text/x-cassandra\",mode:\"sql\",ext:[\"cql\"]},{name:\"D\",mime:\"text/x-d\",mode:\"d\",ext:[\"d\"]},{name:\"Dart\",mimes:[\"application/dart\",\"text/x-dart\"],mode:\"dart\",ext:[\"dart\"]},{name:\"diff\",mime:\"text/x-diff\",mode:\"diff\",ext:[\"diff\",\"patch\"]},{name:\"Django\",mime:\"text/x-django\",mode:\"django\"},{name:\"Dockerfile\",mime:\"text/x-dockerfile\",mode:\"dockerfile\",file:/^Dockerfile$/},{name:\"DTD\",mime:\"application/xml-dtd\",mode:\"dtd\",ext:[\"dtd\"]},{name:\"Dylan\",mime:\"text/x-dylan\",mode:\"dylan\",ext:[\"dylan\",\"dyl\",\"intr\"]},{name:\"EBNF\",mime:\"text/x-ebnf\",mode:\"ebnf\"},{name:\"ECL\",mime:\"text/x-ecl\",mode:\"ecl\",ext:[\"ecl\"]},{name:\"edn\",mime:\"application/edn\",mode:\"clojure\",ext:[\"edn\"]},{name:\"Eiffel\",mime:\"text/x-eiffel\",mode:\"eiffel\",ext:[\"e\"]},{name:\"Elm\",mime:\"text/x-elm\",mode:\"elm\",ext:[\"elm\"]},{name:\"Embedded Javascript\",mime:\"application/x-ejs\",mode:\"htmlembedded\",ext:[\"ejs\"]},{name:\"Embedded Ruby\",mime:\"application/x-erb\",mode:\"htmlembedded\",ext:[\"erb\"]},{name:\"Erlang\",mime:\"text/x-erlang\",mode:\"erlang\",ext:[\"erl\"]},{name:\"Esper\",mime:\"text/x-esper\",mode:\"sql\"},{name:\"Factor\",mime:\"text/x-factor\",mode:\"factor\",ext:[\"factor\"]},{name:\"FCL\",mime:\"text/x-fcl\",mode:\"fcl\"},{name:\"Forth\",mime:\"text/x-forth\",mode:\"forth\",ext:[\"forth\",\"fth\",\"4th\"]},{name:\"Fortran\",mime:\"text/x-fortran\",mode:\"fortran\",ext:[\"f\",\"for\",\"f77\",\"f90\"]},{name:\"F#\",mime:\"text/x-fsharp\",mode:\"mllike\",ext:[\"fs\"],alias:[\"fsharp\"]},{name:\"Gas\",mime:\"text/x-gas\",mode:\"gas\",ext:[\"s\"]},{name:\"Gherkin\",mime:\"text/x-feature\",mode:\"gherkin\",ext:[\"feature\"]},{name:\"GitHub Flavored Markdown\",mime:\"text/x-gfm\",mode:\"gfm\",file:/^(readme|contributing|history).md$/i},{name:\"Go\",mime:\"text/x-go\",mode:\"go\",ext:[\"go\"]},{name:\"Groovy\",mime:\"text/x-groovy\",mode:\"groovy\",ext:[\"groovy\",\"gradle\"],file:/^Jenkinsfile$/},{name:\"HAML\",mime:\"text/x-haml\",mode:\"haml\",ext:[\"haml\"]},{name:\"Haskell\",mime:\"text/x-haskell\",mode:\"haskell\",ext:[\"hs\"]},{name:\"Haskell (Literate)\",mime:\"text/x-literate-haskell\",mode:\"haskell-literate\",ext:[\"lhs\"]},{name:\"Haxe\",mime:\"text/x-haxe\",mode:\"haxe\",ext:[\"hx\"]},{name:\"HXML\",mime:\"text/x-hxml\",mode:\"haxe\",ext:[\"hxml\"]},{name:\"ASP.NET\",mime:\"application/x-aspx\",mode:\"htmlembedded\",ext:[\"aspx\"],alias:[\"asp\",\"aspx\"]},{name:\"HTML\",mime:\"text/html\",mode:\"htmlmixed\",ext:[\"html\",\"htm\",\"handlebars\",\"hbs\"],alias:[\"xhtml\"]},{name:\"HTTP\",mime:\"message/http\",mode:\"http\"},{name:\"IDL\",mime:\"text/x-idl\",mode:\"idl\",ext:[\"pro\"]},{name:\"Pug\",mime:\"text/x-pug\",mode:\"pug\",ext:[\"jade\",\"pug\"],alias:[\"jade\"]},{name:\"Java\",mime:\"text/x-java\",mode:\"clike\",ext:[\"java\"]},{name:\"Java Server Pages\",mime:\"application/x-jsp\",mode:\"htmlembedded\",ext:[\"jsp\"],alias:[\"jsp\"]},{name:\"JavaScript\",mimes:[\"text/javascript\",\"text/ecmascript\",\"application/javascript\",\"application/x-javascript\",\"application/ecmascript\"],mode:\"javascript\",ext:[\"js\"],alias:[\"ecmascript\",\"js\",\"node\"]},{name:\"JSON\",mimes:[\"application/json\",\"application/x-json\"],mode:\"javascript\",ext:[\"json\",\"map\"],alias:[\"json5\"]},{name:\"JSON-LD\",mime:\"application/ld+json\",mode:\"javascript\",ext:[\"jsonld\"],alias:[\"jsonld\"]},{name:\"JSX\",mime:\"text/jsx\",mode:\"jsx\",ext:[\"jsx\"]},{name:\"Jinja2\",mime:\"null\",mode:\"jinja2\"},{name:\"Julia\",mime:\"text/x-julia\",mode:\"julia\",ext:[\"jl\"]},{name:\"Kotlin\",mime:\"text/x-kotlin\",mode:\"clike\",ext:[\"kt\"]},{name:\"LESS\",mime:\"text/x-less\",mode:\"css\",ext:[\"less\"]},{name:\"LiveScript\",mime:\"text/x-livescript\",mode:\"livescript\",ext:[\"ls\"],alias:[\"ls\"]},{name:\"Lua\",mime:\"text/x-lua\",mode:\"lua\",ext:[\"lua\"]},{name:\"Markdown\",mime:\"text/x-markdown\",mode:\"markdown\",ext:[\"markdown\",\"md\",\"mkd\"]},{name:\"mIRC\",mime:\"text/mirc\",mode:\"mirc\"},{name:\"MariaDB SQL\",mime:\"text/x-mariadb\",mode:\"sql\"},{name:\"Mathematica\",mime:\"text/x-mathematica\",mode:\"mathematica\",ext:[\"m\",\"nb\"]},{name:\"Modelica\",mime:\"text/x-modelica\",mode:\"modelica\",ext:[\"mo\"]},{name:\"MUMPS\",mime:\"text/x-mumps\",mode:\"mumps\",ext:[\"mps\"]},{name:\"MS SQL\",mime:\"text/x-mssql\",mode:\"sql\"},{name:\"mbox\",mime:\"application/mbox\",mode:\"mbox\",ext:[\"mbox\"]},{name:\"MySQL\",mime:\"text/x-mysql\",mode:\"sql\"},{name:\"Nginx\",mime:\"text/x-nginx-conf\",mode:\"nginx\",file:/nginx.*\\.conf$/i},{name:\"NSIS\",mime:\"text/x-nsis\",mode:\"nsis\",ext:[\"nsh\",\"nsi\"]},{name:\"NTriples\",mimes:[\"application/n-triples\",\"application/n-quads\",\"text/n-triples\"],mode:\"ntriples\",ext:[\"nt\",\"nq\"]},{name:\"Objective-C\",mime:\"text/x-objectivec\",mode:\"clike\",ext:[\"m\",\"mm\"],alias:[\"objective-c\",\"objc\"]},{name:\"OCaml\",mime:\"text/x-ocaml\",mode:\"mllike\",ext:[\"ml\",\"mli\",\"mll\",\"mly\"]},{name:\"Octave\",mime:\"text/x-octave\",mode:\"octave\",ext:[\"m\"]},{name:\"Oz\",mime:\"text/x-oz\",mode:\"oz\",ext:[\"oz\"]},{name:\"Pascal\",mime:\"text/x-pascal\",mode:\"pascal\",ext:[\"p\",\"pas\"]},{name:\"PEG.js\",mime:\"null\",mode:\"pegjs\",ext:[\"jsonld\"]},{name:\"Perl\",mime:\"text/x-perl\",mode:\"perl\",ext:[\"pl\",\"pm\"]},{name:\"PHP\",mimes:[\"text/x-php\",\"application/x-httpd-php\",\"application/x-httpd-php-open\"],mode:\"php\",ext:[\"php\",\"php3\",\"php4\",\"php5\",\"php7\",\"phtml\"]},{name:\"Pig\",mime:\"text/x-pig\",mode:\"pig\",ext:[\"pig\"]},{name:\"Plain Text\",mime:\"text/plain\",mode:\"null\",ext:[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\"]},{name:\"PLSQL\",mime:\"text/x-plsql\",mode:\"sql\",ext:[\"pls\"]},{name:\"PowerShell\",mime:\"application/x-powershell\",mode:\"powershell\",ext:[\"ps1\",\"psd1\",\"psm1\"]},{name:\"Properties files\",mime:\"text/x-properties\",mode:\"properties\",ext:[\"properties\",\"ini\",\"in\"],alias:[\"ini\",\"properties\"]},{name:\"ProtoBuf\",mime:\"text/x-protobuf\",mode:\"protobuf\",ext:[\"proto\"]},{name:\"Python\",mime:\"text/x-python\",mode:\"python\",ext:[\"BUILD\",\"bzl\",\"py\",\"pyw\"],file:/^(BUCK|BUILD)$/},{name:\"Puppet\",mime:\"text/x-puppet\",mode:\"puppet\",ext:[\"pp\"]},{name:\"Q\",mime:\"text/x-q\",mode:\"q\",ext:[\"q\"]},{name:\"R\",mime:\"text/x-rsrc\",mode:\"r\",ext:[\"r\",\"R\"],alias:[\"rscript\"]},{name:\"reStructuredText\",mime:\"text/x-rst\",mode:\"rst\",ext:[\"rst\"],alias:[\"rst\"]},{name:\"RPM Changes\",mime:\"text/x-rpm-changes\",mode:\"rpm\"},{name:\"RPM Spec\",mime:\"text/x-rpm-spec\",mode:\"rpm\",ext:[\"spec\"]},{name:\"Ruby\",mime:\"text/x-ruby\",mode:\"ruby\",ext:[\"rb\"],alias:[\"jruby\",\"macruby\",\"rake\",\"rb\",\"rbx\"]},{name:\"Rust\",mime:\"text/x-rustsrc\",mode:\"rust\",ext:[\"rs\"]},{name:\"SAS\",mime:\"text/x-sas\",mode:\"sas\",ext:[\"sas\"]},{name:\"Sass\",mime:\"text/x-sass\",mode:\"sass\",ext:[\"sass\"]},{name:\"Scala\",mime:\"text/x-scala\",mode:\"clike\",ext:[\"scala\"]},{name:\"Scheme\",mime:\"text/x-scheme\",mode:\"scheme\",ext:[\"scm\",\"ss\"]},{name:\"SCSS\",mime:\"text/x-scss\",mode:\"css\",ext:[\"scss\"]},{name:\"Shell\",mimes:[\"text/x-sh\",\"application/x-sh\"],mode:\"shell\",ext:[\"sh\",\"ksh\",\"bash\"],alias:[\"bash\",\"sh\",\"zsh\"],file:/^PKGBUILD$/},{name:\"Sieve\",mime:\"application/sieve\",mode:\"sieve\",ext:[\"siv\",\"sieve\"]},{name:\"Slim\",mimes:[\"text/x-slim\",\"application/x-slim\"],mode:\"slim\",ext:[\"slim\"]},{name:\"Smalltalk\",mime:\"text/x-stsrc\",mode:\"smalltalk\",ext:[\"st\"]},{name:\"Smarty\",mime:\"text/x-smarty\",mode:\"smarty\",ext:[\"tpl\"]},{name:\"Solr\",mime:\"text/x-solr\",mode:\"solr\"},{name:\"SML\",mime:\"text/x-sml\",mode:\"mllike\",ext:[\"sml\",\"sig\",\"fun\",\"smackspec\"]},{name:\"Soy\",mime:\"text/x-soy\",mode:\"soy\",ext:[\"soy\"],alias:[\"closure template\"]},{name:\"SPARQL\",mime:\"application/sparql-query\",mode:\"sparql\",ext:[\"rq\",\"sparql\"],alias:[\"sparul\"]},{name:\"Spreadsheet\",mime:\"text/x-spreadsheet\",mode:\"spreadsheet\",alias:[\"excel\",\"formula\"]},{name:\"SQL\",mime:\"text/x-sql\",mode:\"sql\",ext:[\"sql\"]},{name:\"SQLite\",mime:\"text/x-sqlite\",mode:\"sql\"},{name:\"Squirrel\",mime:\"text/x-squirrel\",mode:\"clike\",ext:[\"nut\"]},{name:\"Stylus\",mime:\"text/x-styl\",mode:\"stylus\",ext:[\"styl\"]},{name:\"Swift\",mime:\"text/x-swift\",mode:\"swift\",ext:[\"swift\"]},{name:\"sTeX\",mime:\"text/x-stex\",mode:\"stex\"},{name:\"LaTeX\",mime:\"text/x-latex\",mode:\"stex\",ext:[\"text\",\"ltx\",\"tex\"],alias:[\"tex\"]},{name:\"SystemVerilog\",mime:\"text/x-systemverilog\",mode:\"verilog\",ext:[\"v\",\"sv\",\"svh\"]},{name:\"Tcl\",mime:\"text/x-tcl\",mode:\"tcl\",ext:[\"tcl\"]},{name:\"Textile\",mime:\"text/x-textile\",mode:\"textile\",ext:[\"textile\"]},{name:\"TiddlyWiki \",mime:\"text/x-tiddlywiki\",mode:\"tiddlywiki\"},{name:\"Tiki wiki\",mime:\"text/tiki\",mode:\"tiki\"},{name:\"TOML\",mime:\"text/x-toml\",mode:\"toml\",ext:[\"toml\"]},{name:\"Tornado\",mime:\"text/x-tornado\",mode:\"tornado\"},{name:\"troff\",mime:\"text/troff\",mode:\"troff\",ext:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]},{name:\"TTCN\",mime:\"text/x-ttcn\",mode:\"ttcn\",ext:[\"ttcn\",\"ttcn3\",\"ttcnpp\"]},{name:\"TTCN_CFG\",mime:\"text/x-ttcn-cfg\",mode:\"ttcn-cfg\",ext:[\"cfg\"]},{name:\"Turtle\",mime:\"text/turtle\",mode:\"turtle\",ext:[\"ttl\"]},{name:\"TypeScript\",mime:\"application/typescript\",mode:\"javascript\",ext:[\"ts\"],alias:[\"ts\"]},{name:\"TypeScript-JSX\",mime:\"text/typescript-jsx\",mode:\"jsx\",ext:[\"tsx\"],alias:[\"tsx\"]},{name:\"Twig\",mime:\"text/x-twig\",mode:\"twig\"},{name:\"Web IDL\",mime:\"text/x-webidl\",mode:\"webidl\",ext:[\"webidl\"]},{name:\"VB.NET\",mime:\"text/x-vb\",mode:\"vb\",ext:[\"vb\"]},{name:\"VBScript\",mime:\"text/vbscript\",mode:\"vbscript\",ext:[\"vbs\"]},{name:\"Velocity\",mime:\"text/velocity\",mode:\"velocity\",ext:[\"vtl\"]},{name:\"Verilog\",mime:\"text/x-verilog\",mode:\"verilog\",ext:[\"v\"]},{name:\"VHDL\",mime:\"text/x-vhdl\",mode:\"vhdl\",ext:[\"vhd\",\"vhdl\"]},{name:\"Vue.js Component\",mimes:[\"script/x-vue\",\"text/x-vue\"],mode:\"vue\",ext:[\"vue\"]},{name:\"XML\",mimes:[\"application/xml\",\"text/xml\"],mode:\"xml\",ext:[\"xml\",\"xsl\",\"xsd\",\"svg\"],alias:[\"rss\",\"wsdl\",\"xsd\"]},{name:\"XQuery\",mime:\"application/xquery\",mode:\"xquery\",ext:[\"xy\",\"xquery\"]},{name:\"Yacas\",mime:\"text/x-yacas\",mode:\"yacas\",ext:[\"ys\"]},{name:\"YAML\",mimes:[\"text/x-yaml\",\"text/yaml\"],mode:\"yaml\",ext:[\"yaml\",\"yml\"],alias:[\"yml\"]},{name:\"Z80\",mime:\"text/x-z80\",mode:\"z80\",ext:[\"z80\"]},{name:\"mscgen\",mime:\"text/x-mscgen\",mode:\"mscgen\",ext:[\"mscgen\",\"mscin\",\"msc\"]},{name:\"xu\",mime:\"text/x-xu\",mode:\"mscgen\",ext:[\"xu\"]},{name:\"msgenny\",mime:\"text/x-msgenny\",mode:\"mscgen\",ext:[\"msgenny\"]}];for(var t=0;t<e.modeInfo.length;t++){var n=e.modeInfo[t];n.mimes&&(n.mime=n.mimes[0])}e.findModeByMIME=function(t){t=t.toLowerCase();for(var n=0;n<e.modeInfo.length;n++){var i=e.modeInfo[n];if(i.mime==t)return i;if(i.mimes)for(var r=0;r<i.mimes.length;r++)if(i.mimes[r]==t)return i}return/\\+xml$/.test(t)?e.findModeByMIME(\"application/xml\"):/\\+json$/.test(t)?e.findModeByMIME(\"application/json\"):void 0},e.findModeByExtension=function(t){for(var n=0;n<e.modeInfo.length;n++){var i=e.modeInfo[n];if(i.ext)for(var r=0;r<i.ext.length;r++)if(i.ext[r]==t)return i}},e.findModeByFileName=function(t){for(var n=0;n<e.modeInfo.length;n++){var i=e.modeInfo[n];if(i.file&&i.file.test(t))return i}var r=t.lastIndexOf(\".\"),a=r>-1&&t.substring(r+1,t.length);if(a)return e.findModeByExtension(a)},e.findModeByName=function(t){t=t.toLowerCase();for(var n=0;n<e.modeInfo.length;n++){var i=e.modeInfo[n];if(i.name.toLowerCase()==t)return i;if(i.alias)for(var r=0;r<i.alias.length;r++)if(i.alias[r].toLowerCase()==t)return i}}})}}]);","extractedComments":[]}