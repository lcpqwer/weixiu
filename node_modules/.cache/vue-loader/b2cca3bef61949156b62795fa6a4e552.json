{"remainingRequest":"/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Desktop/iview-admin/src/view/pManagement/p_management.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/szt/Desktop/iview-admin/src/view/pManagement/p_management.vue","mtime":1562661874000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.amap-demo {\n  height: 300px;\n}\n",{"version":3,"sources":["p_management.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA","file":"p_management.vue","sourceRoot":"src/view/pManagement","sourcesContent":["<template>\n  <div class=\"amap-page-container\">\n    <el-amap vid=\"amapDemo\" :zoom=\"zoom\" :center=\"center\" class=\"amap-demo\">\n      <el-amap-marker vid=\"component-marker\" :position=\"componentMarker.position\" :content-render=\"componentMarker.contentRender\" ></el-amap-marker>\n      <el-amap-marker v-for=\"(marker, index) in markers\" :position=\"marker.position\" :events=\"marker.events\" :visible=\"marker.visible\" :draggable=\"marker.draggable\" :vid=\"index\"></el-amap-marker>\n    </el-amap>\n    <div class=\"toolbar\">\n      <button type=\"button\" name=\"button\" v-on:click=\"toggleVisible\">toggle first marker</button>\n      <button type=\"button\" name=\"button\" v-on:click=\"changePosition\">change position</button>\n      <button type=\"button\" name=\"button\" v-on:click=\"chnageDraggle\">change draggle</button>\n      <button type=\"button\" name=\"button\" v-on:click=\"addMarker\">add marker</button>\n      <button type=\"button\" name=\"button\" v-on:click=\"removeMarker\">remove marker</button>\n    </div>\n  </div>\n</template>\n\n<style>\n  .amap-demo {\n    height: 300px;\n  }\n</style>\n\n<script>\n  const exampleComponents = {\n    props: ['text'],\n    template: `<div>text from  parent: {{text}}</div>`\n  }\n  module.exports = {\n    name: 'amap-page',\n    data() {\n      return {\n        count: 1,\n        slotStyle: {\n          padding: '2px 8px',\n          background: '#eee',\n          color: '#333',\n          border: '1px solid #aaa'\n        },\n        zoom: 14,\n        center: [121.5273285, 31.21515044],\n        markers: [\n          {\n            position: [121.5273285, 31.21515044],\n            events: {\n              click: () => {\n                alert('click marker');\n              },\n              dragend: (e) => {\n                console.log('---event---: dragend')\n                this.markers[0].position = [e.lnglat.lng, e.lnglat.lat];\n              }\n            },\n            visible: true,\n            draggable: false,\n            template: '<span>1</span>',\n          }\n        ],\n        renderMarker: {\n          position: [121.5273285, 31.21715058],\n          contentRender: (h, instance) => {\n            // if use jsx you can write in this\n            // return <div style={{background: '#80cbc4', whiteSpace: 'nowrap', border: 'solid #ddd 1px', color: '#f00'}} onClick={() => ...}>marker inner text</div>\n            return h(\n              'div',\n              {\n                style: {background: '#80cbc4', whiteSpace: 'nowrap', border: 'solid #ddd 1px', color: '#f00'},\n                on: {\n                  click: () => {\n                    const position = this.renderMarker.position;\n                    this.renderMarker.position = [position[0] + 0.002, position[1] - 0.002];\n                  }\n                }\n              },\n              ['marker inner text']\n            )\n          }\n        },\n        componentMarker: {\n          position: [121.5273285, 31.21315058],\n          contentRender: (h, instance) => h(exampleComponents,{style: {backgroundColor: '#fff'}, props: {text: 'father is here'}}, ['xxxxxxx'])\n        },\n        slotMarker: {\n          position: [121.5073285, 31.21715058]\n        }\n      };\n    },\n    methods: {\n      onClick() {\n        this.count += 1;\n      },\n      changePosition() {\n        let position = this.markers[0].position;\n        this.markers[0].position = [position[0] + 0.002, position[1] - 0.002];\n      },\n      chnageDraggle() {\n        let draggable = this.markers[0].draggable;\n        this.markers[0].draggable = !draggable;\n      },\n      toggleVisible() {\n        let visableVar = this.markers[0].visible;\n        this.markers[0].visible = !visableVar;\n      },\n      addMarker() {\n        let marker = {\n          position: [121.5273285 + (Math.random() - 0.5) * 0.02, 31.21515044 + (Math.random() - 0.5) * 0.02]\n        };\n        this.markers.push(marker);\n      },\n      removeMarker() {\n        if (!this.markers.length) return;\n        this.markers.splice(this.markers.length - 1, 1);\n      }\n    }\n  };\n</script>\n"]}]}