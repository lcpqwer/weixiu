{"remainingRequest":"/Users/szt/Desktop/iview-admin/node_modules/babel-loader/lib/index.js!/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Desktop/iview-admin/src/components/paste-editor/paste-editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/szt/Desktop/iview-admin/src/components/paste-editor/paste-editor.vue","mtime":1539597142000},{"path":"/Users/szt/Desktop/iview-admin/.babelrc","mtime":1539597141000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\nimport CodeMirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport { forEach } from '@/libs/tools';\nimport createPlaceholder from './plugins/placeholder';\nexport default {\n  name: 'PasteEditor',\n  props: {\n    value: Array,\n    pasteData: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '从网页或其他应用软件复制表格数据，粘贴到这里 。默认第一行是表头，使用回车键添加新行，使用Tab键区分列。'\n    }\n  },\n  data: function data() {\n    return {\n      pasteDataArr: [],\n      rowArrLength: 0,\n      editor: null\n    };\n  },\n  watch: {\n    pasteData: function pasteData(val) {\n      if (val === '') {\n        this.editor.setValue('');\n      }\n    }\n  },\n  computed: {\n    rowNum: function rowNum() {\n      return this.pasteDataArr.length;\n    },\n    colNum: function colNum() {\n      return this.pasteDataArr[0] ? this.pasteDataArr[0].length : 0;\n    }\n  },\n  methods: {\n    handleKeyup: function handleKeyup(e) {\n      this.handleAreaData();\n    },\n\n    /**\n     * @description 处理粘贴操作\n     */\n    handleContentChanged: function handleContentChanged(content) {\n      var pasteData = content.trim();\n      this.$emit('on-content-change', pasteData);\n      var rows = pasteData.split(/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g).map(function (row) {\n        return row.split('\\t');\n      });\n      if (content === '') rows = [];\n      this.pasteDataArr = rows;\n      this.clearLineClass();\n      this.checkColNumInEveryRow();\n      this.$emit('input', this.pasteDataArr);\n    },\n\n    /**\n     * @description 检查除第一行的每一行列数是否与第一行相同\n     */\n    checkColNumInEveryRow: function checkColNumInEveryRow() {\n      var i = 0;\n      var len = this.rowNum;\n      if (len === 0) return;\n\n      while (++i < len) {\n        var item = this.pasteDataArr[i];\n\n        if (item.length !== this.colNum && (!(i === len - 1 && item.length === 1 && item[0] === '') || i !== len - 1)) {\n          this.markIncorrectRow(i);\n          this.$emit('on-error', i);\n          return false;\n        }\n      }\n\n      this.$emit('on-success', this.pasteDataArr);\n      return true;\n    },\n\n    /**\n     * @description 标记不符合格式的一行\n     */\n    markIncorrectRow: function markIncorrectRow(index) {\n      this.editor.addLineClass(index, 'text', 'incorrect-row');\n    },\n\n    /**\n     * @description 标记不符合格式的一行\n     */\n    clearLineClass: function clearLineClass() {\n      var _this = this;\n\n      forEach(this.pasteDataArr, function (item, index) {\n        _this.editor.removeLineClass(index, 'text', 'incorrect-row');\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    createPlaceholder(CodeMirror);\n    this.editor = CodeMirror.fromTextArea(this.$refs.codemirror, {\n      lineNumbers: true,\n      tabSize: 1,\n      lineWrapping: true,\n      placeholder: this.placeholder\n    });\n    this.editor.on('change', function (editor) {\n      _this2.handleContentChanged(editor.getValue());\n    });\n    this.editor.addLineClass(0, 'text', 'first-row');\n  }\n};",{"version":3,"sources":["paste-editor.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"paste-editor-wrapper\">\n    <textarea ref=\"codemirror\" class=\"textarea-el\"></textarea>\n  </div>\n</template>\n<script>\nimport CodeMirror from 'codemirror'\nimport 'codemirror/lib/codemirror.css'\nimport { forEach } from '@/libs/tools'\nimport createPlaceholder from './plugins/placeholder'\nexport default {\n  name: 'PasteEditor',\n  props: {\n    value: Array,\n    pasteData: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: '从网页或其他应用软件复制表格数据，粘贴到这里 。默认第一行是表头，使用回车键添加新行，使用Tab键区分列。'\n    }\n  },\n  data () {\n    return {\n      pasteDataArr: [],\n      rowArrLength: 0,\n      editor: null\n    }\n  },\n  watch: {\n    pasteData (val) {\n      if (val === '') {\n        this.editor.setValue('')\n      }\n    }\n  },\n  computed: {\n    rowNum () {\n      return this.pasteDataArr.length\n    },\n    colNum () {\n      return this.pasteDataArr[0] ? this.pasteDataArr[0].length : 0\n    }\n  },\n  methods: {\n    handleKeyup (e) {\n      this.handleAreaData()\n    },\n    /**\n     * @description 处理粘贴操作\n     */\n    handleContentChanged (content) {\n      let pasteData = content.trim()\n      this.$emit('on-content-change', pasteData)\n      let rows = pasteData.split((/[\\n\\u0085\\u2028\\u2029]|\\r\\n?/g)).map(row => {\n        return row.split('\\t')\n      })\n      if (content === '') rows = []\n      this.pasteDataArr = rows\n      this.clearLineClass()\n      this.checkColNumInEveryRow()\n      this.$emit('input', this.pasteDataArr)\n    },\n    /**\n     * @description 检查除第一行的每一行列数是否与第一行相同\n     */\n    checkColNumInEveryRow () {\n      let i = 0\n      const len = this.rowNum\n      if (len === 0) return\n      while (++i < len) {\n        let item = this.pasteDataArr[i]\n        if (item.length !== this.colNum && (!(i === len - 1 && item.length === 1 && item[0] === '') || i !== len - 1)) {\n          this.markIncorrectRow(i)\n          this.$emit('on-error', i)\n          return false\n        }\n      }\n      this.$emit('on-success', this.pasteDataArr)\n      return true\n    },\n    /**\n     * @description 标记不符合格式的一行\n     */\n    markIncorrectRow (index) {\n      this.editor.addLineClass(index, 'text', 'incorrect-row')\n    },\n    /**\n     * @description 标记不符合格式的一行\n     */\n    clearLineClass () {\n      forEach(this.pasteDataArr, (item, index) => {\n        this.editor.removeLineClass(index, 'text', 'incorrect-row')\n      })\n    }\n  },\n  mounted () {\n    createPlaceholder(CodeMirror)\n    this.editor = CodeMirror.fromTextArea(this.$refs.codemirror, {\n      lineNumbers: true,\n      tabSize: 1,\n      lineWrapping: true,\n      placeholder: this.placeholder\n    })\n    this.editor.on('change', (editor) => {\n      this.handleContentChanged(editor.getValue())\n    })\n    this.editor.addLineClass(0, 'text', 'first-row')\n  }\n}\n</script>\n<style lang=\"less\">\n@import './paste-editor.less';\n</style>\n"],"sourceRoot":"src/components/paste-editor"}]}