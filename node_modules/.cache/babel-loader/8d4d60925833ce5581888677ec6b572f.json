{"remainingRequest":"/Users/szt/Documents/szt/iview-admin/node_modules/babel-loader/lib/index.js!/Users/szt/Documents/szt/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Documents/szt/iview-admin/src/components/main/components/tags-nav/tags-nav.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/szt/Documents/szt/iview-admin/src/components/main/components/tags-nav/tags-nav.vue","mtime":1539597142000},{"path":"/Users/szt/Documents/szt/iview-admin/.babelrc","mtime":1539597141000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":1539597352000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { showTitle, routeEqual } from '@/libs/util';\nimport beforeClose from '@/router/before-close';\nexport default {\n  name: 'TagsNav',\n  props: {\n    value: Object,\n    list: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      tagBodyLeft: 0,\n      rightOffset: 40,\n      outerPadding: 4,\n      contextMenuLeft: 0,\n      contextMenuTop: 0,\n      visible: false,\n      menuList: {\n        others: '关闭其他',\n        all: '关闭所有'\n      }\n    };\n  },\n  computed: {\n    currentRouteObj: function currentRouteObj() {\n      var _this$value = this.value,\n          name = _this$value.name,\n          params = _this$value.params,\n          query = _this$value.query;\n      return {\n        name: name,\n        params: params,\n        query: query\n      };\n    }\n  },\n  methods: {\n    handlescroll: function handlescroll(e) {\n      var type = e.type;\n      var delta = 0;\n\n      if (type === 'DOMMouseScroll' || type === 'mousewheel') {\n        delta = e.wheelDelta ? e.wheelDelta : -(e.detail || 0) * 40;\n      }\n\n      this.handleScroll(delta);\n    },\n    handleScroll: function handleScroll(offset) {\n      var outerWidth = this.$refs.scrollOuter.offsetWidth;\n      var bodyWidth = this.$refs.scrollBody.offsetWidth;\n\n      if (offset > 0) {\n        this.tagBodyLeft = Math.min(0, this.tagBodyLeft + offset);\n      } else {\n        if (outerWidth < bodyWidth) {\n          if (this.tagBodyLeft < -(bodyWidth - outerWidth)) {\n            this.tagBodyLeft = this.tagBodyLeft;\n          } else {\n            this.tagBodyLeft = Math.max(this.tagBodyLeft + offset, outerWidth - bodyWidth);\n          }\n        } else {\n          this.tagBodyLeft = 0;\n        }\n      }\n    },\n    handleTagsOption: function handleTagsOption(type) {\n      var _this = this;\n\n      if (type.includes('all')) {\n        // 关闭所有，除了home\n        var res = this.list.filter(function (item) {\n          return item.name === _this.$config.homeName;\n        });\n        this.$emit('on-close', res, 'all');\n      } else if (type.includes('others')) {\n        // 关闭除当前页和home页的其他页\n        var _res = this.list.filter(function (item) {\n          return routeEqual(_this.currentRouteObj, item) || item.name === _this.$config.homeName;\n        });\n\n        this.$emit('on-close', _res, 'others', this.currentRouteObj);\n        setTimeout(function () {\n          _this.getTagElementByName(_this.currentRouteObj.name);\n        }, 100);\n      }\n    },\n    handleClose: function handleClose(current) {\n      var _this2 = this;\n\n      if (current.meta && current.meta.beforeCloseName && current.meta.beforeCloseName in beforeClose) {\n        new Promise(beforeClose[current.meta.beforeCloseName]).then(function (close) {\n          if (close) {\n            _this2.close(current);\n          }\n        });\n      } else {\n        this.close(current);\n      }\n    },\n    close: function close(route) {\n      var res = this.list.filter(function (item) {\n        return !routeEqual(route, item);\n      });\n      this.$emit('on-close', res, undefined, route);\n    },\n    handleClick: function handleClick(item) {\n      this.$emit('input', item);\n    },\n    showTitleInside: function showTitleInside(item) {\n      return showTitle(item, this);\n    },\n    isCurrentTag: function isCurrentTag(item) {\n      return routeEqual(this.currentRouteObj, item);\n    },\n    moveToView: function moveToView(tag) {\n      var outerWidth = this.$refs.scrollOuter.offsetWidth;\n      var bodyWidth = this.$refs.scrollBody.offsetWidth;\n\n      if (bodyWidth < outerWidth) {\n        this.tagBodyLeft = 0;\n      } else if (tag.offsetLeft < -this.tagBodyLeft) {\n        // 标签在可视区域左侧\n        this.tagBodyLeft = -tag.offsetLeft + this.outerPadding;\n      } else if (tag.offsetLeft > -this.tagBodyLeft && tag.offsetLeft + tag.offsetWidth < -this.tagBodyLeft + outerWidth) {\n        // 标签在可视区域\n        this.tagBodyLeft = Math.min(0, outerWidth - tag.offsetWidth - tag.offsetLeft - this.outerPadding);\n      } else {\n        // 标签在可视区域右侧\n        this.tagBodyLeft = -(tag.offsetLeft - (outerWidth - this.outerPadding - tag.offsetWidth));\n      }\n    },\n    getTagElementByName: function getTagElementByName(name) {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        _this3.refsTag = _this3.$refs.tagsPageOpened;\n\n        _this3.refsTag.forEach(function (item, index) {\n          if (name === item.name) {\n            var tag = _this3.refsTag[index].$el;\n\n            _this3.moveToView(tag);\n          }\n        });\n      });\n    },\n    contextMenu: function contextMenu(item, e) {\n      if (item.name === this.$config.homeName) {\n        return;\n      }\n\n      this.visible = true;\n      var offsetLeft = this.$el.getBoundingClientRect().left;\n      this.contextMenuLeft = e.clientX - offsetLeft + 10;\n      this.contextMenuTop = e.clientY - 64;\n    },\n    closeMenu: function closeMenu() {\n      this.visible = false;\n    }\n  },\n  watch: {\n    '$route': function $route(to) {\n      this.getTagElementByName(to.name);\n    },\n    visible: function visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    setTimeout(function () {\n      _this4.getTagElementByName(_this4.$route.name);\n    }, 200);\n  }\n};",{"version":3,"sources":["tags-nav.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"tags-nav\">\n    <div class=\"close-con\">\n      <Dropdown transfer @on-click=\"handleTagsOption\" style=\"margin-top:7px;\">\n        <Button size=\"small\" type=\"text\">\n          <Icon :size=\"18\" type=\"ios-close-circle-outline\" />\n        </Button>\n        <DropdownMenu slot=\"list\">\n          <DropdownItem name=\"close-all\">关闭所有</DropdownItem>\n          <DropdownItem name=\"close-others\">关闭其他</DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    </div>\n    <ul v-show=\"visible\" :style=\"{left: contextMenuLeft + 'px', top: contextMenuTop + 'px'}\" class=\"contextmenu\">\n      <li v-for=\"(item, key) of menuList\" @click=\"handleTagsOption(key)\" :key=\"key\">{{item}}</li>\n    </ul>\n    <div class=\"btn-con left-btn\">\n      <Button type=\"text\" @click=\"handleScroll(240)\">\n        <Icon :size=\"18\" type=\"ios-arrow-back\" />\n      </Button>\n    </div>\n    <div class=\"btn-con right-btn\">\n      <Button type=\"text\" @click=\"handleScroll(-240)\">\n        <Icon :size=\"18\" type=\"ios-arrow-forward\" />\n      </Button>\n    </div>\n    <div class=\"scroll-outer\" ref=\"scrollOuter\" @DOMMouseScroll=\"handlescroll\" @mousewheel=\"handlescroll\">\n      <div ref=\"scrollBody\" class=\"scroll-body\" :style=\"{left: tagBodyLeft + 'px'}\">\n        <transition-group name=\"taglist-moving-animation\">\n          <Tag\n            type=\"dot\"\n            v-for=\"(item, index) in list\"\n            ref=\"tagsPageOpened\"\n            :key=\"`tag-nav-${index}`\"\n            :name=\"item.name\"\n            @on-close=\"handleClose(item)\"\n            @click.native=\"handleClick(item)\"\n            :closable=\"item.name !== $config.homeName\"\n            :color=\"isCurrentTag(item) ? 'primary' : 'default'\"\n            @contextmenu.prevent.native=\"contextMenu(item, $event)\"\n          >{{ showTitleInside(item) }}</Tag>\n        </transition-group>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { showTitle, routeEqual } from '@/libs/util'\nimport beforeClose from '@/router/before-close'\nexport default {\n  name: 'TagsNav',\n  props: {\n    value: Object,\n    list: {\n      type: Array,\n      default () {\n        return []\n      }\n    }\n  },\n  data () {\n    return {\n      tagBodyLeft: 0,\n      rightOffset: 40,\n      outerPadding: 4,\n      contextMenuLeft: 0,\n      contextMenuTop: 0,\n      visible: false,\n      menuList: {\n        others: '关闭其他',\n        all: '关闭所有'\n      }\n    }\n  },\n  computed: {\n    currentRouteObj () {\n      const { name, params, query } = this.value\n      return { name, params, query }\n    }\n  },\n  methods: {\n    handlescroll (e) {\n      var type = e.type\n      let delta = 0\n      if (type === 'DOMMouseScroll' || type === 'mousewheel') {\n        delta = (e.wheelDelta) ? e.wheelDelta : -(e.detail || 0) * 40\n      }\n      this.handleScroll(delta)\n    },\n    handleScroll (offset) {\n      const outerWidth = this.$refs.scrollOuter.offsetWidth\n      const bodyWidth = this.$refs.scrollBody.offsetWidth\n      if (offset > 0) {\n        this.tagBodyLeft = Math.min(0, this.tagBodyLeft + offset)\n      } else {\n        if (outerWidth < bodyWidth) {\n          if (this.tagBodyLeft < -(bodyWidth - outerWidth)) {\n            this.tagBodyLeft = this.tagBodyLeft\n          } else {\n            this.tagBodyLeft = Math.max(this.tagBodyLeft + offset, outerWidth - bodyWidth)\n          }\n        } else {\n          this.tagBodyLeft = 0\n        }\n      }\n    },\n    handleTagsOption (type) {\n      if (type.includes('all')) {\n        // 关闭所有，除了home\n        let res = this.list.filter(item => item.name === this.$config.homeName)\n        this.$emit('on-close', res, 'all')\n      } else if (type.includes('others')) {\n        // 关闭除当前页和home页的其他页\n        let res = this.list.filter(item => routeEqual(this.currentRouteObj, item) || item.name === this.$config.homeName)\n        this.$emit('on-close', res, 'others', this.currentRouteObj)\n        setTimeout(() => {\n          this.getTagElementByName(this.currentRouteObj.name)\n        }, 100)\n      }\n    },\n    handleClose (current) {\n      if (current.meta && current.meta.beforeCloseName && current.meta.beforeCloseName in beforeClose) {\n        new Promise(beforeClose[current.meta.beforeCloseName]).then(close => {\n          if (close) {\n            this.close(current)\n          }\n        })\n      } else {\n        this.close(current)\n      }\n    },\n    close (route) {\n      let res = this.list.filter(item => !routeEqual(route, item))\n      this.$emit('on-close', res, undefined, route)\n    },\n    handleClick (item) {\n      this.$emit('input', item)\n    },\n    showTitleInside (item) {\n      return showTitle(item, this)\n    },\n    isCurrentTag (item) {\n      return routeEqual(this.currentRouteObj, item)\n    },\n    moveToView (tag) {\n      const outerWidth = this.$refs.scrollOuter.offsetWidth\n      const bodyWidth = this.$refs.scrollBody.offsetWidth\n      if (bodyWidth < outerWidth) {\n        this.tagBodyLeft = 0\n      } else if (tag.offsetLeft < -this.tagBodyLeft) {\n        // 标签在可视区域左侧\n        this.tagBodyLeft = -tag.offsetLeft + this.outerPadding\n      } else if (tag.offsetLeft > -this.tagBodyLeft && tag.offsetLeft + tag.offsetWidth < -this.tagBodyLeft + outerWidth) {\n        // 标签在可视区域\n        this.tagBodyLeft = Math.min(0, outerWidth - tag.offsetWidth - tag.offsetLeft - this.outerPadding)\n      } else {\n        // 标签在可视区域右侧\n        this.tagBodyLeft = -(tag.offsetLeft - (outerWidth - this.outerPadding - tag.offsetWidth))\n      }\n    },\n    getTagElementByName (name) {\n      this.$nextTick(() => {\n        this.refsTag = this.$refs.tagsPageOpened\n        this.refsTag.forEach((item, index) => {\n          if (name === item.name) {\n            let tag = this.refsTag[index].$el\n            this.moveToView(tag)\n          }\n        })\n      })\n    },\n    contextMenu (item, e) {\n      if (item.name === this.$config.homeName) {\n        return\n      }\n      this.visible = true\n      const offsetLeft = this.$el.getBoundingClientRect().left\n      this.contextMenuLeft = e.clientX - offsetLeft + 10\n      this.contextMenuTop = e.clientY - 64\n    },\n    closeMenu () {\n      this.visible = false\n    }\n  },\n  watch: {\n    '$route' (to) {\n      this.getTagElementByName(to.name)\n    },\n    visible (value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu)\n      } else {\n        document.body.removeEventListener('click', this.closeMenu)\n      }\n    }\n  },\n  mounted () {\n    setTimeout(() => {\n      this.getTagElementByName(this.$route.name)\n    }, 200)\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import './tags-nav.less';\n</style>\n"],"sourceRoot":"src/components/main/components/tags-nav"}]}