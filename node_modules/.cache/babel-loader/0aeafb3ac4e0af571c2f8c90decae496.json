{"remainingRequest":"/Users/szt/Documents/szt/iview-admin/node_modules/thread-loader/dist/cjs.js!/Users/szt/Documents/szt/iview-admin/node_modules/babel-loader/lib/index.js!/Users/szt/Documents/szt/iview-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/szt/Documents/szt/iview-admin/src/libs/axios.js","dependencies":[{"path":"/Users/szt/Documents/szt/iview-admin/src/libs/axios.js","mtime":1539597142000},{"path":"/Users/szt/Documents/szt/iview-admin/.babelrc","mtime":1539597141000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":1539597352000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _classCallCheck from \"/Users/szt/Documents/szt/iview-admin/node_modules/@babel/runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"/Users/szt/Documents/szt/iview-admin/node_modules/@babel/runtime/helpers/builtin/es6/createClass\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport axios from 'axios';\nimport store from '@/store'; // import { Spin } from 'iview'\n\nvar addErrorLog = function addErrorLog(errorInfo) {\n  var statusText = errorInfo.statusText,\n      status = errorInfo.status,\n      responseURL = errorInfo.request.responseURL;\n  var info = {\n    type: 'ajax',\n    code: status,\n    mes: statusText,\n    url: responseURL\n  };\n  if (!responseURL.includes('save_error_logger')) store.dispatch('addErrorLog', info);\n};\n\nvar HttpRequest =\n/*#__PURE__*/\nfunction () {\n  function HttpRequest() {\n    var baseUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : baseURL;\n\n    _classCallCheck(this, HttpRequest);\n\n    this.baseUrl = baseUrl;\n    this.queue = {};\n  }\n\n  _createClass(HttpRequest, [{\n    key: \"getInsideConfig\",\n    value: function getInsideConfig() {\n      var config = {\n        baseURL: this.baseUrl,\n        headers: {//\n        }\n      };\n      return config;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(url) {\n      delete this.queue[url];\n\n      if (!Object.keys(this.queue).length) {// Spin.hide()\n      }\n    }\n  }, {\n    key: \"interceptors\",\n    value: function interceptors(instance, url) {\n      var _this = this;\n\n      // 请求拦截\n      instance.interceptors.request.use(function (config) {\n        // 添加全局的loading...\n        if (!Object.keys(_this.queue).length) {// Spin.show() // 不建议开启，因为界面不友好\n        }\n\n        _this.queue[url] = true;\n        return config;\n      }, function (error) {\n        return Promise.reject(error);\n      }); // 响应拦截\n\n      instance.interceptors.response.use(function (res) {\n        _this.destroy(url);\n\n        var data = res.data,\n            status = res.status;\n        return {\n          data: data,\n          status: status\n        };\n      }, function (error) {\n        _this.destroy(url);\n\n        addErrorLog(error.response);\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: \"request\",\n    value: function request(options) {\n      var instance = axios.create();\n      options = Object.assign(this.getInsideConfig(), options);\n      this.interceptors(instance, options.url);\n      return instance(options);\n    }\n  }]);\n\n  return HttpRequest;\n}();\n\nexport default HttpRequest;",{"version":3,"sources":["src/libs/axios.js"],"names":["axios","store","addErrorLog","statusText","errorInfo","status","responseURL","request","info","type","code","mes","url","includes","dispatch","HttpRequest","baseUrl","baseURL","queue","config","headers","Object","keys","length","instance","interceptors","use","Promise","reject","error","response","destroy","data","res","options","create","assign","getInsideConfig"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,IAAMC,cAAc,SAAdA,WAAc,YAAa;AAAA,MACvBC,UADuB,GAC0BC,SAD1B,CACvBD,UADuB;AAAA,MACXE,MADW,GAC0BD,SAD1B,CACXC,MADW;AAAA,MACQC,WADR,GAC0BF,SAD1B,CACHG,OADG,CACQD,WADR;AAE/B,MAAIE,OAAO;AACTC,UAAM,MADG;AAETC,UAAML,MAFG;AAGTM,SAAKR,UAHI;AAITS,SAAKN;AAJI,GAAX;AAMA,MAAI,CAACA,YAAYO,QAAZ,CAAqB,mBAArB,CAAL,EAAgDZ,MAAMa,QAAN,CAAe,aAAf,EAA8BN,IAA9B;AACjD,CATD;;IAWMO,W;;;AACJ,yBAAgC;AAAA,QAAnBC,OAAmB,uEAATC,OAAS;;AAAA;;AAC9B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKE,KAAL,GAAa,EAAb;AACD;;;;sCACkB;AACjB,UAAMC,SAAS;AACbF,iBAAS,KAAKD,OADD;AAEbI,iBAAS,CACP;AADO;AAFI,OAAf;AAMA,aAAOD,MAAP;AACD;;;4BACQP,G,EAAK;AACZ,aAAO,KAAKM,KAAL,CAAWN,GAAX,CAAP;;AACA,UAAI,CAACS,OAAOC,IAAP,CAAY,KAAKJ,KAAjB,EAAwBK,MAA7B,EAAqC,CACnC;AACD;AACF;;;iCACaC,Q,EAAUZ,G,EAAK;AAAA;;AAC3B;AACAY,eAASC,YAAT,CAAsBlB,OAAtB,CAA8BmB,GAA9B,CAAkC,kBAAU;AAC1C;AACA,YAAI,CAACL,OAAOC,IAAP,CAAY,MAAKJ,KAAjB,EAAwBK,MAA7B,EAAqC,CACnC;AACD;;AACD,cAAKL,KAAL,CAAWN,GAAX,IAAkB,IAAlB;AACA,eAAOO,MAAP;AACD,OAPD,EAOG,iBAAS;AACV,eAAOQ,QAAQC,MAAR,CAAeC,KAAf,CAAP;AACD,OATD,EAF2B,CAY3B;;AACAL,eAASC,YAAT,CAAsBK,QAAtB,CAA+BJ,GAA/B,CAAmC,eAAO;AACxC,cAAKK,OAAL,CAAanB,GAAb;;AADwC,YAEhCoB,IAFgC,GAEfC,GAFe,CAEhCD,IAFgC;AAAA,YAE1B3B,MAF0B,GAEf4B,GAFe,CAE1B5B,MAF0B;AAGxC,eAAO;AAAE2B,oBAAF;AAAQ3B;AAAR,SAAP;AACD,OAJD,EAIG,iBAAS;AACV,cAAK0B,OAAL,CAAanB,GAAb;;AACAV,oBAAY2B,MAAMC,QAAlB;AACA,eAAOH,QAAQC,MAAR,CAAeC,KAAf,CAAP;AACD,OARD;AASD;;;4BACQK,O,EAAS;AAChB,UAAMV,WAAWxB,MAAMmC,MAAN,EAAjB;AACAD,gBAAUb,OAAOe,MAAP,CAAc,KAAKC,eAAL,EAAd,EAAsCH,OAAtC,CAAV;AACA,WAAKT,YAAL,CAAkBD,QAAlB,EAA4BU,QAAQtB,GAApC;AACA,aAAOY,SAASU,OAAT,CAAP;AACD;;;;;;AAEH,eAAenB,WAAf","sourceRoot":"/Users/szt/Documents/szt/iview-admin","sourcesContent":["import axios from 'axios'\nimport store from '@/store'\n// import { Spin } from 'iview'\nconst addErrorLog = errorInfo => {\n  const { statusText, status, request: { responseURL } } = errorInfo\n  let info = {\n    type: 'ajax',\n    code: status,\n    mes: statusText,\n    url: responseURL\n  }\n  if (!responseURL.includes('save_error_logger')) store.dispatch('addErrorLog', info)\n}\n\nclass HttpRequest {\n  constructor (baseUrl = baseURL) {\n    this.baseUrl = baseUrl\n    this.queue = {}\n  }\n  getInsideConfig () {\n    const config = {\n      baseURL: this.baseUrl,\n      headers: {\n        //\n      }\n    }\n    return config\n  }\n  destroy (url) {\n    delete this.queue[url]\n    if (!Object.keys(this.queue).length) {\n      // Spin.hide()\n    }\n  }\n  interceptors (instance, url) {\n    // 请求拦截\n    instance.interceptors.request.use(config => {\n      // 添加全局的loading...\n      if (!Object.keys(this.queue).length) {\n        // Spin.show() // 不建议开启，因为界面不友好\n      }\n      this.queue[url] = true\n      return config\n    }, error => {\n      return Promise.reject(error)\n    })\n    // 响应拦截\n    instance.interceptors.response.use(res => {\n      this.destroy(url)\n      const { data, status } = res\n      return { data, status }\n    }, error => {\n      this.destroy(url)\n      addErrorLog(error.response)\n      return Promise.reject(error)\n    })\n  }\n  request (options) {\n    const instance = axios.create()\n    options = Object.assign(this.getInsideConfig(), options)\n    this.interceptors(instance, options.url)\n    return instance(options)\n  }\n}\nexport default HttpRequest\n"]}]}