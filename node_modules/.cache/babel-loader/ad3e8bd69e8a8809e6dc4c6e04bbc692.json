{"remainingRequest":"/Users/szt/Documents/szt/iview-admin/node_modules/thread-loader/dist/cjs.js!/Users/szt/Documents/szt/iview-admin/node_modules/babel-loader/lib/index.js!/Users/szt/Documents/szt/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Documents/szt/iview-admin/src/components/editor/editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/szt/Documents/szt/iview-admin/src/components/editor/editor.vue","mtime":1539597142000},{"path":"/Users/szt/Documents/szt/iview-admin/.babelrc","mtime":1539597141000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":1539597352000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\nimport Editor from 'wangeditor';\nimport 'wangeditor/release/wangEditor.min.css';\nimport { oneOf } from '@/libs/tools';\nexport default {\n  name: 'Editor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n\n    /**\n     * 绑定的值的类型, enum: ['html', 'text']\n     */\n    valueType: {\n      type: String,\n      default: 'html',\n      validator: function validator(val) {\n        return oneOf(val, ['html', 'text']);\n      }\n    },\n\n    /**\n     * @description 设置change事件触发时间间隔\n     */\n    changeInterval: {\n      type: Number,\n      default: 200\n    },\n\n    /**\n     * @description 是否开启本地存储\n     */\n    cache: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    editorId: function editorId() {\n      return \"editor\".concat(this._uid);\n    }\n  },\n  methods: {\n    setHtml: function setHtml(val) {\n      this.editor.txt.html(val);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.editor = new Editor(\"#\".concat(this.editorId));\n\n    this.editor.customConfig.onchange = function (html) {\n      var text = _this.editor.txt.text();\n\n      if (_this.cache) localStorage.editorCache = html;\n\n      _this.$emit('input', _this.valueType === 'html' ? html : text);\n\n      _this.$emit('on-change', html, text);\n    };\n\n    this.editor.customConfig.onchangeTimeout = this.changeInterval; // create这个方法一定要在所有配置项之后调用\n\n    this.editor.create(); // 如果本地有存储加载本地存储内容\n\n    var html = this.value || localStorage.editorCache;\n    if (html) this.editor.txt.html(html);\n  }\n};",{"version":3,"sources":["editor.vue"],"names":[],"mappings":";;;;;;;;;;AAOA,OAAA,MAAA,MAAA,YAAA;AACA,OAAA,uCAAA;AACA,SAAA,KAAA,QAAA,cAAA;AACA,eAAA;AACA,QAAA,QADA;AAEA,SAAA;AACA,WAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KADA;;AAKA;;;AAGA,eAAA;AACA,YAAA,MADA;AAEA,eAAA,MAFA;AAGA,iBAAA,mBAAA,GAAA,EAAA;AACA,eAAA,MAAA,GAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CAAA,CAAA;AACA;AALA,KARA;;AAeA;;;AAGA,oBAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA,KAlBA;;AAsBA;;;AAGA,WAAA;AACA,YAAA,OADA;AAEA,eAAA;AAFA;AAzBA,GAFA;AAgCA,YAAA;AACA,YADA,sBACA;AACA,6BAAA,KAAA,IAAA;AACA;AAHA,GAhCA;AAqCA,WAAA;AACA,WADA,mBACA,GADA,EACA;AACA,WAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA;AACA;AAHA,GArCA;AA0CA,SA1CA,qBA0CA;AAAA;;AACA,SAAA,MAAA,GAAA,IAAA,MAAA,YAAA,KAAA,QAAA,EAAA;;AACA,SAAA,MAAA,CAAA,YAAA,CAAA,QAAA,GAAA,UAAA,IAAA,EAAA;AACA,UAAA,OAAA,MAAA,MAAA,CAAA,GAAA,CAAA,IAAA,EAAA;;AACA,UAAA,MAAA,KAAA,EAAA,aAAA,WAAA,GAAA,IAAA;;AACA,YAAA,KAAA,CAAA,OAAA,EAAA,MAAA,SAAA,KAAA,MAAA,GAAA,IAAA,GAAA,IAAA;;AACA,YAAA,KAAA,CAAA,WAAA,EAAA,IAAA,EAAA,IAAA;AACA,KALA;;AAMA,SAAA,MAAA,CAAA,YAAA,CAAA,eAAA,GAAA,KAAA,cAAA,CARA,CASA;;AACA,SAAA,MAAA,CAAA,MAAA,GAVA,CAWA;;AACA,QAAA,OAAA,KAAA,KAAA,IAAA,aAAA,WAAA;AACA,QAAA,IAAA,EAAA,KAAA,MAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA;AAxDA,CAAA","sourcesContent":["<template>\n  <div class=\"editor-wrapper\">\n    <div :id=\"editorId\"></div>\n  </div>\n</template>\n\n<script>\nimport Editor from 'wangeditor'\nimport 'wangeditor/release/wangEditor.min.css'\nimport { oneOf } from '@/libs/tools'\nexport default {\n  name: 'Editor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    /**\n     * 绑定的值的类型, enum: ['html', 'text']\n     */\n    valueType: {\n      type: String,\n      default: 'html',\n      validator: (val) => {\n        return oneOf(val, ['html', 'text'])\n      }\n    },\n    /**\n     * @description 设置change事件触发时间间隔\n     */\n    changeInterval: {\n      type: Number,\n      default: 200\n    },\n    /**\n     * @description 是否开启本地存储\n     */\n    cache: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    editorId () {\n      return `editor${this._uid}`\n    }\n  },\n  methods: {\n    setHtml (val) {\n      this.editor.txt.html(val)\n    }\n  },\n  mounted () {\n    this.editor = new Editor(`#${this.editorId}`)\n    this.editor.customConfig.onchange = (html) => {\n      let text = this.editor.txt.text()\n      if (this.cache) localStorage.editorCache = html\n      this.$emit('input', this.valueType === 'html' ? html : text)\n      this.$emit('on-change', html, text)\n    }\n    this.editor.customConfig.onchangeTimeout = this.changeInterval\n    // create这个方法一定要在所有配置项之后调用\n    this.editor.create()\n    // 如果本地有存储加载本地存储内容\n    let html = this.value || localStorage.editorCache\n    if (html) this.editor.txt.html(html)\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/components/editor"}]}