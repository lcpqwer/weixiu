{"remainingRequest":"/Users/szt/Documents/szt/iview-admin/node_modules/thread-loader/dist/cjs.js!/Users/szt/Documents/szt/iview-admin/node_modules/babel-loader/lib/index.js!/Users/szt/Documents/szt/iview-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/szt/Documents/szt/iview-admin/src/components/main/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/szt/Documents/szt/iview-admin/src/components/main/main.vue","mtime":1539597142000},{"path":"/Users/szt/Documents/szt/iview-admin/.babelrc","mtime":1539597141000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":1539597352000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/szt/Documents/szt/iview-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Users/szt/Documents/szt/iview-admin/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SideMenu from './components/side-menu';\nimport HeaderBar from './components/header-bar';\nimport TagsNav from './components/tags-nav';\nimport User from './components/user';\nimport Fullscreen from './components/fullscreen';\nimport Language from './components/language';\nimport ErrorStore from './components/error-store';\nimport { mapMutations, mapActions, mapGetters } from 'vuex';\nimport { getNewTagList, getNextRoute, routeEqual } from '@/libs/util';\nimport minLogo from '@/assets/images/logo-min.jpg';\nimport maxLogo from '@/assets/images/logo.jpg';\nimport './main.less';\nexport default {\n  name: 'Main',\n  components: {\n    SideMenu: SideMenu,\n    HeaderBar: HeaderBar,\n    Language: Language,\n    TagsNav: TagsNav,\n    Fullscreen: Fullscreen,\n    ErrorStore: ErrorStore,\n    User: User\n  },\n  data: function data() {\n    return {\n      collapsed: false,\n      minLogo: minLogo,\n      maxLogo: maxLogo,\n      isFullscreen: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['errorCount']), {\n    tagNavList: function tagNavList() {\n      return this.$store.state.app.tagNavList;\n    },\n    tagRouter: function tagRouter() {\n      return this.$store.state.app.tagRouter;\n    },\n    userAvator: function userAvator() {\n      return this.$store.state.user.avatorImgPath;\n    },\n    cacheList: function cacheList() {\n      return this.tagNavList.length ? this.tagNavList.filter(function (item) {\n        return !(item.meta && item.meta.notCache);\n      }).map(function (item) {\n        return item.name;\n      }) : [];\n    },\n    menuList: function menuList() {\n      return this.$store.getters.menuList;\n    },\n    local: function local() {\n      return this.$store.state.app.local;\n    },\n    hasReadErrorPage: function hasReadErrorPage() {\n      return this.$store.state.app.hasReadErrorPage;\n    }\n  }),\n  methods: _objectSpread({}, mapMutations(['setBreadCrumb', 'setTagNavList', 'addTag', 'setLocal']), mapActions(['handleLogin']), {\n    turnToPage: function turnToPage(route) {\n      var _ref = {},\n          name = _ref.name,\n          params = _ref.params,\n          query = _ref.query;\n      if (typeof route === 'string') name = route;else {\n        name = route.name;\n        params = route.params;\n        query = route.query;\n      }\n\n      if (name.indexOf('isTurnByHref_') > -1) {\n        window.open(name.split('_')[1]);\n        return;\n      }\n\n      this.$router.push({\n        name: name,\n        params: params,\n        query: query\n      });\n    },\n    handleCollapsedChange: function handleCollapsedChange(state) {\n      this.collapsed = state;\n    },\n    handleCloseTag: function handleCloseTag(res, type, route) {\n      if (type === 'all') {\n        this.turnToPage('home');\n      } else if (routeEqual(this.$route, route)) {\n        if (type === 'others') {} else {\n          var nextRoute = getNextRoute(this.tagNavList, route);\n          this.$router.push(nextRoute);\n        }\n      }\n\n      this.setTagNavList(res);\n    },\n    handleClick: function handleClick(item) {\n      this.turnToPage(item);\n    }\n  }),\n  watch: {\n    '$route': function $route(newRoute) {\n      var name = newRoute.name,\n          query = newRoute.query,\n          params = newRoute.params,\n          meta = newRoute.meta;\n      this.addTag({\n        route: {\n          name: name,\n          query: query,\n          params: params,\n          meta: meta\n        },\n        type: 'push'\n      });\n      this.setBreadCrumb(newRoute);\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute));\n      this.$refs.sideMenu.updateOpenName(newRoute.name);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    /**\n     * @description 初始化设置面包屑导航和标签导航\n     */\n    this.setTagNavList();\n    this.addTag({\n      route: this.$store.state.app.homeRoute\n    });\n    this.setBreadCrumb(this.$route); // 设置初始语言\n\n    this.setLocal(this.$i18n.locale); // 如果当前打开页面不在标签栏中，跳到homeName页\n\n    if (!this.tagNavList.find(function (item) {\n      return item.name === _this.$route.name;\n    })) {\n      this.$router.push({\n        name: this.$config.homeName\n      });\n    }\n  }\n};",{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <Layout style=\"height: 100%\" class=\"main\">\n    <Sider hide-trigger collapsible :width=\"256\" :collapsed-width=\"64\" v-model=\"collapsed\" class=\"left-sider\" :style=\"{overflow: 'hidden'}\">\n      <side-menu accordion ref=\"sideMenu\" :active-name=\"$route.name\" :collapsed=\"collapsed\" @on-select=\"turnToPage\" :menu-list=\"menuList\">\n        <!-- 需要放在菜单上面的内容，如Logo，写在side-menu标签内部，如下 -->\n        <div class=\"logo-con\">\n          <img v-show=\"!collapsed\" :src=\"maxLogo\" key=\"max-logo\" />\n          <img v-show=\"collapsed\" :src=\"minLogo\" key=\"min-logo\" />\n        </div>\n      </side-menu>\n    </Sider>\n    <Layout>\n      <Header class=\"header-con\">\n        <header-bar :collapsed=\"collapsed\" @on-coll-change=\"handleCollapsedChange\">\n          <user :user-avator=\"userAvator\"/>\n          <language v-if=\"$config.useI18n\" @on-lang-change=\"setLocal\" style=\"margin-right: 10px;\" :lang=\"local\"/>\n          <error-store v-if=\"$config.plugin['error-store'] && $config.plugin['error-store'].showInHeader\" :has-read=\"hasReadErrorPage\" :count=\"errorCount\"></error-store>\n          <fullscreen v-model=\"isFullscreen\" style=\"margin-right: 10px;\"/>\n        </header-bar>\n      </Header>\n      <Content class=\"main-content-con\">\n        <Layout class=\"main-layout-con\">\n          <div class=\"tag-nav-wrapper\">\n            <tags-nav :value=\"$route\" @input=\"handleClick\" :list=\"tagNavList\" @on-close=\"handleCloseTag\"/>\n          </div>\n          <Content class=\"content-wrapper\">\n            <keep-alive :include=\"cacheList\">\n              <router-view/>\n            </keep-alive>\n          </Content>\n        </Layout>\n      </Content>\n    </Layout>\n  </Layout>\n</template>\n<script>\nimport SideMenu from './components/side-menu'\nimport HeaderBar from './components/header-bar'\nimport TagsNav from './components/tags-nav'\nimport User from './components/user'\nimport Fullscreen from './components/fullscreen'\nimport Language from './components/language'\nimport ErrorStore from './components/error-store'\nimport { mapMutations, mapActions, mapGetters } from 'vuex'\nimport { getNewTagList, getNextRoute, routeEqual } from '@/libs/util'\nimport minLogo from '@/assets/images/logo-min.jpg'\nimport maxLogo from '@/assets/images/logo.jpg'\nimport './main.less'\nexport default {\n  name: 'Main',\n  components: {\n    SideMenu,\n    HeaderBar,\n    Language,\n    TagsNav,\n    Fullscreen,\n    ErrorStore,\n    User\n  },\n  data () {\n    return {\n      collapsed: false,\n      minLogo,\n      maxLogo,\n      isFullscreen: false\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'errorCount'\n    ]),\n    tagNavList () {\n      return this.$store.state.app.tagNavList\n    },\n    tagRouter () {\n      return this.$store.state.app.tagRouter\n    },\n    userAvator () {\n      return this.$store.state.user.avatorImgPath\n    },\n    cacheList () {\n      return this.tagNavList.length ? this.tagNavList.filter(item => !(item.meta && item.meta.notCache)).map(item => item.name) : []\n    },\n    menuList () {\n      return this.$store.getters.menuList\n    },\n    local () {\n      return this.$store.state.app.local\n    },\n    hasReadErrorPage () {\n      return this.$store.state.app.hasReadErrorPage\n    }\n  },\n  methods: {\n    ...mapMutations([\n      'setBreadCrumb',\n      'setTagNavList',\n      'addTag',\n      'setLocal'\n    ]),\n    ...mapActions([\n      'handleLogin'\n    ]),\n    turnToPage (route) {\n      let { name, params, query } = {}\n      if (typeof route === 'string') name = route\n      else {\n        name = route.name\n        params = route.params\n        query = route.query\n      }\n      if (name.indexOf('isTurnByHref_') > -1) {\n        window.open(name.split('_')[1])\n        return\n      }\n      this.$router.push({\n        name,\n        params,\n        query\n      })\n    },\n    handleCollapsedChange (state) {\n      this.collapsed = state\n    },\n    handleCloseTag (res, type, route) {\n      if (type === 'all') {\n        this.turnToPage('home')\n      } else if (routeEqual(this.$route, route)) {\n        if (type === 'others') {\n        } else {\n          const nextRoute = getNextRoute(this.tagNavList, route)\n          this.$router.push(nextRoute)\n        }\n      }\n      this.setTagNavList(res)\n    },\n    handleClick (item) {\n      this.turnToPage(item)\n    }\n  },\n  watch: {\n    '$route' (newRoute) {\n      const { name, query, params, meta } = newRoute\n      this.addTag({\n        route: { name, query, params, meta },\n        type: 'push'\n      })\n      this.setBreadCrumb(newRoute)\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute))\n      this.$refs.sideMenu.updateOpenName(newRoute.name)\n    }\n  },\n  mounted () {\n    /**\n     * @description 初始化设置面包屑导航和标签导航\n     */\n    this.setTagNavList()\n    this.addTag({\n      route: this.$store.state.app.homeRoute\n    })\n    this.setBreadCrumb(this.$route)\n    // 设置初始语言\n    this.setLocal(this.$i18n.locale)\n    // 如果当前打开页面不在标签栏中，跳到homeName页\n    if (!this.tagNavList.find(item => item.name === this.$route.name)) {\n      this.$router.push({\n        name: this.$config.homeName\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/main"}]}