{"remainingRequest":"/Users/szt/Desktop/iview-admin/node_modules/thread-loader/dist/cjs.js!/Users/szt/Desktop/iview-admin/node_modules/babel-loader/lib/index.js!/Users/szt/Desktop/iview-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/szt/Desktop/iview-admin/src/store/module/user.js","dependencies":[{"path":"/Users/szt/Desktop/iview-admin/src/store/module/user.js","mtime":1539597142000},{"path":"/Users/szt/Desktop/iview-admin/.babelrc","mtime":1539597141000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/szt/Desktop/iview-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport { login, logout, getUserInfo as _getUserInfo } from '@/api/user';\nimport { setToken as _setToken, getToken } from '@/libs/util';\nexport default {\n  state: {\n    userName: '',\n    userId: '',\n    avatorImgPath: '',\n    token: getToken(),\n    access: '',\n    hasGetInfo: false\n  },\n  mutations: {\n    setAvator: function setAvator(state, avatorPath) {\n      state.avatorImgPath = avatorPath;\n    },\n    setUserId: function setUserId(state, id) {\n      state.userId = id;\n    },\n    setUserName: function setUserName(state, name) {\n      state.userName = name;\n    },\n    setAccess: function setAccess(state, access) {\n      state.access = access;\n    },\n    setToken: function setToken(state, token) {\n      state.token = token;\n\n      _setToken(token);\n    },\n    setHasGetInfo: function setHasGetInfo(state, status) {\n      state.hasGetInfo = status;\n    }\n  },\n  actions: {\n    // 登录\n    handleLogin: function handleLogin(_ref, _ref2) {\n      var commit = _ref.commit;\n      var userName = _ref2.userName,\n          password = _ref2.password;\n      userName = userName.trim();\n      return new Promise(function (resolve, reject) {\n        login({\n          userName: userName,\n          password: password\n        }).then(function (res) {\n          var data = res.data;\n          commit('setToken', data.token);\n          resolve();\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    },\n    // 退出登录\n    handleLogOut: function handleLogOut(_ref3) {\n      var state = _ref3.state,\n          commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        logout(state.token).then(function () {\n          commit('setToken', '');\n          commit('setAccess', []);\n          resolve();\n        }).catch(function (err) {\n          reject(err);\n        }); // 如果你的退出登录无需请求接口，则可以直接使用下面三行代码而无需使用logout调用接口\n        // commit('setToken', '')\n        // commit('setAccess', [])\n        // resolve()\n      });\n    },\n    // 获取用户相关信息\n    getUserInfo: function getUserInfo(_ref4) {\n      var state = _ref4.state,\n          commit = _ref4.commit;\n      return new Promise(function (resolve, reject) {\n        try {\n          _getUserInfo(state.token).then(function (res) {\n            var data = res.data;\n            commit('setAvator', data.avator);\n            commit('setUserName', data.name);\n            commit('setUserId', data.user_id);\n            commit('setAccess', data.access);\n            commit('setHasGetInfo', true);\n            resolve(data);\n          }).catch(function (err) {\n            reject(err);\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/szt/Desktop/iview-admin/src/store/module/user.js"],"names":["login","logout","getUserInfo","setToken","getToken","state","userName","userId","avatorImgPath","token","access","hasGetInfo","mutations","setAvator","avatorPath","setUserId","id","setUserName","name","setAccess","setHasGetInfo","status","actions","handleLogin","commit","password","trim","Promise","resolve","reject","then","res","data","catch","err","handleLogOut","avator","user_id","error"],"mappings":"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","sourcesContent":["import { login, logout, getUserInfo } from '@/api/user'\nimport { setToken, getToken } from '@/libs/util'\n\nexport default {\n  state: {\n    userName: '',\n    userId: '',\n    avatorImgPath: '',\n    token: getToken(),\n    access: '',\n    hasGetInfo: false\n  },\n  mutations: {\n    setAvator (state, avatorPath) {\n      state.avatorImgPath = avatorPath\n    },\n    setUserId (state, id) {\n      state.userId = id\n    },\n    setUserName (state, name) {\n      state.userName = name\n    },\n    setAccess (state, access) {\n      state.access = access\n    },\n    setToken (state, token) {\n      state.token = token\n      setToken(token)\n    },\n    setHasGetInfo (state, status) {\n      state.hasGetInfo = status\n    }\n  },\n  actions: {\n    // 登录\n    handleLogin ({ commit }, {userName, password}) {\n      userName = userName.trim()\n      return new Promise((resolve, reject) => {\n        login({\n          userName,\n          password\n        }).then(res => {\n          const data = res.data\n          commit('setToken', data.token)\n          resolve()\n        }).catch(err => {\n          reject(err)\n        })\n      })\n    },\n    // 退出登录\n    handleLogOut ({ state, commit }) {\n      return new Promise((resolve, reject) => {\n        logout(state.token).then(() => {\n          commit('setToken', '')\n          commit('setAccess', [])\n          resolve()\n        }).catch(err => {\n          reject(err)\n        })\n        // 如果你的退出登录无需请求接口，则可以直接使用下面三行代码而无需使用logout调用接口\n        // commit('setToken', '')\n        // commit('setAccess', [])\n        // resolve()\n      })\n    },\n    // 获取用户相关信息\n    getUserInfo ({ state, commit }) {\n      return new Promise((resolve, reject) => {\n        try {\n          getUserInfo(state.token).then(res => {\n            const data = res.data\n            commit('setAvator', data.avator)\n            commit('setUserName', data.name)\n            commit('setUserId', data.user_id)\n            commit('setAccess', data.access)\n            commit('setHasGetInfo', true)\n            resolve(data)\n          }).catch(err => {\n            reject(err)\n          })\n        } catch (error) {\n          reject(error)\n        }\n      })\n    }\n  }\n}\n"]}]}